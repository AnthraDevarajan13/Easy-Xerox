%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Untitled-5-01.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Анита
%%CreationDate: 19.02.2019
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="пїњ" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2019-02-19T11:35:55+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-02-19T11:35:55+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-02-19T11:35:55+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS6 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FWmYKN8QFU2lJ6bZMRRawsx6nDSGsVbqcVbDuO+NJXCY9xg4Vt&#xA;eJVPtkeFbXAg9MCXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWmYKK/&#xA;dhAVQJJNTk2LWKuxV2KuxV2KuxV2KtgkdMVXiVh13wcKbXrIp70+eRpNrsCuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVQduTe3bJgIWkgCp2A6nChC2mp2l5LNHbt6ggIV5BunI9g&#xA;cjGYJ2b8unnjAMtuL5orJNC5ELfLxwEpVfTTwyNlNMI/N7zrqHkjye+t6dbwXd168VvHb3DuoYyk&#xA;j4FQEu232artU12oc/s/TjPk4JEgU15JcItk+mHUTp9udTEQ1AxqboW/L0hJT4gnIluNelcxp8Nn&#xA;h5MgicgrsVdirsVXB2HQ40q8TeI+7I8KbXCRD3wUldUeOBWuS+IxpWjKg98NLa0zeAw8KLa9ZvAY&#xA;eFbb5yceVBTBQVr1j4Y8K2qK3LtTAQlvArsVdirsVdirsVdirsVWyGiHCFQN1eW1pC01zII4l3LH&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:BFEB0471CC2168118083EDC7C5BB7484</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:BFEB0471CC2168118083EDC7C5BB7484</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:50028b9f-e3a8-cf4b-8101-5039b421f535</stRef:instanceID>
            <stRef:documentID>xmp.did:DBC784DB5C2068118083EDC7C5BB7484</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:DBC784DB5C2068118083EDC7C5BB7484</stEvt:instanceID>
                  <stEvt:when>2019-02-14T21:47:25+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BFEB0471CC2168118083EDC7C5BB7484</stEvt:instanceID>
                  <stEvt:when>2019-02-19T11:35:55+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=238 G=242 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>238</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=213 G=220 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>213</xmpG:red>
                           <xmpG:green>220</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
287.234 401.822 mo
287.002 401.822 286.766 401.822 286.532 401.821 cv
287.933 401.821 li
287.701 401.822 287.467 401.822 287.234 401.822 cv
457.086 199.921 mo
457.086 199.728 li
457.073 182.311 453.569 163.31 444.972 141.988 cv
426.483 96.1162 383.901 79.8101 343.734 79.8101 cv
330.402 79.8101 317.331 81.6079 305.502 84.7173 cv
298.327 86.6037 291.612 87.431 285.112 87.431 cv
248.618 87.431 219.101 61.3137 155.563 49.8257 cv
148.378 48.5263 141.749 47.9289 135.63 47.9289 cv
86.3913 47.9289 70.4535 86.6537 67.8688 110.033 cv
67.8688 110.033 li
70.4535 86.6537 86.3913 47.9289 135.63 47.9289 cv
141.749 47.9289 148.378 48.5263 155.563 49.8257 cv
219.101 61.3137 248.618 87.431 285.112 87.431 cv
291.612 87.431 298.327 86.6037 305.502 84.7173 cv
317.331 81.6079 330.402 79.8101 343.734 79.8101 cv
383.901 79.8101 426.483 96.1162 444.972 141.988 cv
453.601 163.388 457.099 182.452 457.086 199.921 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[-1.62076e-05 370.787 -370.787 -1.62076e-05 245.534 64.248 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.933333 .94902 1 ]
/C1 [.835294 .862745 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.835294 .862745 1 ]
/C1 [.835294 .862745 1 ]
/N 1 
>>
]
/Bounds [.985001 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-1.62076e-05 370.787 -370.787 -1.62076e-05 245.534 64.248 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~mHs<.mHs<.mHs<-m-O**m-O**m-F!'lg*m&lg*m%lK[["lK[["lKRQtl07Hsl07Hrkih6okih6oki_-l
kND$kkND$jk2tggk2tggk2k^djlPUcjlPUbjQ,C_jQ,C_jQ#:\j5]1[j5]1Zio8tWio8tWio8qUiSibS
iSibSi8EPOi8EPOi8EMMhr!>Khr!>KhVR,GhVR,GhVR)Eh;-oCh;-oCgt^]?gt^]?gt^Z=gY:K;gY:K;
g=k97g=k97g=k65g"G'3g"G'3f\"j/f\"j/f\"g-f@SX+f@SX+f%/F'f%/F'f%/F&e^`4#e^`4#e^W*u
~>
<~naZ/>naZ/>naZ/>nF5r:nF5r:nF5r9n*f`6n*f`6n*f`5mdBN2mdBN2mdBK0mHs<.mHs<.mHs9,m-O**
m-O**m-F!'lg*m&lg*m&lg!d#lK[["lK[["l07Hsl07Hsl07Hskih6okih6okih6nkND$kkND$kkND$j
k2tggk2tggk2tdejlPUcjlPUcjlPRajQ,C_jQ,C_jQ#:\j5]1[j5]1[io8tWio8tWio8tWiSibSiSibS
iSibRi8EPOi8EPOi8EPNhr!>Khr!>Khr!;IhVR,GhVR,GhVR)Eh;-oCh;-oCh;$f@gt^]?gt^]?gtUT<
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
gsave
33.9824 47.9287 mo
457.086 47.9287 li
457.086 401.821 li
33.9824 401.821 li
33.9824 47.9287 li
clp
287.933 401.821 mo
286.532 401.821 li
279.818 401.813 272.595 401.681 264.741 401.443 cv
220.641 400.093 165.634 401.683 129.943 398.432 cv
128.415 398.291 126.923 398.148 125.476 397.988 cv
125.467 397.988 li
124.836 397.918 124.215 397.847 123.603 397.775 cv
123.593 397.775 li
123.434 397.758 123.282 397.74 123.131 397.722 cv
114.011 396.639 106.525 395.146 101.294 393.086 cv
100.788 392.892 100.309 392.651 99.8472 392.367 cv
99.6606 392.27 99.4829 392.154 99.314 392.029 cv
98.4082 391.417 97.5913 390.661 96.8448 389.773 cv
95.6109 388.3 94.5718 386.453 93.7017 384.294 cv
92.6445 381.711 91.8189 378.699 91.1436 375.36 cv
90.9487 374.419 90.771 373.442 90.5932 372.439 cv
90.0513 369.295 89.6075 365.921 89.1987 362.396 cv
89.1367 361.862 89.0747 361.33 89.0126 360.787 cv
89.0039 360.646 88.9858 360.503 88.9683 360.361 cv
88.4707 355.868 88.0176 351.161 87.4854 346.41 cv
87.4321 345.983 li
86.6236 338.8 85.6201 331.509 84.0307 324.67 cv
83.9951 324.528 83.9594 324.396 83.9239 324.253 cv
83.5776 322.779 83.1958 321.332 82.7876 319.901 cv
82.752 319.769 82.707 319.635 82.663 319.502 cv
82.1836 317.851 81.6597 316.234 81.0645 314.671 cv
81.02 314.529 80.9668 314.387 80.913 314.244 cv
79.5455 310.621 77.9028 307.265 75.896 304.271 cv
73.4893 300.685 70.8609 296.759 68.1255 292.576 cv
52.7214 268.989 33.9819 236.907 33.9826 207.56 cv
33.9827 203.628 34.3192 199.745 35.0454 195.937 cv
41.1222 164.065 61.9348 147.142 66.7116 129.47 cv
71.0449 132.849 78.2201 135.306 89.0126 135.306 cv
94.5692 135.306 101.162 135.306 108.111 135.306 cv
108.226 137.652 108.774 140.195 109.897 142.892 cv
111.407 146.511 114.041 149.667 115.926 151.628 cv
115.447 152.363 115.375 153.04 115.827 153.666 cv
116.492 154.586 120.021 159.47 120.021 159.47 cv
120.021 159.47 120.489 159.748 121.663 159.748 cv
122.992 159.748 125.226 159.391 128.715 157.87 cv
131.323 156.731 133.583 155.366 135.556 153.913 cv
135.556 153.913 li
135.556 153.913 li
138.554 151.706 140.887 149.296 142.765 147.181 cv
145.385 144.229 146.234 142.231 146.235 141.395 cv
146.235 141.237 146.206 141.121 146.152 141.047 cv
145.84 140.616 142.493 135.986 142.002 135.306 cv
155.527 135.306 165.622 135.306 165.622 135.306 cv
165.622 135.306 193.228 130.923 186.651 118.342 cv
180.076 105.762 170.649 113.845 169.146 99.4428 cv
167.995 88.4209 158.069 77.5299 148.013 77.5299 cv
144.929 77.5299 141.833 78.5538 138.974 80.9121 cv
129.417 88.7956 123.093 99.4897 118.769 99.4902 cv
117.58 99.4904 116.543 98.6835 115.631 96.7895 cv
114.183 93.7819 111.693 91.83 108.68 90.734 cv
108.034 90.1014 107.604 89.7588 107.604 89.7588 cv
106.972 90.2157 li
106.972 90.2157 li
107.604 89.7588 li
105.251 86.5039 li
107.606 84.8017 li
106.414 83.1528 li
96.8379 90.0749 li
94.1722 90.5506 91.5549 91.3829 89.2094 92.4858 cv
86.019 93.9859 85.0003 97.5775 84.6258 101.414 cv
82.2055 103.163 li
84.3831 106.175 li
84.2625 110.52 84.1561 114.159 81.6362 114.159 cv
81.0773 114.159 80.4004 113.98 79.5776 113.59 cv
74.7295 111.294 71.8216 109.795 69.4299 109.795 cv
68.8886 109.795 68.3738 109.872 67.8688 110.033 cv
70.4535 86.6537 86.3913 47.9289 135.63 47.9289 cv
141.749 47.9289 148.378 48.5263 155.563 49.8257 cv
219.101 61.3137 248.618 87.431 285.112 87.431 cv
291.612 87.431 298.327 86.6037 305.502 84.7173 cv
317.331 81.6079 330.402 79.8101 343.734 79.8101 cv
383.901 79.8101 426.483 96.1162 444.972 141.988 cv
453.569 163.31 457.073 182.311 457.086 199.728 cv
457.086 199.921 li
457.07 221.286 451.802 240.266 444.244 258.217 cv
442.787 261.689 441.242 265.117 439.635 268.519 cv
436.944 274.202 434.066 279.814 431.118 285.383 cv
410.816 323.711 416.928 359.438 387.337 378.31 cv
385.862 379.269 384.291 380.165 382.621 381.026 cv
380.499 382.119 378.412 383.167 376.36 384.152 cv
376.165 384.25 375.97 384.348 375.774 384.437 cv
373.377 385.601 371.023 386.684 368.688 387.705 cv
368.555 387.767 368.422 387.82 368.297 387.882 cv
364.256 389.641 360.287 391.203 356.299 392.59 cv
337.154 399.252 317.609 401.782 287.933 401.821 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 500 ]ct
[424.8 0 0 355.68 33.12 97.28 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 885 
/H 741 
/M[885 0 0 -741 0 741 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 885 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 885 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 885 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
K(X`gK(X`gK(X`gL@tN>K(jlkK(jlkK(jlkMYHrHK)^H&K)^H&K)^H&NrSeFK(X`gK(X`gK(X`gP4aG$
K(jlkK(jlkK(k#orVqKLK)^H&K)^H&K)^`.q=T@4K(X`gK(X`gK(Y/sp%O(4K(jlkK(jlkK(kH&K)^H&
K)^H&K)^H&LB%5FK(X`gK(X`gK(X`gMY6f>K(jlkK(jlkK(jlkNq`5HK)^H&K)^H&K)^H&P5g.,K(X`g
K(X`gK(XlkrV(p<K(jlkK(jlkK(k/sq>Z'HK)^H&K)^H&K)^l2p%<q0K(X`gK(X`gK(Y<"K(jlkK(jlk
K(jlkLA1ZHK)^H&K)^H&K)^H&MZ<MFK(X`gK(X`gK(X`gNqN)>K(jlkK(jlkK(jlkP4sS.K)^H&K)^H&
K)^T*rUkd8K(X`gK(X`gK(Y#oq=fL8K(jlkK(jlkK(k<"p&BXDK)^H&K)^H&K)_#6K(X`gK(X`gK(X`g
L@tN>K(jlkK(jlkK(jlkMYHrHK)^H&K)^H&K)^H&NrSeFK(X`gK(X`gK(X`gP4aG$K(jlkK(jlkK(k#o
rVqKLK)^H&K)^H&K)^`.q=T@4K(X`gK(X`gK(Y/sp%O(4K(jlkK(jlkK(kH&K)^H&K)^H&K)^H&LB%5F
K(X`gK(X`gK(X`gMY6f>K(jlkK(jlkK(jlkNq`5HK)^H&K)^H&K)^H&P5g.,K(X`gK(X`gK(XlkrV(p<
K(jlkK(jlkK(k/sq>Z'HK)^H&K)^H&K)^l2p%<q0K(X`gK(X`gK(Y<"K(jlkK(jlkK(jlkLA1ZHK)^H&
K)^H&K)^H&MZ<MFK(X`gK(X`gK(X`gNqN)>K(jlkK(jlkK(jlkP4sS.K)^H&K)^H&K)^T*rUkd8K(X`g
K(X`gK(Y#oq=fL8K(jlkK(jlkK(k<"p&BXDK)^H&K)^H&K)_#6K(X`gK(X`gK(X`gL@tN>K(jlkK(jlk
K(jlkMYHrHK)^H&K)^H&K)^H&NrSeFK(X`gK(X`gK(X`gP4aG$K(jlkK(jlkK(k#orVqKLK)^H&K)^H&
K)^`.q=T@4K(X`gK(X`gK(Y/sp%O(4K(jlkK(jlkK(kH&K)^H&K)^H&K)^H&LB%5FK(X`gK(X`gK(X`g
MY6f>K(jlkK(jlkK(jlkNq`5HK)^H&K)^H&K)^H&P5g.,K(X`gK(X`gK(XlkrV(p<K(jlkK(jlkK(k/s
q>Z'HK)^H&K)^H&K)^l2p%<q0K(X`gK(X`gK(Y<"K(jlkK(jlkK(jlkLA1ZHK)^H&K)^H&K)^H&MZ<MF
K(X`gK(X`gK(X`gNqN)>K(jlkK(jlkK(jlkP4sS.K)^H&K)^H&K)^T*rUkd8K(X`gK(X`gK(Y#oq=fL8
K(jlkK(jlkK(k<"p&BXDK)^H&K)^H&K)_#6K(X`gK(X`gK(X`gL@tN>K(jlkK(jlkK(jlkMYHrHK)^H&
K)^H&K)^H&NrSeFK(X`gK(X`gK(X`gP4aG$K(jlkK(jlkK(k#orVqKLK)^H&K)^H&K)^`.q=T@4K(X`g
K(X`gK(Y/sp%O(4K(jlkK(jlkK(kH&K)^H&K)^H&K)^H&LB%5FK(X`gK(X`gK(X`gMY6f>K(jlkK(jlk
K(jlkNq`5HK)^H&K)^H&K)^H&P5g.,K(X`gK(X`gK(XlkrV(p<K(jlkK(jlkK(k/sq>Z'HK)^H&K)^H&
K)^l2p%<q0K(X`gK(X`gK(Y<"K(jlkK(jlkK(jlkLA1ZHK)^H&K)^H&K)^H&MZ<MFK(X`gK(X`gK(X`g
NqN)>K(jlkK(jlkK(jlkP4sS.K)^H&K)^H&K)^T*rUkd8K(X`gK(X`gK(Y#oq=fL8K(jlkK(jlkK(k<"
p&BXDK)^H&K)^H&K)_#6K(X`gK(X`gK(X`gL@tN>K(jlkK(jlkK(jlkMYHrHK)^H&K)^H&K)^H&NrSeF
K(X`gK(X`gK(X`gP4aG$K(jlkK(jlkK(k#orVqKLK)^H&K)^H&K)^`.q=T@4K(X`gK(X`gK(Y/sp%O(4
K(jlkK(jlkK(kH&K)^H&K)^H&K)^H&LB%5FK(X`gK(X`gK(X`gMY6f>K(jlkK(jlkK(jlkNq`5HK)^H&
K)^H&K)^H&P5g.,K(X`gK(X`gK(XlkrV(p<K(jlkK(jlkK(k/sq>Z'HK)^H&K)^H&K)^l2p%<q0K(X`g
K(X`gK(Y<"K(jlkK(jlkK(jlkLA1ZHK)^H&K)^H&K)^H&MZ<MFK(X`gK(X`gK(X`gNqN)>K(jlkK(jlk
K(jlkP4sS.K)^H&K)^H&K)^T*rUkd8K(X`gK(X`gK(Y#oq=fL8K(jlkK(jlkK(k<"p&BXDK)^H&K)^H&
K)_#6K(X`gK(X`gK(X`gL@tN>K(jlkK(jlkK(jlkMYHrHK)^H&K)^H&K)^H&NrSeFK(X`gK(X`gK(X`g
P4aG$K(jlkK(jlkK(k#orVqKLK)^H&K)^H&K)^`.q=T@4K(X`gK(X`gK(Y/sp%O(4K(jlkK(jlkK(kH&
K)^H&K)^H&K)^H&LB%5FK(X`gK(X`gK(X`gMY6f>K(jlkK(jlkK(jlkNq`5HK)^H&K)^H&K)^H&P5g.,
K(X`gK(X`gK(XlkrV(p<K(jlkK(jlkK(k/sq>Z'HK)^H&K)^H&K)^l2p%<q0K(X`gK(X`gK(Y<"K(jlk
K(jlkK(jlkLA1ZHK)^H&K)^H&K)^H&MZ<MFK(X`gK(X`gK(X`gNqN)>K(jlkK(jlkK(jlkP4sS.K)^H&
K)^H&K)^T*rUkd8K(X`gK(X`gK(Y#oq=fL8K(jlkK(jlkK(k<"p&BXDK)^H&K)^H&K)_#6K(X`gK(X`g
K(X`gL@tN>K(jlkK(jlkK(jlkMYHrHK)^H&K)^H&K)^H&NrSeFK(X`gK(X`gK(X`gP4aG$K(jlkK(jlk
K(k#orVqKLK)^H&K)^H&K)^`.q=T@4K(X`gK(X`gK(Y/sp%O(4K(jlkK(jlkK(kH&K)^H&K)^H&K)^H&
LB%5FK(X`gK(X`gK(X`gMY6f>K(jlkK(jlkK(jlkNq`5HK)^H&K)^H&K)^H&P5g.+K(OZeK(OZeK(Ofi
rV(p<K(jlkK(jlkK(k/sq>Z'HK)^H&K)^H&K)^l2p%3k.K(OZeK(OZeK(P5uK(jlkK(jlkK(jlkLA1ZH
K)^H&K)^H&K)^H&MZ<MEK(OZeK(OZeK(OZeNqE#=K(jlkK(jlkK(jlkP4sS.K)^H&K)^H&K)^T*rUb^6
K(OZeK(OZeK(Ormq=fL8K(jlkK(jlkK(k<"p&BXDK)^H&K)^H&K)_#6K(OZeK(OZeK(OZeL@kH=K(jlk
K(jlkK(jlkMYHrHK)^H&K)^H&K)^H&NrSeEK(OZeK(OZeK(OZeP4XA#K(jlkK(jlkK(k#orVqKLK)^H&
K)^H&K)^`.q=K:2K(OZeK(OZeK(P)qp%O(4K(jlkK(jlkK(kH&K)^H&K)^H&K)^H&LB%5EK(OZeK(OZe
K(OZeMY-`=K(jlkK(jlkK(jlkNq`5HK)^H&K)^H&K)^H&P5g.+K(OZeK(OZeK(OfirV(p<K(jlkK(jlk
K(k/sq>Z'HK)^H&K)^H&K)^l2p%3k.K(OZeK(OZeK(P5uK(jlkK(jlkK(jlkLA1ZHK)^H&K)^H&K)^H&
MZ<MEK(OZeK(OZeK(OZeNqE#=K(jlkK(jlkK(jlkP4sS.K)^H&K)^H&K)^T*rUb^6K(OZeK(OZeK(Orm
q=fL8K(jlkK(jlkK(k<"p&BXDK)^H&K)^H&K)_#6K(OZeK(OZeK(OZeL@kH=K(jlkK(jlkK(jlkMYHrH
K)^H&K)^H&K)^H&NrSeEK(OZeK(OZeK(OZeP4XA#K(jlkK(jlkK(k#orVqKLK)^H&K)^H&K)^`.q=K:2
K(OZeK(OZeK(P)qp%O(4K(jlkK(jlkK(kH&K)^H&K)^H&K)^H&LB%5EK(OZeK(OZeK(OZeMY-`=K(jlk
K(jlkK(jlkNq`5HK)^H&K)^H&K)^H&P5g.+K(OZeK(OZeK(OfirV(p<K(jlkK(jlkK(k/sq>Z'HK)^H&
K)^H&K)^l2p%3k.K(OZeK(OZeK(P5uK(jlkK(jlkK(jlkLA1ZHK)^H&K)^H&K)^H&MZ<MEK(OZeK(OZe
K(OZeNqE#=K(jlkK(jlkK(jlkP4sS.K)^H&K)^H&K)^T*rUb^6K(OZeK(OZeK(Ormq=fL8K(jlkK(jlk
K(k<"p&BXDK)^H&K)^H&K)_#6K(OZeK(OZeK(OZeL@kH=K(jlkK(jlkK(jlkMYHrHK)^H&K)^H&K)^H&
NrSeEK(OZeK(OZeK(OZeP4XA#K(jlkK(jlkK(k#orVqKLK)^H&K)^H&K)^`.q=K:2K(OZeK(OZeK(P)q
p%O(4K(jlkK(jlkK(kH&K)^H&K)^H&K)^H&LB%5EK(OZeK(OZeK(OZeMY-`=K(jlkK(jlkK(jlkNq`5H
K)^H&K)^H&K)^H&P5g.+K(OZeK(OZeK(OfirV(p<K(jlkK(jlkK(k/sq>Z'HK)^H&K)^H&K)^l2p%3k.
K(OZeK(OZeK(P5uK(jlkK(jlkK(jlkLA1ZHK)^H&K)^H&K)^H&MZ<MEK(OZeK(OZeK(OZeNqE#=K(jlk
K(jlkK(jlkP4sS.K)^H&K)^H&K)^T*rUb^6K(OZeK(OZeK(Ormq=fL8K(jlkK(jlkK(k<"p&BXDK)^H&
K)^H&K)_#6K(OZeK(OZeK(OZeL@kH=K(jlkK(jlkK(jlkMYHrHK)^H&K)^H&K)^H&NrSeEK(OZeK(OZe
K(OZeP4XA#K(jlkK(jlkK(k#orVqKLK)^H&K)^H&K)^`.q=K:2K(OZeK(OZeK(P)qp%O(4K(jlkK(jlk
K(kH&K)^H&K)^H&K)^H&LB%5EK(OZeK(OZeK(OZeMY-`=K(jlkK(jlkK(jlkNq`5HK)^H&K)^H&K)^H&
P5g.+K(OZeK(OZeK(OfirV(p<K(jlkK(jlkK(k/sq>Z'HK)^H&K)^H&K)^l2p%3k.K(OZeK(OZeK(P5u
K(jlkK(jlkK(jlkLA1ZHK)^H&K)^H&K)^H&MZ<MEK(OZeK(OZeK(OZeNqE#=K(jlkK(jlkK(jlkP4sS.
K)^H&K)^H&K)^T*rUb^6K(OZeK(OZeK(Ormq=fL8K(jlkK(jlkK(k<"p&BXDK)^H&K)^H&K)_#6K(OZe
K(OZeK(OZeL@kH<K(afiK(afiK(afiMY?lGK)^H&K)^H&K)^H&NrSeEK(OZeK(OZeK(OZeP4XA"K(afi
K(afiK(armrVqKLK)^H&K)^H&K)^`.q=K:2K(OZeK(OZeK(P)qp%F"2K(afiK(afiK(bB$K)^H&K)^H&
K)^H&LB%5EK(OZeK(OZeK(OZeMY-`<K(afiK(afiK(afiNqW/GK)^H&K)^H&K)^H&P5g.+K(OZeK(OZe
K(OfirUtj:K(afiK(afiK(b)qq>Z'HK)^H&K)^H&K)^l2p%3k.K(OZeK(OZeK(P5uK(afiK(afiK(afi
LA(TGK)^H&K)^H&K)^H&MZ<MEK(OZeK(OZeK(OZeNqE#<K(afiK(afiK(afiP4jM-K)^H&K)^H&K)^T*
rUb^6K(OZeK(OZeK(Ormq=]F6K(afiK(afiK(b5up&BXDK)^H&K)^H&K)_#6K(OZeK(OZeK(OZeL@kH<
K(afiK(afiK(afiMY?lGK)^H&K)^H&K)^H&NrSeEK(OZeK(OZeK(OZeP4XA"K(afiK(afiK(armrVqKL
K)^H&K)^H&K)^`.q=K:2K(OZeK(OZeK(P)qp%F"2K(afiK(afiK(bB$K)^H&K)^H&K)^H&LB%5EK(OZe
K(OZeK(OZeMY-`<K(afiK(afiK(afiNqW/GK)^H&K)^H&K)^H&P5g.+K(OZeK(OZeK(OfirUtj:K(afi
K(afiK(b)qq>Z'HK)^H&K)^H&K)^l2p%3k.K(OZeK(OZeK(P5uK(afiK(afiK(afiLA(TGK)^H&K)^H&
K)^H&MZ<MEK(OZeK(OZeK(OZeNqE#<K(afiK(afiK(afiP4jM-K)^H&K)^H&K)^T*rUb^6K(OZeK(OZe
K(Ormq=]F6K(afiK(afiK(b5up&BXDK)^H&K)^H&K)_#6K(OZeK(OZeK(OZeL@kH<K(afiK(afiK(afi
MY?lGK)^H&K)^H&K)^H&NrSeEK(OZeK(OZeK(OZeP4XA"K(afiK(afiK(armrVqKLK)^H&K)^H&K)^`.
q=K:2K(OZeK(OZeK(P)qp%F"2K(afiK(afiK(bB$K)^H&K)^H&K)^H&LB%5EK(OZeK(OZeK(OZeMY-`<
K(afiK(afiK(afiNqW/GK)^H&K)^H&K)^H&P5g.+K(OZeK(OZeK(OfirUtj:K(afiK(afiK(b)qq>Z'H
K)^H&K)^H&K)^l2p%3k.K(OZeK(OZeK(P5uK(afiK(afiK(afiLA(TGK)^H&K)^H&K)^H&MZ<MEK(OZe
K(OZeK(OZeNqE#<K(afiK(afiK(afiP4jM-K)^H&K)^H&K)^T*rUb^6K(OZeK(OZeK(Ormq=]F6K(afi
K(afiK(b5up&BXDK)^H&K)^H&K)_#6K(FTcK(FTcK(FTcL@bB;K(afiK(afiK(afiMY?lGK)^H&K)^H&
K)^H&NrSeDK(FTcK(FTcK(FTcP4O;!K(afiK(afiK(armrVqKLK)^H&K)^H&K)^`.q=B40K(FTcK(FTc
K(G#op%F"2K(afiK(afiK(bB$K)^H&K)^H&K)^H&LB%5DK(FTcK(FTcK(FTcMY$Z;K(afiK(afiK(afi
NqW/GK)^H&K)^H&K)^H&P5g.*K(FTcK(FTcK(F`grUtj:K(afiK(afiK(b)qq>Z'HK)^H&K)^H&K)^l2
p%*e,K(FTcK(FTcK(G/sK(afiK(afiK(afiLA(TGK)^H&K)^H&K)^H&MZ<MDK(FTcK(FTcK(FTcNq;r;
K(afiK(afiK(afiP4jM-K)^H&K)^H&K)^T*rUYX4K(FTcK(FTcK(Flkq=]F6K(afiK(afiK(b5up&BXD
K)^H&K)^H&K)_#6K(FTcK(FTcK(FTcL@bB;K(afiK(afiK(afiMY?lGK)^H&K)^H&K)^H&NrSeDK(FTc
K(FTcK(FTcP4O;!K(afiK(afiK(armrVqKLK)^H&K)^H&K)^`.q=B40K(FTcK(FTcK(G#op%F"2K(afi
K(afiK(bB$K)^H&K)^H&K)^H&LB%5DK(FTcK(FTcK(FTcMY$Z;K(afiK(afiK(afiNqW/GK)^H&K)^H&
K)^H&P5g.*K(FTcK(FTcK(F`grUtj:K(afiK(afiK(b)qq>Z'HK)^H&K)^H&K)^l2p%*e,K(FTcK(FTc
K(G/sK(afiK(afiK(afiLA(TGK)^H&K)^H&K)^H&MZ<MDK(FTcK(FTcK(FTcNq;r;K(afiK(afiK(afi
P4jM-K)^H&K)^H&K)^T*rUYX4K(FTcK(FTcK(Flkq=]F6K(afiK(afiK(b5up&BXDK)^H&K)^H&K)_#6
K(FTcK(FTcK(FTcL@bB;K(afiK(afiK(afiMY?lGK)^H&K)^H&K)^H&NrSeDK(FTcK(FTcK(FTcP4O;!
K(afiK(afiK(armrVqKLK)^H&K)^H&K)^`.q=B40K(FTcK(FTcK(G#op%F"2K(afiK(afiK(bB$K)^H&
K)^H&K)^H&LB%5DK(FTcK(FTcK(FTcMY$Z;K(afiK(afiK(afiNqW/GK)^H&K)^H&K)^H&P5g.*K(FTc
K(FTcK(F`grUkd8K(X`gK(X`gK(Y#oq>Z'HK)^H&K)^H&K)^l2p%*e,K(FTcK(FTcK(G/sK(X`gK(X`g
K(X`gL@tNFK)^H&K)^H&K)^H&MZ<MDK(FTcK(FTcK(FTcNq;r:K(X`gK(X`gK(X`gP4aG,K)^H&K)^H&
K)^T*rUYX4K(FTcK(FTcK(Flkq=T@4K(X`gK(X`gK(Y/sp&BXDK)^H&K)^H&K)_#6K(FTcK(FTcK(FTc
L@bB:K(X`gK(X`gK(X`gMY6fFK)^H&K)^H&K)^H&NrSeDK(FTcK(FTcK(FTcP4O:uK(X`gK(X`gK(Xlk
rVqKLK)^H&K)^H&K)^`.q=B40K(FTcK(FTcK(G#op%<q0K(X`gK(X`gK(Y<"K)^H&K)^H&K)^H&LB%5D
K(FTcK(FTcK(FTcMY$Z:K(X`gK(X`gK(X`gNqN)FK)^H&K)^H&K)^H&P5g.*K(FTcK(FTcK(F`grUkd8
K(X`gK(X`gK(Y#oq>Z'HK)^H&K)^H&K)^l2p%*e,K(FTcK(FTcK(G/sK(X`gK(X`gK(X`gL@tNFK)^H&
K)^H&K)^H&MZ<MDK(FTcK(FTcK(FTcNq;r:K(X`gK(X`gK(X`gP4aG,K)^H&K)^H&K)^T*rUPR2K(=Na
K(=NaK(=fiq=T@4K(X`gK(X`gK(Y/sp&BXDK)^H&K)^H&K)_#6K(=NaK(=NaK(=NaL@Y<9K(X`gK(X`g
K(X`gMY6fFK)^H&K)^H&K)^H&NrSeCK(=NaK(=NaK(=NaP4F4tK(X`gK(X`gK(XlkrVqKLK)^H&K)^H&
K)^`.q=9..K(=NaK(=NaK(=rmp%<q0K(X`gK(X`gK(Y<"K)^H&K)^H&K)^H&LB%5CK(=NaK(=NaK(=Na
MXpT9K(X`gK(X`gK(X`gNqN)FK)^H&K)^H&K)^H&P5g.)K(=NaK(=NaK(=ZerUkd8K(X`gK(X`gK(Y#o
q>Z'HK)^H&K)^H&K)^l2p%!_*K(=NaK(=NaK(>)qK(X`gK(X`gK(X`gL@tNFK)^H&K)^H&K)^H&MZ<MC
K(=NaK(=NaK(=NaNq2l9K(X`gK(X`gK(X`gP4aG,K)^H&K)^H&K)^T*rUPR2K(=NaK(=NaK(=fiq=T@4
K(X`gK(X`gK(Y/sp&BXDK)^H&K)^H&K)_#6K(=NaK(=NaK(=NaL@Y<9K(X`gK(X`gK(X`gMY6fFK)^H&
K)^H&K)^H&NrSeCK(=NaK(=NaK(=NaP4F4tK(X`gK(X`gK(XlkrVqKLK)^H&K)^H&K)^`.q=9..K(=Na
K(=NaK(=rmp%<q0K(X`gK(X`gK(Y<"K)^H&K)^H&K)^H&LB%5CK(=NaK(=NaK(=NaMXpT9K(X`gK(X`g
K(X`gNqN)FK)^H&K)^H&K)^H&P5g.)K(=NaK(=NaK(=ZerUkd8K(X`gK(X`gK(Y#oq>Z'HK)^H&K)^H&
K)^l2p%!_*K(=NaK(=NaK(>)qK(X`gK(X`gK(X`gL@tNFK)^H&K)^H&K)^H&MZ<MCK(=NaK(=NaK(=Na
Nq2l9K(X`gK(X`gK(X`gP4aG,K)^H&K)^H&K)^T*rUPR2K(=NaK(=NaK(=fiq=T@4K(X`gK(X`gK(Y/s
p&BXDK)^H&K)^H&K)_#6K(=NaK(=NaK(=NaL@Y<9K(X`gK(X`gK(X`gMY6fFK)^H&K)^H&K)^H&NrSeC
K(=NaK(=NaK(=NaP4F4tK(X`gK(X`gK(XlkrVqKLK)^H&K)^H&K)^`.q=9..K(=NaK(=NaK(=rmp%<q0
K(X`gK(X`gK(Y<"K)^H&K)^H&K)^H&LB%5CK(=NaK(=NaK(=NaMXpT9K(X`gK(X`gK(X`gNqN)FK)^H&
K)^H&K)^H&P5g.)K(=NaK(=NaK(=ZerUkd8K(X`gK(X`gK(Y#oq>Z'HK)^H&K)^H&K)^l2p%!_*K(=Na
K(=NaK(>)qK(X`gK(X`gK(X`gL@tNFK)^H&K)^H&K)^H&MZ<MCK(=NaK(=NaK(=NaNq2l9K(X`gK(X`g
K(X`gP4aG,K)^H&K)^H&K)^T*rUPR2K(=NaK(=NaK(=fiq=T@4K(X`gK(X`gK(Y/sp&BXDK)^H&K)^H&
K)_#6K(=NaK(=NaK(=NaL@Y<9K(X`gK(X`gK(X`gMY6fFK)^H&K)^H&K)^H&NrSeCK(=NaK(=NaK(=Na
P4F4tK(X`gK(X`gK(XlkrVqKLK)^H&K)^H&K)^`.q=9..K(=NaK(=NaK(=rmp%<q0K(X`gK(X`gK(Y<"
K)^H&K)^H&K)^H&LB%5CK(=NaK(=NaK(=NaMXpT9K(X`gK(X`gK(X`gNqN)FK)^H&K)^H&K)^H&P5g.)
K(=NaK(=NaK(=ZerUkd8K(X`gK(X`gK(Y#oq>Z'HK)^H&K)^H&K)^l2p%!_*K(=NaK(=NaK(>)qK(X`g
K(X`gK(X`gL@tNFK)^H&K)^H&K)^H&MZ<MCK(=NaK(=NaK(=NaNq2l9K(X`gK(X`gK(X`gP4aG,K)^H&
K)^H&K)^T*rUPR2K(=NaK(=NaK(=fiq=T@4K(X`gK(X`gK(Y/sp&BXDK)^H&K)^H&K)_#6K(=NaK(=Na
K(=NaL@Y<9K(X`gK(X`gK(X`gMY6fFK)^H&K)^H&K)^H&NrSeCK(=NaK(=NaK(=NaP4F4tK(X`gK(X`g
K(XlkrVqKLK)^H&K)^H&K)^`.q=9..K(=NaK(=NaK(=rmp%<q0K(X`gK(X`gK(Y<"K)^H&K)^H&K)^H&
LB%5CK(=NaK(=NaK(=NaMXpT9K(X`gK(X`gK(X`gNqN)FK)^H&K)^H&K)^H&P5g.)K(=NaK(=NaK(=Ze
rUkd8K(X`gK(X`gK(Y#oq>Z'HK)^H&K)^H&K)^l2p%!_*K(=NaK(=NaK(>)qK(X`gK(X`gK(X`gL@tNF
K)^H&K)^H&K)^H&MZ<MCK(=NaK(=NaK(=NaNq2l9K(X`gK(X`gK(X`gP4aG,K)^H&K)^H&K)^T*rUPR2
K(=NaK(=NaK(=fiq=T@4K(X`gK(X`gK(Y/sp&BXDK)^H&K)^H&K)_#6K(=NaK(=NaK(=NaL@Y<9K(X`g
K(X`gK(X`gMY6fFK)^H&K)^H&K)^H&NrSeCK(=NaK(=NaK(=NaP4F4tK(X`gK(X`gK(XlkrVqKLK)^H&
K)^H&K)^`.q=9..K(=NaK(=NaK(=rmp%<q0K(X`gK(X`gK(Y<"K)^H&K)^H&K)^H&LB%5CK(=NaK(=Na
K(=NaMXpT9K(X`gK(X`gK(X`gNqN)FK)^H&K)^H&K)^H&P5g.)K(=NaK(=NaK(=ZerUkd8K(X`gK(X`g
K(Y#oq>Z'HK)^H&K)^H&K)^l2p%!_*K(=NaK(=NaK(>)qK(X`gK(X`gK(X`gL@tNFK)^H&K)^H&K)^H&
MZ<MCK(=NaK(=NaK(=NaNq2l9K(X`gK(X`gK(X`gP4aG,K)^H&K)^H&K)^T*rUPR2K(=NaK(=NaK(=fi
q=T@4K(X`gK(X`gK(Y/sp&BXDK)^H&K)^H&K)_#6K(=NaK(=NaK(=NaL@Y<8K(OZeK(OZeK(OZeMY-`E
K)^H&K)^H&K)^H&NrSeCK(=NaK(=NaK(=NaP4F4sK(OZeK(OZeK(OfirVqKLK)^H&K)^H&K)^`.q=9..
K(=NaK(=NaK(=rmp%3k.K(OZeK(OZeK(P5uK)^H&K)^H&K)^H&LB%5CK(=NaK(=NaK(=NaMXpT8K(OZe
K(OZeK(OZeNqE#EK)^H&K)^H&K)^H&P5g.)K(=NaK(=NaK(=ZerUb^6K(OZeK(OZeK(Ormq>Z'HK)^H&
K)^H&K)^l2p%!_*K(=NaK(=NaK(>)qK(OZeK(OZeK(OZeL@kHEK)^H&K)^H&K)^H&MZ<MCK(=NaK(=Na
K(=NaNq2l8K(OZeK(OZeK(OZeP4XA+K)^H&K)^H&K)^T*rUPR2K(=NaK(=NaK(=fiq=K:2K(OZeK(OZe
K(P)qp&BXDK)^H&K)^H&K)_#6K(=NaK(=NaK(=NaL@Y<8K(OZeK(OZeK(OZeMY-`EK)^H&K)^H&K)^H&
NrSeCK(=NaK(=NaK(=NaP4F4sK(OZeK(OZeK(OfirVqKLK)^H&K)^H&K)^`.q=9..K(=NaK(=NaK(=rm
p%3k.K(OZeK(OZeK(P5uK)^H&K)^H&K)^H&LB%5CK(=NaK(=NaK(=NaMXpT8K(OZeK(OZeK(OZeNqE#E
K)^H&K)^H&K)^H&P5g.(K(4H_K(4H_K(4TcrUb^6K(OZeK(OZeK(Ormq>Z'HK)^H&K)^H&K)^l2p$mY(
K(4H_K(4H_K(5#oK(OZeK(OZeK(OZeL@kHEK)^H&K)^H&K)^H&MZ<MBK(4H_K(4H_K(4H_Nq)f7K(OZe
K(OZeK(OZeP4XA+K)^H&K)^H&K)^T*rUGL0K(4H_K(4H_K(4`gq=K:2K(OZeK(OZeK(P)qp&BXDK)^H&
K)^H&K)_#6K(4H_K(4H_K(4H_L@P67K(OZeK(OZeK(OZeMY-`EK)^H&K)^H&K)^H&NrSeBK(4H_K(4H_
K(4H_P4=.rK(OZeK(OZeK(OfirVqKLK)^H&K)^H&K)^`.q=0(,K(4H_K(4H_K(4lkp%3k.K(OZeK(OZe
K(P5uK)^H&K)^H&K)^H&LB%5BK(4H_K(4H_K(4H_MXgN7K(OZeK(OZeK(OZeNqE#EK)^H&K)^H&K)^H&
P5g.(K(4H_K(4H_K(4TcrUb^6K(OZeK(OZeK(Ormq>Z'HK)^H&K)^H&K)^l2p$mY(K(4H_K(4H_K(5#o
K(OZeK(OZeK(OZeL@kHEK)^H&K)^H&K)^H&MZ<MBK(4H_K(4H_K(4H_Nq)f7K(OZeK(OZeK(OZeP4XA+
K)^H&K)^H&K)^T*rUGL0K(4H_K(4H_K(4`gq=K:2K(OZeK(OZeK(P)qp&BXDK)^H&K)^H&K)_#6K(4H_
K(4H_K(4H_L@P67K(OZeK(OZeK(OZeMY-`EK)^H&K)^H&K)^H&NrSeBK(4H_K(4H_K(4H_P4=.rK(OZe
K(OZeK(OfirVqKLK)^H&K)^H&K)^`.q=0(,K(4H_K(4H_K(4lkp%3k.K(OZeK(OZeK(P5uK)^H&K)^H&
K)^H&LB%5BK(4H_K(4H_K(4H_MXgN7K(OZeK(OZeK(OZeNqE#EK)^H&K)^H&K)^H&P5g.(K(4H_K(4H_
K(4TcrUb^6K(OZeK(OZeK(Ormq>Z'HK)^H&K)^H&K)^l2p$mY(K(4H_K(4H_K(5#oK(OZeK(OZeK(OZe
L@kHEK)^H&K)^H&K)^H&MZ<MBK(4H_K(4H_K(4H_Nq)f7K(OZeK(OZeK(OZeP4XA+K)^H&K)^H&K)^T*
rUGL0K(4H_K(4H_K(4`gq=K:2K(OZeK(OZeK(P)qp&BXDK)^H&K)^H&K)_#6K(4H_K(4H_K(4H_L@P67
K(OZeK(OZeK(OZeMY-`EK)^H&K)^H&K)^H&NrSeBK(4H_K(4H_K(4H_P4=.rK(OZeK(OZeK(OfirVqKL
K)^H&K)^H&K)^`.q=0(,K(4H_K(4H_K(4lkp%3k.K(OZeK(OZeK(P5uK)^H&K)^H&K)^H&LB%5BK(4H_
K(4H_K(4H_MXgN7K(OZeK(OZeK(OZeNqE#EK)^H&K)^H&K)^H&P5g.(K(4H_K(4H_K(4TcrUb^6K(OZe
K(OZeK(Ormq>Z'HK)^H&K)^H&K)^l2p$mY(K(4H_K(4H_K(5#oK(OZeK(OZeK(OZeL@kHEK)^H&K)^H&
K)^H&MZ<MBK(4H_K(4H_K(4H_Nq)f7K(OZeK(OZeK(OZeP4XA+K)^H&K)^H&K)^T*rUGL0K(4H_K(4H_
K(4`gq=K:2K(OZeK(OZeK(P)qp&BXDK)^H&K)^H&K)_#6K(4H_K(4H_K(4H_L@P67K(OZeK(OZeK(OZe
MY-`EK)^H&K)^H&K)^H&NrSeBK(4H_K(4H_K(4H_P4=.rK(OZeK(OZeK(OfirVqKLK)^H&K)^H&K)^`.
q=0(,K(4H_K(4H_K(4lkp%3k.K(OZeK(OZeK(P5uK)^H&K)^H&K)^H&LB%5BK(4H_K(4H_K(4H_MXgN7
K(OZeK(OZeK(OZeNqE#EK)^H&K)^H&K)^H&P5g.(K(4H_K(4H_K(4TcrUb^6K(OZeK(OZeK(Ormq>Z'H
K)^H&K)^H&K)^l2p$mY(K(4H_K(4H_K(5#oK(OZeK(OZeK(OZeL@kHEK)^H&K)^H&K)^H&MZ<MBK(4H_
K(4H_K(4H_Nq)f7K(OZeK(OZeK(OZeP4XA+K)^H&K)^H&K)^T*rUGL0K(4H_K(4H_K(4`gq=K:2K(OZe
K(OZeK(P)qp&BXDK)^H&K)^H&K)_#6K(4H_K(4H_K(4H_L@P67K(OZeK(OZeK(OZeMY-`EK)^H&K)^H&
K)^H&NrSeBK(4H_K(4H_K(4H_P4=.rK(OZeK(OZeK(OfirVqKLK)^H&K)^H&K)^`.q=0(,K(4H_K(4H_
K(4lkp%3k.K(OZeK(OZeK(P5uK)^H&K)^H&K)^H&LB%5BK(4H_K(4H_K(4H_MXgN7K(OZeK(OZeK(OZe
NqE#EK)^H&K)^H&K)^H&P5g.(K(4H_K(4H_K(4TcrUb^6K(OZeK(OZeK(Ormq>Z'HK)^H&K)^H&K)^l2
p$mY(K(4H_K(4H_K(5#oK(OZeK(OZeK(OZeL@kHEK)^H&K)^H&K)^H&MZ<MAK(+B]K(+B]K(+B]Npu`5
K(FTcK(FTcK(FTcP4O;*K)^H&K)^H&K)^T*rU>F.K(+B]K(+B]K(+Zeq=B40K(FTcK(FTcK(G#op&BXD
K)^H&K)^H&K)_#6K(+B]K(+B]K(+B]L@G05K(FTcK(FTcK(FTcMY$ZDK)^H&K)^H&K)^H&NrSeAK(+B]
K(+B]K(+B]P44(pK(FTcK(FTcK(F`grVqKLK)^H&K)^H&K)^`.q='"*K(+B]K(+B]K(+fip%*e,K(FTc
K(FTcK(G/sK)^H&K)^H&K)^H&LB%5AK(+B]K(+B]K(+B]MX^H5K(FTcK(FTcK(FTcNq;rDK)^H&K)^H&
K)^H&P5g.'K(+B]K(+B]K(+NarUYX4K(FTcK(FTcK(Flkq>Z'HK)^H&K)^H&K)^l2p$dS&K(+B]K(+B]
K(+rmK(FTcK(FTcK(FTcL@bBDK)^H&K)^H&K)^H&MZ<MAK(+B]K(+B]K(+B]Npu`5K(FTcK(FTcK(FTc
P4O;*K)^H&K)^H&K)^T*rU>F.K(+B]K(+B]K(+Zeq=B40K(FTcK(FTcK(G#op&BXDK)^H&K)^H&K)_#6
K(+B]K(+B]K(+B]L@G05K(FTcK(FTcK(FTcMY$ZDK)^H&K)^H&K)^H&NrSeAK(+B]K(+B]K(+B]P44(p
K(FTcK(FTcK(F`grVqKLK)^H&K)^H&K)^`.q='"*K(+B]K(+B]K(+fip%*e,K(FTcK(FTcK(G/sK)^H&
K)^H&K)^H&LB%5AK(+B]K(+B]K(+B]MX^H5K(FTcK(FTcK(FTcNq;rDK)^H&K)^H&K)^H&P5g.'K(+B]
K(+B]K(+NarUYX4K(FTcK(FTcK(Flkq>Z'HK)^H&K)^H&K)^l2p$dS&K(+B]K(+B]K(+rmK(FTcK(FTc
K(FTcL@bBDK)^H&K)^H&K)^H&MZ<MAK(+B]K(+B]K(+B]Npu`5K(FTcK(FTcK(FTcP4O;*K)^H&K)^H&
K)^T*rU>F.K(+B]K(+B]K(+Zeq=B40K(FTcK(FTcK(G#op&BXDK)^H&K)^H&K)_#6K(+B]K(+B]K(+B]
L@G05K(FTcK(FTcK(FTcMY$ZDK)^H&K)^H&K)^H&NrSeAK(+B]K(+B]K(+B]P44(pK(FTcK(FTcK(F`g
rVqKLK)^H&K)^H&K)^`.q='"*K(+B]K(+B]K(+fip%*e,K(FTcK(FTcK(G/sK)^H&K)^H&K)^H&LB%5A
K(+B]K(+B]K(+B]MX^H5K(FTcK(FTcK(FTcNq;rDK)^H&K)^H&K)^H&P5g.'K(+B]K(+B]K(+NarUYX4
K(FTcK(FTcK(Flkq>Z'HK)^H&K)^H&K)^l2p$dS&K(+B]K(+B]K(+rmK(FTcK(FTcK(FTcL@bBDK)^H&
K)^H&K)^H&MZ<MAK(+B]K(+B]K(+B]Npu`5K(FTcK(FTcK(FTcP4O;*K)^H&K)^H&K)^T*rU>F.K(+B]
K(+B]K(+Zeq=B40K(FTcK(FTcK(G#op&BXDK)^H&K)^H&K)_#6K(+B]K(+B]K(+B]L@G05K(FTcK(FTc
K(FTcMY$ZDK)^H&K)^H&K)^H&NrSeAK(+B]K(+B]K(+B]P44(pK(FTcK(FTcK(F`grVqKLK)^H&K)^H&
K)^`.q='"*K(+B]K(+B]K(+fip%*e,K(FTcK(FTcK(G/sK)^H&K)^H&K)^H&LB%5AK(+B]K(+B]K(+B]
MX^H5K(FTcK(FTcK(FTcNq;rDK)^H&K)^H&K)^H&P5g.'K(+B]K(+B]K(+NarUYX4K(FTcK(FTcK(Flk
q>Z'HK)^H&K)^H&K)^l2p$dS&K(+B]K(+B]K(+rmK(FTcK(FTcK(FTcL@bBDK)^H&K)^H&K)^H&MZ<MA
K(+B]K(+B]K(+B]Npu`5K(FTcK(FTcK(FTcP4O;*K)^H&K)^H&K)^T*rU>F.K(+B]K(+B]K(+Zeq=B40
K(FTcK(FTcK(G#op&BXDK)^H&K)^H&K)_#6K(+B]K(+B]K(+B]L@G05K(FTcK(FTcK(FTcMY$ZDK)^H&
K)^H&K)^H&NrSeAK(+B]K(+B]K(+B]P44(pK(FTcK(FTcK(F`grVqKLK)^H&K)^H&K)^`.q='"*K(+B]
K(+B]K(+fip%*e,K(FTcK(FTcK(G/sK)^H&K)^H&K)^H&LB%5AK(+B]K(+B]K(+B]MX^H5K(FTcK(FTc
K(FTcNq;rDK)^H&K)^H&K)^H&P5g.'K(+B]K(+B]K(+NarUYX4K(FTcK(FTcK(Flkq>Z'HK)^H&K)^H&
K)^l2p$dS&K(+B]K(+B]K(+rmK(FTcK(FTcK(FTcL@bBDK)^H&K)^H&K)^H&MZ<MAK(+B]K(+B]K(+B]
Npu`5K(FTcK(FTcK(FTcP4O;*K)^H&K)^H&K)^T*rU>F.K(+B]K(+B]K(+Zeq=B40K(FTcK(FTcK(G#o
p&BXDK)^H&K)^H&K)_#6K(+B]K(+B]K(+B]L@G05K(FTcK(FTcK(FTcMY$ZDK)^H&K)^H&K)^H&NrSeA
K(+B]K(+B]K(+B]P44(pK(FTcK(FTcK(F`grVqKLK)^H&K)^H&K)^`.q='"*K(+B]K(+B]K(+fip%*e,
K(FTcK(FTcK(G/sK)^H&K)^H&K)^H&LB%5AK(+B]K(+B]K(+B]MX^H5K(FTcK(FTcK(FTcNq;rDK)^H&
K)^H&K)^H&P5g.'K(+B]K(+B]K(+NarUYX4K(FTcK(FTcK(Flkq>Z'HK)^H&K)^H&K)^l2p$dS&K(+B]
K(+B]K(+rmK(FTcK(FTcK(FTcL@bBDK)^H&K)^H&K)^H&MZ<MAK(+B]K(+B]K(+B]Npu`5K(FTcK(FTc
K(FTcP4O;*K)^H&K)^H&K)^T*rU5@,K("<[K("<[K("Tcq=B40K(FTcK(FTcK(G#op&BXDK)^H&K)^H&
K)_#6K("<[K("<[K("<[L@>*3K(=NaK(=NaK(=NaMXpTCK)^H&K)^H&K)^H&NrSe@K("<[K("<[K("<[
P4+"nK(=NaK(=NaK(=ZerVqKLK)^H&K)^H&K)^`.q<rq(K("<[K("<[K("`gp%!_*K(=NaK(=NaK(>)q
K)^H&K)^H&K)^H&LB%5@K("<[K("<[K("<[MXUB3K(=NaK(=NaK(=NaNq2lCK)^H&K)^H&K)^H&P5g.&
K("<[K("<[K("H_rUPR2K(=NaK(=NaK(=fiq>Z'HK)^H&K)^H&K)^l2p$[M$K("<[K("<[K("lkK(=Na
K(=NaK(=NaL@Y<CK)^H&K)^H&K)^H&MZ<M@K("<[K("<[K("<[NplZ3K(=NaK(=NaK(=NaP4F5)K)^H&
K)^H&K)^T*rU5@,K("<[K("<[K("Tcq=9..K(=NaK(=NaK(=rmp&BXDK)^H&K)^H&K)_#6K("<[K("<[
K("<[L@>*3K(=NaK(=NaK(=NaMXpTCK)^H&K)^H&K)^H&NrSe@K("<[K("<[K("<[P4+"nK(=NaK(=Na
K(=ZerVqKLK)^H&K)^H&K)^`.q<rq(K("<[K("<[K("`gp%!_*K(=NaK(=NaK(>)qK)^H&K)^H&K)^H&
LB%5@K("<[K("<[K("<[MXUB3K(=NaK(=NaK(=NaNq2lCK)^H&K)^H&K)^H&P5g.&K("<[K("<[K("H_
rUPR2K(=NaK(=NaK(=fiq>Z'HK)^H&K)^H&K)^l2p$[M$K("<[K("<[K("lkK(=NaK(=NaK(=NaL@Y<C
K)^H&K)^H&K)^H&MZ<M@K("<[K("<[K("<[NplZ3K(=NaK(=NaK(=NaP4F5)K)^H&K)^H&K)^T*rU5@,
K("<[K("<[K("Tcq=9..K(=NaK(=NaK(=rmp&BXDK)^H&K)^H&K)_#6K("<[K("<[K("<[L@>*3K(=Na
K(=NaK(=NaMXpTCK)^H&K)^H&K)^H&NrSe@K("<[K("<[K("<[P4+"nK(=NaK(=NaK(=ZerVqKLK)^H&
K)^H&K)^`.q<rq(K("<[K("<[K("`gp%!_*K(=NaK(=NaK(>)qK)^H&K)^H&K)^H&LB%5@K("<[K("<[
K("<[MXUB3K(=NaK(=NaK(=NaNq2lCK)^H&K)^H&K)^H&P5g.&K("<[K("<[K("H_rUPR2K(=NaK(=Na
K(=fiq>Z'HK)^H&K)^H&K)^l2p$[M$K("<[K("<[K("lkK(=NaK(=NaK(=NaL@Y<CK)^H&K)^H&K)^H&
MZ<M@K("<[K("<[K("<[NplZ3K(=NaK(=NaK(=NaP4F5)K)^H&K)^H&K)^T*rU5@,K("<[K("<[K("Tc
q=9..K(=NaK(=NaK(=rmp&BXDK)^H&K)^H&K)_#6K("<[K("<[K("<[L@>*3K(=NaK(=NaK(=NaMXpTC
K)^H&K)^H&K)^H&NrSe@K("<[K("<[K("<[P4+"nK(=NaK(=NaK(=ZerVqKLK)^H&K)^H&K)^`.q<rq(
K("<[K("<[K("`gp%!_*K(=NaK(=NaK(>)qK)^H&K)^H&K)^H&LB%5@K("<[K("<[K("<[MXUB3K(=Na
K(=NaK(=NaNq2lCK)^H&K)^H&K)^H&P5g.&K("<[K("<[K("H_rUPR2K(=NaK(=NaK(=fiq>Z'HK)^H&
K)^H&K)^l2p$RG"K'n6YK'n6YK'nfiK(=NaK(=NaK(=NaL@Y<CK)^H&K)^H&K)^H&MZ<M?K'n6YK'n6Y
K'n6YNpcT2K(=NaK(=NaK(=NaP4F5)K)^H&K)^H&K)^T*rU,:*K'n6YK'n6YK'nNaq=9..K(=NaK(=Na
K(=rmp&BXDK)^H&K)^H&K)_#6K'n6YK'n6YK'n6YL@5$2K(=NaK(=NaK(=NaMXpTCK)^H&K)^H&K)^H&
NrSe?K'n6YK'n6YK'n6YP4!qmK(=NaK(=NaK(=ZerVqKLK)^H&K)^H&K)^`.q<ik&K'n6YK'n6YK'nZe
p$mY(K(4H_K(4H_K(5#oK)^H&K)^H&K)^H&LB%5?K'n6YK'n6YK'n6YMXL<1K(4H_K(4H_K(4H_Nq)fB
K)^H&K)^H&K)^H&P5g.%K'n6YK'n6YK'nB]rUGL0K(4H_K(4H_K(4`gq>Z'HK)^H&K)^H&K)^l2p$RG"
K'n6YK'n6YK'nfiK(4H_K(4H_K(4H_L@P6BK)^H&K)^H&K)^H&MZ<M?K'n6YK'n6YK'n6YNpcT1K(4H_
K(4H_K(4H_P4=/(K)^H&K)^H&K)^T*rU,:*K'n6YK'n6YK'nNaq=0(,K(4H_K(4H_K(4lkp&BXDK)^H&
K)^H&K)_#6K'n6YK'n6YK'n6YL@5$1K(4H_K(4H_K(4H_MXgNBK)^H&K)^H&K)^H&NrSe?K'n6YK'n6Y
K'n6YP4!qlK(4H_K(4H_K(4TcrVqKLK)^H&K)^H&K)^`.q<ik&K'n6YK'n6YK'nZep$mY(K(4H_K(4H_
K(5#oK)^H&K)^H&K)^H&LB%5?K'n6YK'n6YK'n6YMXL<1K(4H_K(4H_K(4H_Nq)fBK)^H&K)^H&K)^H&
P5g.%K'n6YK'n6YK'nB]rUGL0K(4H_K(4H_K(4`gq>Z'HK)^H&K)^H&K)^l2p$RG"K'n6YK'n6YK'nfi
K(4H_K(4H_K(4H_L@P6BK)^H&K)^H&K)^H&MZ<M?K'n6YK'n6YK'n6YNpcT1K(4H_K(4H_K(4H_P4=/(
K)^H&K)^H&K)^T*rU,:*K'n6YK'n6YK'nNaq=0(,K(4H_K(4H_K(4lkp&BXDK)^H&K)^H&K)_#6K'n6Y
K'n6YK'n6YL@5$1K(4H_K(4H_K(4H_MXgNBK)^H&K)^H&K)^H&NrSe?K'n6YK'n6YK'n6YP4!qlK(4H_
K(4H_K(4TcrVqKLK)^H&K)^H&K)^`.q<ik&K'n6YK'n6YK'nZep$mY(K(4H_K(4H_K(5#oK)^H&K)^H&
K)^H&LB%5?K'n6YK'n6YK'n6YMXL<1K(4H_K(4H_K(4H_Nq)fBK)^H&K)^H&K)^H&P5g.%K'n6YK'n6Y
K'nB]rUGL0K(4H_K(4H_K(4`gq>Z'HK)^H&K)^H&K)^l2p$RG"K'n6YK'n6YK'nfiK(4H_K(4H_K(4H_
L@P6BK)^H&K)^H&K)^H&MZ<M?K'n6YK'n6YK'n6YNpcT1K(4H_K(4H_K(4H_P4=/(K)^H&K)^H&K)^T*
rU,:*K'n6YK'n6YK'nNaq=0(,K(4H_K(4H_K(4lkp&BXDK)^H&K)^H&K)_#6K'n6YK'n6YK'n6YL@5$1
K(4H_K(4H_K(4H_MXgNBK)^H&K)^H&K)^H&NrSe?K'n6YK'n6YK'n6YP4!qlK(4H_K(4H_K(4TcrVqKL
K)^H&K)^H&K)^`.q<ik&K'n6YK'n6YK'nZep$mY(K(4H_K(4H_K(5#oK)^H&K)^H&K)^H&LB%5?K'n6Y
K'n6YK'n6YMXL<1K(4H_K(4H_K(4H_Nq)fBK)^H&K)^H&K)^H&P5g.%K'n6YK'n6YK'nB]rUGL0K(4H_
K(4H_K(4`gq>Z'HK)^H&K)^H&K)^l2p$RG"K'n6YK'n6YK'nfiK(4H_K(4H_K(4H_L@P6BK)^H&K)^H&
K)^H&MZ<M?K'n6YK'n6YK'n6YNpcT1K(4H_K(4H_K(4H_P4=/(K)^H&K)^H&K)^T*rU,:*K'n6YK'n6Y
K'nNaq=0(,K(4H_K(4H_K(4lkp&BXDK)^H&K)^H&K)_#6K'n6YK'n6YK'n6YL@5$1K(4H_K(4H_K(4H_
MXgNBK)^H&K)^H&K)^H&NrSe?K'n6YK'n6YK'n6YP4!qlK(4H_K(4H_K(4TcrVqKLK)^H&K)^H&K)^`.
q<ik&K'n6YK'n6YK'nZep$mY(K(4H_K(4H_K(5#oK)^H&K)^H&K)^H&LB%5?K'n6YK'n6YK'n6YMXL<1
K(4H_K(4H_K(4H_Nq)fBK)^H&K)^H&K)^H&P5g.%K'n6YK'n6YK'nB]rUGL0K(4H_K(4H_K(4`gq>Z'H
K)^H&K)^H&K)^l2p$RG"K'n6YK'n6YK'nfiK(4H_K(4H_K(4H_L@P6BK)^H&K)^H&K)^H&MZ<M?K'n6Y
K'n6YK'n6YNpcT1K(4H_K(4H_K(4H_P4=/(K)^H&K)^H&K)^T*rU,:*K'n6YK'n6YK'nNaq=0(,K(4H_
K(4H_K(4lkp&BXDK)^H&K)^H&K)_#6K'n6YK'n6YK'n6YL@5$1K(4H_K(4H_K(4H_MXgNBK)^H&K)^H&
K)^H&NrSe?K'n6YK'n6YK'n6YP4!qlK(4H_K(4H_K(4TcrVqKLK)^H&K)^H&K)^`.q<ik&K'n6YK'n6Y
K'nZep$mY(K(4H_K(4H_K(5#oK)^H&K)^H&K)^H&LB%5?K'n6YK'n6YK'n6YMXL<1K(4H_K(4H_K(4H_
Nq)fBK)^H&K)^H&K)^H&P5g.%K'n6YK'n6YK'nB]rUGL0K(4H_K(4H_K(4`gq>Z'HK)^H&K)^H&K)^l2
p$RG"K'n6YK'n6YK'nfiK(4H_K(4H_K(4H_L@P6BK)^H&K)^H&K)^H&MZ<M?K'n6YK'n6YK'n6YNpcT1
K(4H_K(4H_K(4H_P4=/(K)^H&K)^H&K)^T*rU,:*K'n6YK'n6YK'nNaq=0(,K(4H_K(4H_K(4lkp&BXD
K)^H&K)^H&K)_#6K'n6YK'n6YK'n6YL@5$1K(4H_K(4H_K(4H_MXgNBK)^H&K)^H&K)^H&NrSe?K'n6Y
K'n6YK'n6YP4!qlK(4H_K(4H_K(4TcrVqKLK)^H&K)^H&K)^`.q<ik&K'n6YK'n6YK'nZep$mY(K(4H_
K(4H_K(5#oK)^H&K)^H&K)^H&LB%5?K'n6YK'n6YK'n6YMXL<1K(4H_K(4H_K(4H_Nq)fBK)^H&K)^H&
K)^H&P5g.%K'n6YK'n6YK'nB]rUGL0K(4H_K(4H_K(4`gq>Z'HK)^H&K)^H&K)^l2p$RG"K'n6YK'n6Y
K'nfiK(4H_K(4H_K(4H_L@P6BK)^H&K)^H&K)^H&MZ<M?K'n6YK'n6YK'n6YNpcT1K(4H_K(4H_K(4H_
P4=/(K)^H&K)^H&K)^T*rU,:*K'n6YK'n6YK'nNaq=0(,K(4H_K(4H_K(4lkp&BXDK)^H&K)^H&K)_#6
K'n6YK'n6YK'n6YL@5$1K(4H_K(4H_K(4H_MXgNBK)^H&K)^H&K)^H&NrSe?K'n6YK'n6YK'n6YP4!ql
K(4H_K(4H_K(4TcrVqKLK)^H&K)^H&K)^`.q<`e$K'e0WK'e0WK'eTcp$mY(K(4H_K(4H_K(5#oK)^H&
K)^H&K)^H&LB%5>K'e0WK'e0WK'e0WMXC60K(4H_K(4H_K(4H_Nq)fBK)^H&K)^H&K)^H&P5g.$K'e0W
K'e0WK'e<[rUGL0K(4H_K(4H_K(4`gq>Z'HK)^H&K)^H&K)^l2p$I@uK'e0WK'e0WK'e`gK(4H_K(4H_
K(4H_L@P6BK)^H&K)^H&K)^H&MZ<M>K'e0WK'e0WK'e0WNpZN0K(4H_K(4H_K(4H_P4=/(K)^H&K)^H&
K)^T*rU#4(K'e0WK'e0WK'eH_q=0(,K(4H_K(4H_K(4lkp&BXDK)^H&K)^H&K)_#6K'e0WK'e0WK'e0W
L@+s0K(4H_K(4H_K(4H_MXgNBK)^H&K)^H&K)^H&NrSe>K'e0WK'e0WK'e0WP3mkkK(4H_K(4H_K(4Tc
rVqKLK)^H&K)^H&K)^`.q<`e$K'e0WK'e0WK'eTcp$mY(K(4H_K(4H_K(5#oK)^H&K)^H&K)^H&LB%5>
K'e0WK'e0WK'e0WMXC60K(4H_K(4H_K(4H_Nq)fBK)^H&K)^H&K)^H&P5g.$K'e0WK'e0WK'e<[rUGL0
K(4H_K(4H_K(4`gq>Z'HK)^H&K)^H&K)^l2p$I@uK'e0WK'e0WK'e`gK(4H_K(4H_K(4H_L@P6BK)^H&
K)^H&K)^H&MZ<M>K'e0WK'e0WK'e0WNpZN0K(4H_K(4H_K(4H_P4=/(K)^H&K)^H&K)^T*rU#4(K'e0W
K'e0WK'eH_q=0(,K(4H_K(4H_K(4lkp&BXDK)^H&K)^H&K)_#6K'e0WK'e0WK'e0WL@+s/K(+B]K(+B]
K(+B]MX^HAK)^H&K)^H&K)^H&NrSe>K'e0WK'e0WK'e0WP3mkjK(+B]K(+B]K(+NarVqKLK)^H&K)^H&
K)^`.q<`e$K'e0WK'e0WK'eTcp$dS&K(+B]K(+B]K(+rmK)^H&K)^H&K)^H&LB%5>K'e0WK'e0WK'e0W
MXC6/K(+B]K(+B]K(+B]Npu`AK)^H&K)^H&K)^H&P5g.$K'e0WK'e0WK'e<[rU>F.K(+B]K(+B]K(+Ze
q>Z'HK)^H&K)^H&K)^l2p$I@uK'e0WK'e0WK'e`gK(+B]K(+B]K(+B]L@G0AK)^H&K)^H&K)^H&MZ<M>
K'e0WK'e0WK'e0WNpZN/K(+B]K(+B]K(+B]P44)'K)^H&K)^H&K)^T*rU#4(K'e0WK'e0WK'eH_q='"*
K(+B]K(+B]K(+fip&BXDK)^H&K)^H&K)_#6K'e0WK'e0WK'e0WL@+s/K(+B]K(+B]K(+B]MX^HAK)^H&
K)^H&K)^H&NrSe>K'e0WK'e0WK'e0WP3mkjK(+B]K(+B]K(+NarVqKLK)^H&K)^H&K)^`.q<`e$K'e0W
K'e0WK'eTcp$dS&K(+B]K(+B]K(+rmK)^H&K)^H&K)^H&LB%5>K'e0WK'e0WK'e0WMXC6/K(+B]K(+B]
K(+B]Npu`AK)^H&K)^H&K)^H&P5g.$K'e0WK'e0WK'e<[rU>F.K(+B]K(+B]K(+Zeq>Z'HK)^H&K)^H&
K)^l2p$I@uK'e0WK'e0WK'e`gK(+B]K(+B]K(+B]L@G0AK)^H&K)^H&K)^H&MZ<M>K'e0WK'e0WK'e0W
NpZN/K(+B]K(+B]K(+B]P44)'K)^H&K)^H&K)^T*rU#4(K'e0WK'e0WK'eH_q='"*K(+B]K(+B]K(+fi
p&BXDK)^H&K)^H&K)_#6K'e0WK'e0WK'e0WL@+s/K(+B]K(+B]K(+B]MX^HAK)^H&K)^H&K)^H&NrSe=
K'\*UK'\*UK'\*UP3deiK(+B]K(+B]K(+NarVqKLK)^H&K)^H&K)^`.q<W_"K'\*UK'\*UK'\Nap$dS&
K(+B]K(+B]K(+rmK)^H&K)^H&K)^H&LB%5=K'\*UK'\*UK'\*UMX:0.K(+B]K(+B]K(+B]Npu`AK)^H&
K)^H&K)^H&P5g.#K'\*UK'\*UK'\6YrU>F.K(+B]K(+B]K(+Zeq>Z'HK)^H&K)^H&K)^l2p$@:sK'\*U
K'\*UK'\ZeK(+B]K(+B]K(+B]L@G0AK)^H&K)^H&K)^H&MZ<M=K'\*UK'\*UK'\*UNpQH.K(+B]K(+B]
K(+B]P44)'K)^H&K)^H&K)^T*rTo.&K'\*UK'\*UK'\B]q='"*K(+B]K(+B]K(+fip&BXDK)^H&K)^H&
K)_#6K'\*UK'\*UK'\*UL@"m.K(+B]K(+B]K(+B]MX^HAK)^H&K)^H&K)^H&NrSe=K'\*UK'\*UK'\*U
P3deiK(+B]K(+B]K(+NarVqKLK)^H&K)^H&K)^`.q<W_"K'\*UK'\*UK'\Nap$dS&K(+B]K(+B]K(+rm
K)^H&K)^H&K)^H&LB%5=K'\*UK'\*UK'\*UMX:0.K(+B]K(+B]K(+B]Npu`AK)^H&K)^H&K)^H&P5g.#
K'\*UK'\*UK'\6YrU>F.K(+B]K(+B]K(+Zeq>Z'HK)^H&K)^H&K)^l2p$@:sK'\*UK'\*UK'\ZeK(+B]
K(+B]K(+B]L@G0AK)^H&K)^H&K)^H&MZ<M=K'\*UK'\*UK'\*UNpQH.K(+B]K(+B]K(+B]P44)'K)^H&
K)^H&K)^T*rTo.&K'\*UK'\*UK'\B]q='"*K(+B]K(+B]K(+fip&BXDK)^H&K)^H&K)_#6K'\*UK'\*U
K'\*UL@"m.K(+B]K(+B]K(+B]MX^HAK)^H&K)^H&K)^H&NrSe=K'\*UK'\*UK'\*UP3deiK(+B]K(+B]
K(+NarVqKLK)^H&K)^H&K)^`.q<W_"K'\*UK'\*UK'\Nap$[M$K("<[K("<[K("lkK)^H&K)^H&K)^H&
LB%5=K'\*UK'\*UK'\*UMX:0-K("<[K("<[K("<[NplZ@K)^H&K)^H&K)^H&P5g.#K'\*UK'\*UK'\6Y
rU5@,K("<[K("<[K("Tcq>Z'HK)^H&K)^H&K)^l2p$@:sK'\*UK'\*UK'\ZeK("<[K("<[K("<[L@>*@
K)^H&K)^H&K)^H&MZ<M=K'\*UK'\*UK'\*UNpQH-K("<[K("<[K("<[P4+#&K)^H&K)^H&K)^T*rTo.&
K'\*UK'\*UK'\B]q<rq(K("<[K("<[K("`gp&BXDK)^H&K)^H&K)_#6K'\*UK'\*UK'\*UL@"m-K("<[
K("<[K("<[MXUB@K)^H&K)^H&K)^H&NrSe=K'\*UK'\*UK'\*UP3dehK("<[K("<[K("H_rVqKLK)^H&
K)^H&K)^`.q<W_"K'\*UK'\*UK'\Nap$[M$K("<[K("<[K("lkK)^H&K)^H&K)^H&LB%5=K'\*UK'\*U
K'\*UMX:0-K("<[K("<[K("<[NplZ@K)^H&K)^H&K)^H&P5g.#K'\*UK'\*UK'\6YrU5@,K("<[K("<[
K("Tcq>Z'HK)^H&K)^H&K)^l2p$@:sK'\*UK'\*UK'\ZeK("<[K("<[K("<[L@>*@K)^H&K)^H&K)^H&
MZ<M=K'\*UK'\*UK'\*UNpQH-K("<[K("<[K("<[P4+#&K)^H&K)^H&K)^T*rTo.&K'\*UK'\*UK'\B]
q<rq(K("<[K("<[K("`gp&BXDK)^H&K)^H&K)_#6K'\*UK'\*UK'\*UL@"m-K("<[K("<[K("<[MXUB@
K)^H&K)^H&K)^H&NrSe=K'\*UK'\*UK'\*UP3dehK("<[K("<[K("H_rVqKLK)^H&K)^H&K)^`.q<W_"
K'\*UK'\*UK'\Nap$[M$K("<[K("<[K("lkK)^H&K)^H&K)^H&LB%5=K'\*UK'\*UK'\*UMX:0-K("<[
K("<[K("<[NplZ@K)^H&K)^H&K)^H&P5g.#K'\*UK'\*UK'\6YrU5@,K("<[K("<[K("Tcq>Z'HK)^H&
K)^H&K)^l2p$@:sK'\*UK'\*UK'\ZeK("<[K("<[K("<[L@>*@K)^H&K)^H&K)^H&MZ<M=K'\*UK'\*U
K'\*UNpQH-K("<[K("<[K("<[P4+#&K)^H&K)^H&K)^T*rTo.&K'\*UK'\*UK'\B]q<rq(K("<[K("<[
K("`gp&BXDK)^H&K)^H&K)_#6K'\*UK'\*UK'\*UL@"m-K("<[K("<[K("<[MXUB@K)^H&K)^H&K)^H&
NrSe=K'\*UK'\*UK'\*UP3dehK("<[K("<[K("H_rVqKLK)^H&K)^H&K)^`.q<W_"K'\*UK'\*UK'\Na
p$[M$K("<[K("<[K("lkK)^H&K)^H&K)^H&LB%5=K'\*UK'\*UK'\*UMX:0-K("<[K("<[K("<[NplZ@
K)^H&K)^H&K)^H&P5g.#K'\*UK'\*UK'\6YrU5@,K("<[K("<[K("Tcq>Z'HK)^H&K)^H&K)^l2p$@:s
K'\*UK'\*UK'\ZeK("<[K("<[K("<[L@>*@K)^H&K)^H&K)^H&MZ<M=K'\*UK'\*UK'\*UNpQH-K("<[
K("<[K("<[P4+#&K)^H&K)^H&K)^T*rTo.&K'\*UK'\*UK'\B]q<rq(K("<[K("<[K("`gp&BXDK)^H&
K)^H&K)_#6K'\*UK'\*UK'\*UL@"m-K("<[K("<[K("<[MXUB@K)^H&K)^H&K)^H&NrSe=K'\*UK'\*U
K'\*UP3dehK("<[K("<[K("H_rVqKLK)^H&K)^H&K)^`.q<W_"K'\*UK'\*UK'\Nap$[M$K("<[K("<[
K("lkK)^H&K)^H&K)^H&LB%5=K'\*UK'\*UK'\*UMX:0-K("<[K("<[K("<[NplZ@K)^H&K)^H&K)^H&
P5g.#K'\*UK'\*UK'\6YrU5@,K("<[K("<[K("Tcq>Z'HK)^H&K)^H&K)^l2p$@:sK'\*UK'\*UK'\Ze
K("<[K("<[K("<[L@>*@K)^H&K)^H&K)^H&MZ<M=K'\*UK'\*UK'\*UNpQH-K("<[K("<[K("<[P4+#&
K)^H&K)^H&K)^T*rTo.&K'\*UK'\*UK'\B]q<rq(K("<[K("<[K("`gp&BXDK)^H&K)^H&K)_#6K'\*U
K'\*UK'\*UL@"m-K("<[K("<[K("<[MXUB@K)^H&K)^H&K)^H&NrSe=K'\*UK'\*UK'\*UP3dehK("<[
K("<[K("H_rVqKLK)^H&K)^H&K)^`.q<NXuK'S$SK'S$SK'SH_p$[M$K("<[K("<[K("lkK)^H&K)^H&
K)^H&LB%5<K'S$SK'S$SK'S$SMX1*,K("<[K("<[K("<[NplZ@K)^H&K)^H&K)^H&P5g."K'S$SK'S$S
K'S0WrU5@,K("<[K("<[K("Tcq>Z'HK)^H&K)^H&K)^l2p$74qK'S$SK'S$SK'STcK("<[K("<[K("<[
L@>*@K)^H&K)^H&K)^H&MZ<M<K'S$SK'S$SK'S$SNpHB,K("<[K("<[K("<[P4+#&K)^H&K)^H&K)^T*
rTf($K'S$SK'S$SK'S<[q<rq(K("<[K("<[K("`gp&BXDK)^H&K)^H&K)_#6K'S$SK'S$SK'S$SL?ng,
K("<[K("<[K("<[MXUB@K)^H&K)^H&K)^H&NrSe<K'S$SK'S$SK'S$SP3[_gK("<[K("<[K("H_rVqKL
K)^H&K)^H&K)^`.q<NXuK'S$SK'S$SK'SH_p$[M$K("<[K("<[K("lkK)^H&K)^H&K)^H&LB%5<K'S$S
K'S$SK'S$SMX1*,K("<[K("<[K("<[NplZ@K)^H&K)^H&K)^H&P5g."K'S$SK'S$SK'S0WrU5@,K("<[
K("<[K("Tcq>Z'HK)^H&K)^H&K)^l2p$74qK'S$SK'S$SK'STcK("<[K("<[K("<[L@>*@K)^H&K)^H&
K)^H&MZ<M<K'S$SK'S$SK'S$SNpHB,K("<[K("<[K("<[P4+#&K)^H&K)^H&K)^T*rTf($K'S$SK'S$S
K'S<[q<rq(K("<[K("<[K("`gp&BXDK)^H&K)^H&K)_#6K'S$SK'S$SK'S$SL?ng,K("<[K("<[K("<[
MXUB@K)^H&K)^H&K)^H&NrSe<K'S$SK'S$SK'S$SP3[_gK("<[K("<[K("H_rVqKLK)^H&K)^H&K)^`.
q<NXuK'S$SK'S$SK'SH_p$[M$K("<[K("<[K("lkK)^H&K)^H&K)^H&LB%5<K'S$SK'S$SK'S$SMX1*,
K("<[K("<[K("<[NplZ@K)^H&K)^H&K)^H&P5g."K'S$SK'S$SK'S0WrU5@,K("<[K("<[K("Tcq>Z'H
K)^H&K)^H&K)^l2p$74qK'S$SK'S$SK'STcK("<[K("<[K("<[L@>*@K)^H&K)^H&K)^H&MZ<M<K'S$S
K'S$SK'S$SNpHB,K("<[K("<[K("<[P4+#&K)^H&K)^H&K)^T*rTf($K'S$SK'S$SK'S<[q<rq(K("<[
K("<[K("`gp&BXDK)^H&K)^H&K)_#6K'S$SK'S$SK'S$SL?ng,K("<[K("<[K("<[MXUB@K)^H&K)^H&
K)^H&NrSe<K'S$SK'S$SK'S$SP3[_gK("<[K("<[K("H_rVqKLK)^H&K)^H&K)^`.q<NXuK'S$SK'S$S
K'SH_p$[M$K("<[K("<[K("lkK)^H&K)^H&K)^H&LB%5<K'S$SK'S$SK'S$SMX1*,K("<[K("<[K("<[
NplZ@K)^H&K)^H&K)^H&P5g."K'S$SK'S$SK'S0WrU5@,K("<[K("<[K("Tcq>Z'HK)^H&K)^H&K)^l2
p$74qK'S$SK'S$SK'STcK("<[K("<[K("<[L@>*@K)^H&K)^H&K)^H&MZ<M<K'S$SK'S$SK'S$SNpHB,
K("<[K("<[K("<[P4+#&K)^H&K)^H&K)^T*rTf($K'S$SK'S$SK'S<[q<ik&K'n6YK'n6YK'nZep&BXD
K)^H&K)^H&K)_#6K'S$SK'S$SK'S$SL?ng+K'n6YK'n6YK'n6YMXL<?K)^H&K)^H&K)^H&NrSe<K'S$S
K'S$SK'S$SP3[_fK'n6YK'n6YK'nB]rVqKLK)^H&K)^H&K)^`.q<NXuK'S$SK'S$SK'SH_p$RG"K'n6Y
K'n6YK'nfiK)^H&K)^H&K)^H&LB%5<K'S$SK'S$SK'S$SMX1*+K'n6YK'n6YK'n6YNpcT?K)^H&K)^H&
K)^H&P5g.!K'IsQK'IsQK'J*UrU,:*K'n6YK'n6YK'nNaq>Z'HK)^H&K)^H&K)^l2p$..oK'IsQK'IsQ
K'JNaK'n6YK'n6YK'n6YL@5$?K)^H&K)^H&K)^H&MZ<M;K'IsQK'IsQK'IsQNp?<*K'n6YK'n6YK'n6Y
P4!r%K)^H&K)^H&K)^T*rT]""K'IsQK'IsQK'J6Yq<ik&K'n6YK'n6YK'nZep&BXDK)^H&K)^H&K)_#6
K'IsQK'IsQK'IsQL?ea*K'n6YK'n6YK'n6YMXL<?K)^H&K)^H&K)^H&NrSe;K'IsQK'IsQK'IsQP3RYe
K'n6YK'n6YK'nB]rVqKLK)^H&K)^H&K)^`.q<ERsK'IsQK'IsQK'JB]p$RG"K'n6YK'n6YK'nfiK)^H&
K)^H&K)^H&LB%5;K'IsQK'IsQK'IsQMX($*K'n6YK'n6YK'n6YNpcT?K)^H&K)^H&K)^H&P5g.!K'IsQ
K'IsQK'J*UrU,:*K'n6YK'n6YK'nNaq>Z'HK)^H&K)^H&K)^l2p$..oK'IsQK'IsQK'JNaK'n6YK'n6Y
K'n6YL@5$?K)^H&K)^H&K)^H&MZ<M;K'IsQK'IsQK'IsQNp?<*K'n6YK'n6YK'n6YP4!r%K)^H&K)^H&
K)^T*rT]""K'IsQK'IsQK'J6Yq<ik&K'n6YK'n6YK'nZep&BXDK)^H&K)^H&K)_#6K'IsQK'IsQK'IsQ
L?ea*K'n6YK'n6YK'n6YMXL<?K)^H&K)^H&K)^H&NrSe;K'IsQK'IsQK'IsQP3RYeK'n6YK'n6YK'nB]
rVqKLK)^H&K)^H&K)^`.q<ERsK'IsQK'IsQK'JB]p$RG"K'n6YK'n6YK'nfiK)^H&K)^H&K)^H&LB%5;
K'IsQK'IsQK'IsQMX($*K'n6YK'n6YK'n6YNpcT?K)^H&K)^H&K)^H&P5g.!K'IsQK'IsQK'J*UrU,:*
K'n6YK'n6YK'nNaq>Z'HK)^H&K)^H&K)^l2p$..oK'IsQK'IsQK'JNaK'n6YK'n6YK'n6YL@5$?K)^H&
K)^H&K)^H&MZ<M;K'IsQK'IsQK'IsQNp?<*K'n6YK'n6YK'n6YP4!r%K)^H&K)^H&K)^T*rT]""K'IsQ
K'IsQK'J6Yq<ik&K'n6YK'n6YK'nZep&BXDK)^H&K)^H&K)_#6K'IsQK'IsQK'IsQL?ea*K'n6YK'n6Y
K'n6YMXL<?K)^H&K)^H&K)^H&NrSe;K'IsQK'IsQK'IsQP3RYeK'n6YK'n6YK'nB]rVqKLK)^H&K)^H&
K)^`.q<ERsK'IsQK'IsQK'JB]p$RG"K'n6YK'n6YK'nfiK)^H&K)^H&K)^H&LB%5;K'IsQK'IsQK'IsQ
MX($*K'n6YK'n6YK'n6YNpcT?K)^H&K)^H&K)^H&P5g.!K'IsQK'IsQK'J*UrU,:*K'n6YK'n6YK'nNa
q>Z'HK)^H&K)^H&K)^l2p$..oK'IsQK'IsQK'JNaK'n6YK'n6YK'n6YL@5$?K)^H&K)^H&K)^H&MZ<M;
K'IsQK'IsQK'IsQNp?<*K'n6YK'n6YK'n6YP4!r%K)^H&K)^H&K)^T*rT]""K'IsQK'IsQK'J6Yq<ik&
K'n6YK'n6YK'nZep&BXDK)^H&K)^H&K)_#6K'IsQK'IsQK'IsQL?ea*K'n6YK'n6YK'n6YMXL<?K)^H&
K)^H&K)^H&NrSe;K'IsQK'IsQK'IsQP3RYeK'n6YK'n6YK'nB]rVqKLK)^H&K)^H&K)^`.q<ERsK'IsQ
K'IsQK'JB]p$I@uK'e0WK'e0WK'e`gK)^H&K)^H&K)^H&LB%5:K'@mOK'@mOK'@mOMWss(K'e0WK'e0W
K'e0WNpZN>K)^H&K)^H&K)^H&P5g-uK'@mOK'@mOK'A$SrU#4(K'e0WK'e0WK'eH_q>Z'HK)^H&K)^H&
K)^l2p$%(mK'@mOK'@mOK'AH_K'e0WK'e0WK'e0WL@+s>K)^H&K)^H&K)^H&MZ<M:K'@mOK'@mOK'@mO
Np66(K'e0WK'e0WK'e0WP3ml$K)^H&K)^H&K)^T*rTSpuK'@mOK'@mOK'A0Wq<`e$K'e0WK'e0WK'eTc
p&BXDK)^H&K)^H&K)_#6K'@mOK'@mOK'@mOL?\[(K'e0WK'e0WK'e0WMXC6>K)^H&K)^H&K)^H&NrSe:
K'@mOK'@mOK'@mOP3IScK'e0WK'e0WK'e<[rVqKLK)^H&K)^H&K)^`.q<<LqK'@mOK'@mOK'A<[p$I@u
K'e0WK'e0WK'e`gK)^H&K)^H&K)^H&LB%5:K'@mOK'@mOK'@mOMWss(K'e0WK'e0WK'e0WNpZN>K)^H&
K)^H&K)^H&P5g-uK'@mOK'@mOK'A$SrU#4(K'e0WK'e0WK'eH_q>Z'HK)^H&K)^H&K)^l2p$%(mK'@mO
K'@mOK'AH_K'e0WK'e0WK'e0WL@+s>K)^H&K)^H&K)^H&MZ<M:K'@mOK'@mOK'@mONp66(K'e0WK'e0W
K'e0WP3ml$K)^H&K)^H&K)^T*rTSpuK'@mOK'@mOK'A0Wq<`e$K'e0WK'e0WK'eTcp&BXDK)^H&K)^H&
K)_#6K'@mOK'@mOK'@mOL?\[(K'e0WK'e0WK'e0WMXC6>K)^H&K)^H&K)^H&NrSe:K'@mOK'@mOK'@mO
P3IScK'e0WK'e0WK'e<[rVqKLK)^H&K)^H&K)^`.q<<LqK'@mOK'@mOK'A<[p$I@uK'e0WK'e0WK'e`g
K)^H&K)^H&K)^H&LB%5:K'@mOK'@mOK'@mOMWss(K'e0WK'e0WK'e0WNpZN>K)^H&K)^H&K)^H&P5g-u
K'@mOK'@mOK'A$SrU#4(K'e0WK'e0WK'eH_q>Z'HK)^H&K)^H&K)^l2p$%(mK'@mOK'@mOK'AH_K'e0W
K'e0WK'e0WL@+s>K)^H&K)^H&K)^H&MZ<M:K'@mOK'@mOK'@mONp66(K'e0WK'e0WK'e0WP3ml$K)^H&
K)^H&K)^T*rTSpuK'@mOK'@mOK'A0Wq<`e$K'e0WK'e0WK'eTcp&BXDK)^H&K)^H&K)_#6K'@mOK'@mO
K'@mOL?\[(K'e0WK'e0WK'e0WMXC6>K)^H&K)^H&K)^H&NrSe:K'@mOK'@mOK'@mOP3IScK'e0WK'e0W
K'e<[rVqKLK)^H&K)^H&K)^`.q<<LqK'@mOK'@mOK'A<[p$I@uK'e0WK'e0WK'e`gK)^H&K)^H&K)^H&
LB%5:K'@mOK'@mOK'@mOMWss(K'e0WK'e0WK'e0WNpZN>K)^H&K)^H&K)^H&P5g-uK'@mOK'@mOK'A$S
rU#4(K'e0WK'e0WK'eH_q>Z'HK)^H&K)^H&K)^l2p$%(mK'@mOK'@mOK'AH_K'e0WK'e0WK'e0WL@+s>
K)^H&K)^H&K)^H&MZ<M:K'@mOK'@mOK'@mONp66(K'e0WK'e0WK'e0WP3ml$K)^H&K)^H&K)^T*rTSpu
K'@mOK'@mOK'A0Wq<`e$K'e0WK'e0WK'eTcp&BXDK)^H&K)^H&K)_#6K'@mOK'@mOK'@mOL?\[(K'e0W
K'e0WK'e0WMXC6>K)^H&K)^H&K)^H&NrSe:K'@mOK'@mOK'@mOP3IScK'e0WK'e0WK'e<[rVqKLK)^H&
K)^H&K)^`.q<<LqK'@mOK'@mOK'A<[p$I@uK'e0WK'e0WK'e`gK)^H&K)^H&K)^H&LB%5:K'@mOK'@mO
K'@mOMWss(K'e0WK'e0WK'e0WNpZN>K)^H&K)^H&K)^H&P5g-uK'@mOK'@mOK'A$SrTo.&K'\*UK'\*U
K'\B]q>Z'HK)^H&K)^H&K)^l2p$%(mK'@mOK'@mOK'AH_K'\*UK'\*UK'\*UL@"m=K)^H&K)^H&K)^H&
MZ<M:K'@mOK'@mOK'@mONp66'K'\*UK'\*UK'\*UP3df#K)^H&K)^H&K)^T*rTSpuK'@mOK'@mOK'A0W
q<W_"K'\*UK'\*UK'\Nap&BXDK)^H&K)^H&K)_#6K'@mOK'@mOK'@mOL?\['K'\*UK'\*UK'\*UMX:0=
K)^H&K)^H&K)^H&NrSe:K'@mOK'@mOK'@mOP3ISbK'\*UK'\*UK'\6YrVqKLK)^H&K)^H&K)^`.q<<Lq
K'@mOK'@mOK'A<[p$@:sK'\*UK'\*UK'\ZeK)^H&K)^H&K)^H&LB%5:K'@mOK'@mOK'@mOMWss'K'\*U
K'\*UK'\*UNpQH=K)^H&K)^H&K)^H&P5g-uK'@mOK'@mOK'A$SrTo.&K'\*UK'\*UK'\B]q>Z'HK)^H&
K)^H&K)^l2p$%(mK'@mOK'@mOK'AH_K'\*UK'\*UK'\*UL@"m=K)^H&K)^H&K)^H&MZ<M:K'@mOK'@mO
K'@mONp66'K'\*UK'\*UK'\*UP3df#K)^H&K)^H&K)^T*rTSpuK'@mOK'@mOK'A0Wq<W_"K'\*UK'\*U
K'\Nap&BXDK)^H&K)^H&K)_#6K'@mOK'@mOK'@mOL?\['K'\*UK'\*UK'\*UMX:0=K)^H&K)^H&K)^H&
NrSe:K'@mOK'@mOK'@mOP3ISbK'\*UK'\*UK'\6YrVqKLK)^H&K)^H&K)^`.q<<LqK'@mOK'@mOK'A<[
p$@:sK'\*UK'\*UK'\ZeK)^H&K)^H&K)^H&LB%5:K'@mOK'@mOK'@mOMWss'K'\*UK'\*UK'\*UNpQH=
K)^H&K)^H&K)^H&P5g-tK'7gMK'7gMK'7sQrTo.&K'\*UK'\*UK'\B]q>Z'HK)^H&K)^H&K)^l2p#q"k
K'7gMK'7gMK'8B]K'\*UK'\*UK'\*UL@"m=K)^H&K)^H&K)^H&MZ<M9K'7gMK'7gMK'7gMNp-0&K'\*U
K'\*UK'\*UP3df#K)^H&K)^H&K)^T*rTJjsK'7gMK'7gMK'8*Uq<W_"K'\*UK'\*UK'\Nap&BXDK)^H&
K)^H&K)_#6K'7gMK'7gMK'7gML?SU&K'\*UK'\*UK'\*UMX:0=K)^H&K)^H&K)^H&NrSe9K'7gMK'7gM
K'7gMP3@MaK'\*UK'\*UK'\6YrVqKLK)^H&K)^H&K)^`.q<3FoK'7gMK'7gMK'86Yp$@:sK'\*UK'\*U
K'\ZeK)^H&K)^H&K)^H&LB%59K'7gMK'7gMK'7gMMWjm&K'\*UK'\*UK'\*UNpQH=K)^H&K)^H&K)^H&
P5g-tK'7gMK'7gMK'7sQrTo.&K'\*UK'\*UK'\B]q>Z'HK)^H&K)^H&K)^l2p#q"kK'7gMK'7gMK'8B]
K'\*UK'\*UK'\*UL@"m=K)^H&K)^H&K)^H&MZ<M9K'7gMK'7gMK'7gMNp-0&K'\*UK'\*UK'\*UP3df#
K)^H&K)^H&K)^T*rTJjsK'7gMK'7gMK'8*Uq<W_"K'\*UK'\*UK'\Nap&BXDK)^H&K)^H&K)_#6K'7gM
K'7gMK'7gML?SU&K'\*UK'\*UK'\*UMX:0=K)^H&K)^H&K)^H&NrSe9K'7gMK'7gMK'7gMP3@MaK'\*U
K'\*UK'\6YrVqKLK)^H&K)^H&K)^`.q<3FoK'7gMK'7gMK'86Yp$@:sK'\*UK'\*UK'\ZeK)^H&K)^H&
K)^H&LB%59K'7gMK'7gMK'7gMMWjm&K'\*UK'\*UK'\*UNpQH=K)^H&K)^H&K)^H&P5g-tK'7gMK'7gM
K'7sQrTo.&K'\*UK'\*UK'\B]q>Z'HK)^H&K)^H&K)^l2p#q"kK'7gMK'7gMK'8B]K'\*UK'\*UK'\*U
L@"m=K)^H&K)^H&K)^H&MZ<M9K'7gMK'7gMK'7gMNp-0&K'\*UK'\*UK'\*UP3df#K)^H&K)^H&K)^T*
rTJjsK'7gMK'7gMK'8*Uq<W_"K'\*UK'\*UK'\Nap&BXDK)^H&K)^H&K)_#6K'7gMK'7gMK'7gML?SU&
K'\*UK'\*UK'\*UMX:0=K)^H&K)^H&K)^H&NrSe9K'7gMK'7gMK'7gMP3@MaK'\*UK'\*UK'\6YrVqKL
K)^H&K)^H&K)^`.q<3FoK'7gMK'7gMK'86Yp$@:sK'\*UK'\*UK'\ZeK)^H&K)^H&K)^H&LB%59K'7gM
K'7gMK'7gMMWjm&K'\*UK'\*UK'\*UNpQH=K)^H&K)^H&K)^H&P5g-tK'7gMK'7gMK'7sQrTo.&K'\*U
K'\*UK'\B]q>Z'HK)^H&K)^H&K)^l2p#q"kK'7gMK'7gMK'8B]K'\*UK'\*UK'\*UL@"m=K)^H&K)^H&
K)^H&MZ<M9K'7gMK'7gMK'7gMNp-0&K'\*UK'\*UK'\*UP3df#K)^H&K)^H&K)^T*rTJjsK'7gMK'7gM
K'8*Uq<W_"K'\*UK'\*UK'\Nap&BXDK)^H&K)^H&K)_#6K'7gMK'7gMK'7gML?SU&K'\*UK'\*UK'\*U
MX:0=K)^H&K)^H&K)^H&NrSe9K'7gMK'7gMK'7gMP3@MaK'\*UK'\*UK'\6YrVqKLK)^H&K)^H&K)^`.
q<3FoK'7gMK'7gMK'86Yp$@:sK'\*UK'\*UK'\ZeK)^H&K)^H&K)^H&LB%59K'7gMK'7gMK'7gMMWjm&
K'\*UK'\*UK'\*UNpQH=K)^H&K)^H&K)^H&P5g-tK'7gMK'7gMK'7sQrTo.&K'\*UK'\*UK'\B]q>Z'H
K)^H&K)^H&K)^l2p#q"kK'7gMK'7gMK'8B]K'\*UK'\*UK'\*UL@"m=K)^H&K)^H&K)^H&MZ<M9K'7gM
K'7gMK'7gMNp-0&K'\*UK'\*UK'\*UP3df#K)^H&K)^H&K)^T*rTJjsK'7gMK'7gMK'8*Uq<W_"K'\*U
K'\*UK'\Nap&BXDK)^H&K)^H&K)_#6K'7gMK'7gMK'7gML?SU&K'\*UK'\*UK'\*UMX:0=K)^H&K)^H&
K)^H&NrSe9K'7gMK'7gMK'7gMP3@MaK'\*UK'\*UK'\6YrVqKLK)^H&K)^H&K)^`.q<3FoK'7gMK'7gM
K'86Yp$@:sK'\*UK'\*UK'\ZeK)^H&K)^H&K)^H&LB%59K'7gMK'7gMK'7gMMWjm&K'\*UK'\*UK'\*U
NpQH=K)^H&K)^H&K)^H&P5g-tK'7gMK'7gMK'7sQrTo.&K'\*UK'\*UK'\B]q>Z'HK)^H&K)^H&K)^l2
p#q"kK'7gMK'7gMK'8B]K'\*UK'\*UK'\*UL@"m=K)^H&K)^H&K)^H&MZ<M8K'.aKK'.aKK'.aKNp$*%
K'\*UK'\*UK'\*UP3df#K)^H&K)^H&K)^T*rTAdqK'.aKK'.aKK'/$Sq<W_"K'\*UK'\*UK'\Nap&BXD
K)^H&K)^H&K)_#6K'.aKK'.aKK'.aKL?JO%K'\*UK'\*UK'\*UMX:0=K)^H&K)^H&K)^H&NrSe8K'.aK
K'.aKK'.aKP37G`K'\*UK'\*UK'\6YrVqKLK)^H&K)^H&K)^`.q<*@mK'.aKK'.aKK'/0Wp$@:sK'\*U
K'\*UK'\ZeK)^H&K)^H&K)^H&LB%58K'.aKK'.aKK'.aKMWag%K'\*UK'\*UK'\*UNpQH=K)^H&K)^H&
K)^H&P5g-sK'.aKK'.aKK'.mOrTo.&K'\*UK'\*UK'\B]q>Z'HK)^H&K)^H&K)^l2p#gqiK'.aKK'.aK
K'/<[K'\*UK'\*UK'\*UL@"m=K)^H&K)^H&K)^H&MZ<M8K'.aKK'.aKK'.aKNp$*%K'\*UK'\*UK'\*U
P3df#K)^H&K)^H&K)^T*rTAdqK'.aKK'.aKK'/$Sq<W_"K'\*UK'\*UK'\Nap&BXDK)^H&K)^H&K)_#6
K'.aKK'.aKK'.aKL?JO%K'\*UK'\*UK'\*UMX:0=K)^H&K)^H&K)^H&NrSe8K'.aKK'.aKK'.aKP37G`
K'\*UK'\*UK'\6YrVqKLK)^H&K)^H&K)^`.q<*@mK'.aKK'.aKK'/0Wp$74qK'S$SK'S$SK'STcK)^H&
K)^H&K)^H&LB%58K'.aKK'.aKK'.aKMWag$K'S$SK'S$SK'S$SNpHB<K)^H&K)^H&K)^H&P5g-sK'.aK
K'.aKK'.mOrTf($K'S$SK'S$SK'S<[q>Z'HK)^H&K)^H&K)^l2p#gqiK'.aKK'.aKK'/<[K'S$SK'S$S
K'S$SL?ng<K)^H&K)^H&K)^H&MZ<M8K'.aKK'.aKK'.aKNp$*$K'S$SK'S$SK'S$SP3[`"K)^H&K)^H&
K)^T*rTAdqK'.aKK'.aKK'/$Sq<NXuK'S$SK'S$SK'SH_p&BXDK)^H&K)^H&K)_#6K'.aKK'.aKK'.aK
L?JO$K'S$SK'S$SK'S$SMX1*<K)^H&K)^H&K)^H&NrSe8K'.aKK'.aKK'.aKP37G_K'S$SK'S$SK'S0W
rVqKLK)^H&K)^H&K)^`.q<*@mK'.aKK'.aKK'/0Wp$74qK'S$SK'S$SK'STcK)^H&K)^H&K)^H&LB%58
K'.aKK'.aKK'.aKMWag$K'S$SK'S$SK'S$SNpHB<K)^H&K)^H&K)^H&P5g-sK'.aKK'.aKK'.mOrTf($
K'S$SK'S$SK'S<[q>Z'HK)^H&K)^H&K)^l2p#gqiK'.aKK'.aKK'/<[K'S$SK'S$SK'S$SL?ng<K)^H&
K)^H&K)^H&MZ<M8K'.aKK'.aKK'.aKNp$*$K'S$SK'S$SK'S$SP3[`"K)^H&K)^H&K)^T*rTAdqK'.aK
K'.aKK'/$Sq<NXuK'S$SK'S$SK'SH_p&BXDK)^H&K)^H&K)_#6K'.aKK'.aKK'.aKL?JO$K'S$SK'S$S
K'S$SMX1*<K)^H&K)^H&K)^H&NrSe8K'.aKK'.aKK'.aKP37G_K'S$SK'S$SK'S0WrVqKLK)^H&K)^H&
K)^`.q<*@mK'.aKK'.aKK'/0Wp$74qK'S$SK'S$SK'STcK)^H&K)^H&K)^H&LB%58K'.aKK'.aKK'.aK
MWag$K'S$SK'S$SK'S$SNpHB<K)^H&K)^H&K)^H&P5g-rK'%[IK'%[IK'%gMrTf($K'S$SK'S$SK'S<[
q>Z'HK)^H&K)^H&K)^l2p#^kgK'%[IK'%[IK'&6YK'S$SK'S$SK'S$SL?ng<K)^H&K)^H&K)^H&MZ<M7
K'%[IK'%[IK'%[INop$#K'S$SK'S$SK'S$SP3[`"K)^H&K)^H&K)^T*rT8^oK'%[IK'%[IK'%sQq<NXu
K'S$SK'S$SK'SH_p&BXDK)^H&K)^H&K)_#6K'%[IK'%[IK'%[IL?AI#K'S$SK'S$SK'S$SMX1*<K)^H&
K)^H&K)^H&NrSe7K'%[IK'%[IK'%[IP3.A^K'S$SK'S$SK'S0WrVqKLK)^H&K)^H&K)^`.q<!:kK'%[I
K'%[IK'&*Up$74qK'S$SK'S$SK'STcK)^H&K)^H&K)^H&LB%57K'%[IK'%[IK'%[IMWXa#K'S$SK'S$S
K'S$SNpHB<K)^H&K)^H&K)^H&P5g-rK'%[IK'%[IK'%gMrTf($K'S$SK'S$SK'S<[q>Z'HK)^H&K)^H&
K)^l2p#^kgK'%[IK'%[IK'&6YK'S$SK'S$SK'S$SL?ng<K)^H&K)^H&K)^H&MZ<M7K'%[IK'%[IK'%[I
Nop$#K'S$SK'S$SK'S$SP3[`"K)^H&K)^H&K)^T*rT8^oK'%[IK'%[IK'%sQq<NXuK'S$SK'S$SK'SH_
p&BXDK)^H&K)^H&K)_#6K'%[IK'%[IK'%[IL?AI#K'S$SK'S$SK'S$SMX1*<K)^H&K)^H&K)^H&NrSe7
K'%[IK'%[IK'%[IP3.A^K'S$SK'S$SK'S0WrVqKLK)^H&K)^H&K)^`.q<!:kK'%[IK'%[IK'&*Up$74q
K'S$SK'S$SK'STcK)^H&K)^H&K)^H&LB%57K'%[IK'%[IK'%[IMWXa#K'S$SK'S$SK'S$SNpHB<K)^H&
K)^H&K)^H&P5g-rK'%[IK'%[IK'%gMrT]""K'IsQK'IsQK'J6Yq>Z'HK)^H&K)^H&K)^l2p#^kgK'%[I
K'%[IK'&6YK'IsQK'IsQK'IsQL?ea;K)^H&K)^H&K)^H&MZ<M7K'%[IK'%[IK'%[INop$"K'IsQK'IsQ
K'IsQP3RZ!K)^H&K)^H&K)^T*rT8^oK'%[IK'%[IK'%sQq<ERsK'IsQK'IsQK'JB]p&BXDK)^H&K)^H&
K)_#6K'%[IK'%[IK'%[IL?AI"K'IsQK'IsQK'IsQMX($;K)^H&K)^H&K)^H&NrSe7K'%[IK'%[IK'%[I
P3.A]K'IsQK'IsQK'J*UrVqKLK)^H&K)^H&K)^`.q<!:kK'%[IK'%[IK'&*Up$..oK'IsQK'IsQK'JNa
K)^H&K)^H&K)^H&LB%57K'%[IK'%[IK'%[IMWXa"K'IsQK'IsQK'IsQNp?<;K)^H&K)^H&K)^H&P5g-r
K'%[IK'%[IK'%gMrT]""K'IsQK'IsQK'J6Yq>Z'HK)^H&K)^H&K)^l2p#^kgK'%[IK'%[IK'&6YK'IsQ
K'IsQK'IsQL?ea;K)^H&K)^H&K)^H&MZ<M7K'%[IK'%[IK'%[INop$"K'IsQK'IsQK'IsQP3RZ!K)^H&
K)^H&K)^T*rT8^oK'%[IK'%[IK'%sQq<ERsK'IsQK'IsQK'JB]p&BXDK)^H&K)^H&K)_#6K'%[IK'%[I
K'%[IL?AI"K'IsQK'IsQK'IsQMX($;K)^H&K)^H&K)^H&NrSe7K'%[IK'%[IK'%[IP3.A]K'IsQK'IsQ
K'J*UrVqKLK)^H&K)^H&K)^`.q<!:kK'%[IK'%[IK'&*Up$..oK'IsQK'IsQK'JNaK)^H&K)^H&K)^H&
LB%57K'%[IK'%[IK'%[IMWXa"K'IsQK'IsQK'IsQNp?<;K)^H&K)^H&K)^H&P5g-rK'%[IK'%[IK'%gM
rT]""K'IsQK'IsQK'J6Yq>Z'HK)^H&K)^H&K)^l2p#^kgK'%[IK'%[IK'&6YK'IsQK'IsQK'IsQL?ea;
K)^H&K)^H&K)^H&MZ<M7K'%[IK'%[IK'%[INop$"K'IsQK'IsQK'IsQP3RZ!K)^H&K)^H&K)^T*rT8^o
K'%[IK'%[IK'%sQq<ERsK'IsQK'IsQK'JB]p&BXDK)^H&K)^H&K)_#6K'%[IK'%[IK'%[IL?AI"K'IsQ
K'IsQK'IsQMX($;K)^H&K)^H&K)^H&NrSe7K'%[IK'%[IK'%[IP3.A]K'IsQK'IsQK'J*UrVqKLK)^H&
K)^H&K)^`.q<!:kK'%[IK'%[IK'&*Up$..oK'IsQK'IsQK'JNaK)^H&K)^H&K)^H&LB%57K'%[IK'%[I
K'%[IMWXa"K'IsQK'IsQK'IsQNp?<;K)^H&K)^H&K)^H&P5g-rK'%[IK'%[IK'%gMrT]""K'IsQK'IsQ
K'J6Yq>Z'HK)^H&K)^H&K)^l2p#^kgK'%[IK'%[IK'&6YK'IsQK'IsQK'IsQL?ea;K)^H&K)^H&K)^H&
MZ<M6K&qUGK&qUGK&qUGNofs!K'IsQK'IsQK'IsQP3RZ!K)^H&K)^H&K)^T*rT/XmK&qUGK&qUGK&qmO
q<ERsK'IsQK'IsQK'JB]p&BXDK)^H&K)^H&K)_#6K&qUGK&qUGK&qUGL?8C!K'IsQK'IsQK'IsQMX($;
K)^H&K)^H&K)^H&NrSe6K&qUGK&qUGK&qUGP3%;\K'IsQK'IsQK'J*UrVqKLK)^H&K)^H&K)^`.q;m4i
K&qUGK&qUGK&r$Sp$..oK'IsQK'IsQK'JNaK)^H&K)^H&K)^H&LB%56K&qUGK&qUGK&qUGMWO[!K'IsQ
K'IsQK'IsQNp?<;K)^H&K)^H&K)^H&P5g-qK&qUGK&qUGK&qaKrT]""K'IsQK'IsQK'J6Yq>Z'HK)^H&
K)^H&K)^l2p#UeeK&qUGK&qUGK&r0WK'IsQK'IsQK'IsQL?ea;K)^H&K)^H&K)^H&MZ<M6K&qUGK&qUG
K&qUGNofs!K'IsQK'IsQK'IsQP3RZ!K)^H&K)^H&K)^T*rT/XmK&qUGK&qUGK&qmOq<<LqK'@mOK'@mO
K'A<[p&BXDK)^H&K)^H&K)_#6K&qUGK&qUGK&qUGL?8BuK'@mOK'@mOK'@mOMWss:K)^H&K)^H&K)^H&
NrSe6K&qUGK&qUGK&qUGP3%;[K'@mOK'@mOK'A$SrVqKLK)^H&K)^H&K)^`.q;m4iK&qUGK&qUGK&r$S
p$%(mK'@mOK'@mOK'AH_K)^H&K)^H&K)^H&LB%56K&qUGK&qUGK&qUGMWOZuK'@mOK'@mOK'@mONp66:
K)^H&K)^H&K)^H&P5g-qK&qUGK&qUGK&qaKrTSpuK'@mOK'@mOK'A0Wq>Z'HK)^H&K)^H&K)^l2p#Uee
K&qUGK&qUGK&r0WK'@mOK'@mOK'@mOL?\[:K)^H&K)^H&K)^H&MZ<M6K&qUGK&qUGK&qUGNofruK'@mO
K'@mOK'@mOP3ISuK)^H&K)^H&K)^T*rT/XmK&qUGK&qUGK&qmOq<<LqK'@mOK'@mOK'A<[p&BXDK)^H&
K)^H&K)_#6K&qUGK&qUGK&qUGL?8BuK'@mOK'@mOK'@mOMWss:K)^H&K)^H&K)^H&NrSe6K&qUGK&qUG
K&qUGP3%;[K'@mOK'@mOK'A$SrVqKLK)^H&K)^H&K)^`.q;m4iK&qUGK&qUGK&r$Sp$%(mK'@mOK'@mO
K'AH_K)^H&K)^H&K)^H&LB%56K&qUGK&qUGK&qUGMWOZuK'@mOK'@mOK'@mONp66:K)^H&K)^H&K)^H&
P5g-qK&qUGK&qUGK&qaKrTSpuK'@mOK'@mOK'A0Wq>Z'HK)^H&K)^H&K)^l2p#UeeK&qUGK&qUGK&r0W
K'@mOK'@mOK'@mOL?\[:K)^H&K)^H&K)^H&MZ<M6K&qUGK&qUGK&qUGNofruK'@mOK'@mOK'@mOP3ISu
K)^H&K)^H&K)^T*rT/XmK&qUGK&qUGK&qmOq<<LqK'@mOK'@mOK'A<[p&BXDK)^H&K)^H&K)_#6K&qUG
K&qUGK&qUGL?8BuK'@mOK'@mOK'@mOMWss:K)^H&K)^H&K)^H&NrSe6K&qUGK&qUGK&qUGP3%;[K'@mO
K'@mOK'A$SrVqKLK)^H&K)^H&K)^`.q;m4iK&qUGK&qUGK&r$Sp$%(mK'@mOK'@mOK'AH_K)^H&K)^H&
K)^H&LB%56K&qUGK&qUGK&qUGMWOZuK'@mOK'@mOK'@mONp66:K)^H&K)^H&K)^H&P5g-qK&qUGK&qUG
K&qaKrTSpuK'@mOK'@mOK'A0Wq>Z'HK)^H&K)^H&K)^l2p#UeeK&qUGK&qUGK&r0WK'@mOK'@mOK'@mO
L?\[:K)^H&K)^H&K)^H&MZ<M6K&qUGK&qUGK&qUGNofruK'@mOK'@mOK'@mOP3ISuK)^H&K)^H&K)^T*
rT/XmK&qUGK&qUGK&qmOq<<LqK'@mOK'@mOK'A<[p&BXDK)^H&K)^H&K)_#6K&qUGK&qUGK&qUGL?8Bu
K'@mOK'@mOK'@mOMWss:K)^H&K)^H&K)^H&NrSe6K&qUGK&qUGK&qUGP3%;[K'@mOK'@mOK'A$SrVqKL
K)^H&K)^H&K)^`.q;m4iK&qUGK&qUGK&r$Sp$%(mK'@mOK'@mOK'AH_K)^H&K)^H&K)^H&LB%56K&qUG
K&qUGK&qUGMWOZuK'@mOK'@mOK'@mONp66:K)^H&K)^H&K)^H&P5g-qK&qUGK&qUGK&qaKrTSpuK'@mO
K'@mOK'A0Wq>Z'HK)^H&K)^H&K)^l2J,~>

%%EndBinary
grestore
np
grestore
319.463 326.145 mo
319.463 339.545 li
319.463 340.291 318.858 340.895 318.113 340.895 cv
317.367 340.895 316.764 340.291 316.764 339.545 cv
316.764 328.986 li
285.14 357.564 li
284.847 357.83 284.438 357.955 284.038 357.893 cv
155.43 338.222 li
93.728 375.6 li
93.5146 375.725 93.2754 375.796 93.0264 375.796 cv
92.9199 375.796 92.8047 375.778 92.6978 375.751 cv
91.1436 375.36 li
90.9487 374.419 90.771 373.442 90.5933 372.439 cv
92.8135 372.998 li
154.445 335.656 li
154.72 335.496 155.04 335.434 155.351 335.478 cv
283.808 355.131 li
313.673 328.151 li
304.827 329.412 li
304.091 329.527 303.407 329.004 303.301 328.267 cv
303.193 327.539 303.709 326.855 304.437 326.748 cv
317.927 324.813 li
318.308 324.759 318.708 324.875 319.001 325.123 cv
319.294 325.381 319.463 325.754 319.463 326.145 cv
cp
level3{
gsave
clp
[228.87 0 0 228.87 90.5933 350.298 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .262745 .368627 ]
/C1 [.980392 .682353 .690196 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.980392 .682353 .690196 ]
/C1 [.980392 .682353 .690196 ]
/N 1 
>>
]
/Bounds [.99002 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[228.87 0 0 228.87 90.5933 350.298 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2oqrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVcZlr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;6Bgqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9eqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
~>
<~6UO4/6q'O57Rfm<84Z9C8P2TJ91qrP9he>W:/=Y^:f("d;GpFl;cH^r<E3(#='&L+=BSd1>$G38>[1Q?
?=$rF?XR8L@:<VS@q0"ZA7]=aAnG[gBP;'nBkhBuCMRa&D/F0.DJsH4E,fl;EcQ5BF*)MHF`qqOGB\:V
H$O[]H@(!cI!g?jIXZ`qIt3'#JUrE)K7ei1KS>,7L5(J=LkpnEM2I1KMi<URNK&sYNfT6_OHGZfP*2#m
Pa%DtQ'R`&Q^=),R@0J3R[]e:S=H.@St;RHT:hjNTqS3TUSFW\UnsobVPg>iW2Q\pWiE)"X/rD(Xf\b/
~>
<~?=$rE?XI/J?smDO@:E\T@q0"ZA7T7_AS,OdB4kjjBP;*oBk_<sC27U#Ci!p)D/F0.DJsH3E,]c9EH-#>
EcZ;CFEDVHF`hhMG'8(RGBe@WH$O[]H?spbH[L3gI=6NmIXZcrIt*!!J:W9&JqAT,K7ei1KS>,6L5(G<
LPL\ALl$tFMMd:KMi3LPN/WaUNK0$ZO,o?`OH>TeOckljPEV2pPa%GuQ'IZ$QC!r)R$a8/R@0M4R[]e9
S=H+?SXl@DStDXITV.sNTqS0SU8"EXUSO]]V5:#cVP^8hVl6PmWMuksWiE,#X/i>'XKAV,Y-+q2YHP17
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
63.479 113.59 mo
57.811 120.466 62.4942 135.306 89.0126 135.306 cv
115.531 135.306 165.622 135.306 165.622 135.306 cv
165.622 135.306 193.228 130.923 186.651 118.342 cv
180.076 105.762 170.649 113.845 169.146 99.4428 cv
167.643 85.0411 151.157 70.8632 138.974 80.9121 cv
126.792 90.9614 119.863 105.578 115.631 96.7895 cv
111.399 88.001 98.2705 88.2251 89.2094 92.4858 cv
80.1485 96.7461 88.607 117.866 79.5776 113.59 cv
70.5483 109.314 68.2505 107.802 63.479 113.59 cv
1 1 1 rgb
f
384.18 150.52 mo
384.088 150.52 383.997 150.5 383.911 150.458 cv
383.591 150.312 383.448 149.932 383.596 149.609 cv
385.818 144.723 li
385.969 144.402 386.353 144.258 386.671 144.406 cv
386.994 144.553 387.135 144.934 386.99 145.256 cv
384.762 150.143 li
384.652 150.378 384.422 150.52 384.18 150.52 cv
cp
.376471 .466667 .945098 rgb
f
398.132 159.143 mo
397.97 159.143 397.803 159.08 397.673 158.951 cv
397.426 158.699 397.43 158.291 397.686 158.043 cv
399.979 155.792 li
400.228 155.544 400.633 155.548 400.882 155.801 cv
401.13 156.055 401.13 156.46 400.876 156.71 cv
398.58 158.96 li
398.455 159.082 398.304 159.143 398.132 159.143 cv
cp
f
363.259 153.021 mo
363.031 153.021 362.814 152.899 362.692 152.685 cv
360.448 148.505 li
360.281 148.19 360.394 147.802 360.707 147.635 cv
361.021 147.467 361.409 147.583 361.578 147.897 cv
363.824 152.076 li
363.992 152.388 363.876 152.778 363.563 152.945 cv
363.469 152.997 363.365 153.021 363.259 153.021 cv
cp
f
342.721 167.239 mo
342.552 167.328 342.279 167.447 341.848 167.635 cv
338.581 169.18 336.436 170.745 336.109 171.815 cv
336.039 172.049 336.057 172.248 336.169 172.436 cv
336.192 172.474 336.259 172.584 336.565 172.584 cv
338.843 172.584 346.438 166.854 349.177 164.646 cv
349.272 164.567 349.404 164.552 349.514 164.604 cv
349.625 164.655 349.7 164.767 349.7 164.891 cv
349.76 168.453 li
350.881 166.236 353.34 161.417 354.827 158.892 cv
356.479 156.086 359.091 154.482 360.047 153.965 cv
359.063 152.622 355.094 146.244 357.832 133.572 cv
343.811 137.704 323.347 144.896 323.052 148.229 cv
323.029 148.492 323.1 148.708 323.267 148.89 cv
323.601 149.262 324.531 149.704 327.005 149.704 cv
333.122 149.704 343.827 147.068 345.918 146.54 cv
346.197 146.468 li
346.37 146.423 346.545 146.528 346.588 146.7 cv
346.63 146.869 346.529 147.044 346.357 147.09 cv
346.078 147.161 li
346.078 147.162 li
331.611 150.885 316.223 156.235 316.631 159.18 cv
316.763 160.162 318.663 160.369 320.233 160.369 cv
327.91 160.369 344.519 155.541 344.687 155.49 cv
344.855 155.441 345.031 155.536 345.083 155.703 cv
345.135 155.869 345.042 156.047 344.879 156.103 cv
325.028 162.745 317.936 167.09 318.125 168.269 cv
318.192 168.663 318.975 168.721 319.436 168.721 cv
322.931 168.721 331.456 165.71 336.235 163.914 cv
338.741 162.869 340.796 162.138 340.816 162.131 cv
340.984 162.072 341.161 162.157 341.224 162.319 cv
341.287 162.482 341.205 162.664 341.045 162.731 cv
341.028 162.739 339.128 163.512 336.465 164.515 cv
326.961 168.475 326.806 170.219 326.991 170.661 cv
327.158 171.076 327.853 171.164 328.407 171.164 cv
331.957 171.164 340.011 167.735 341.597 167.047 cv
342.069 166.82 342.415 166.671 342.517 166.63 cv
342.691 166.562 342.925 166.67 342.964 166.858 cv
343 167.021 343.011 167.083 342.757 167.222 cv
342.757 167.225 li
342.721 167.239 li
cp
336.565 173.224 mo
336.013 173.224 335.744 172.976 335.619 172.766 cv
335.412 172.421 335.37 172.038 335.495 171.629 cv
335.715 170.896 336.48 170.136 337.44 169.428 cv
334.368 170.588 330.617 171.806 328.407 171.806 cv
327.313 171.806 326.641 171.501 326.395 170.902 cv
326.209 170.438 325.724 169.254 330.254 166.734 cv
325.94 168.179 321.724 169.361 319.436 169.361 cv
318.249 169.361 317.6 169.029 317.492 168.371 cv
317.099 165.952 328.588 161.273 336.964 158.201 cv
331.521 159.533 324.513 161.011 320.233 161.011 cv
317.539 161.011 316.155 160.441 315.99 159.267 cv
315.886 158.507 315.575 156.195 329.669 151.362 cv
331.762 150.647 333.891 149.97 335.896 149.359 cv
332.771 149.912 329.514 150.346 327.005 150.346 cv
324.804 150.346 323.417 150.012 322.79 149.323 cv
322.501 149.004 322.373 148.617 322.41 148.171 cv
322.482 147.378 322.694 144.958 340.547 138.547 cv
349.283 135.41 358.087 132.827 358.166 132.803 cv
358.285 132.771 358.398 132.798 358.479 132.876 cv
358.564 132.954 358.599 133.069 358.577 133.182 cv
355.374 147.229 360.583 153.627 360.76 153.835 cv
360.853 153.998 li
360.888 154.146 360.818 154.297 360.685 154.36 cv
360.65 154.378 357.283 155.989 355.381 159.216 cv
353.428 162.531 349.783 169.833 349.75 169.907 cv
349.679 170.039 349.534 170.109 349.387 170.076 cv
349.246 170.044 349.141 169.916 349.135 169.768 cv
349.065 165.552 li
346.97 167.21 339.177 173.224 336.565 173.224 cv
cp
f
405.28 177.346 mo
405.28 179.356 405.078 181.32 404.677 183.209 cv
401.974 196.095 390.544 205.772 376.855 205.772 cv
365.661 205.772 355.979 199.299 351.348 189.885 cv
349.479 186.104 348.434 181.846 348.434 177.346 cv
348.434 161.646 361.158 148.919 376.855 148.919 cv
392.555 148.919 405.28 161.646 405.28 177.346 cv
cp
.988235 .760784 .760784 rgb
f
404.677 183.209 mo
401.974 196.095 390.544 205.772 376.855 205.772 cv
365.661 205.772 355.979 199.299 351.348 189.885 cv
357.332 192.718 366.531 195.447 378.114 193.79 cv
390.806 191.973 399.652 186.847 404.677 183.209 cv
cp
.980392 .682353 .690196 rgb
f
351.348 181.802 mo
396.18 162.113 li
396.18 162.113 389.536 152.929 379.56 151.732 cv
369.581 150.534 359.041 157.47 354.184 165.559 cv
349.321 173.649 351.348 181.802 351.348 181.802 cv
cp
1 .823529 .823529 rgb
f
407.809 167.57 mo
407.919 167.57 408.028 167.629 408.086 167.725 cv
410.912 172.398 416.042 179.81 417.774 179.81 cv
417.981 179.74 li
419.479 178.479 417.594 174.498 416.742 173.07 cv
416.647 172.923 416.694 172.733 416.834 172.639 cv
416.979 172.543 417.168 172.574 417.27 172.71 cv
418.619 174.484 422.498 179.082 424.188 179.082 cv
424.197 179.082 li
424.327 179.082 424.433 179.049 424.525 178.979 cv
425.547 178.198 424.378 174.526 422.77 171.234 cv
422.715 171.135 422.662 171.026 422.611 170.918 cv
422.537 170.761 422.6 170.57 422.757 170.494 cv
422.911 170.416 423.109 170.479 423.184 170.635 cv
423.184 170.635 423.244 170.749 423.347 170.951 cv
424.994 174.095 429.213 177.428 431.544 177.426 cv
431.956 177.426 432.284 177.319 432.533 177.105 cv
433.603 176.164 432.453 173.547 431.028 171.413 cv
429.514 169.815 429.588 169.653 429.657 169.482 cv
429.713 169.364 429.839 169.282 429.967 169.282 cv
430.064 169.282 430.369 169.282 431.56 171.055 cv
433.749 173.372 436.764 175.893 438.574 175.893 cv
438.823 175.893 439.044 175.841 439.229 175.741 cv
441.486 174.526 440.559 170.175 436.312 162.048 cv
432.987 155.675 422.785 144.445 420.768 142.25 cv
417.622 149.915 404.091 162.239 402.256 163.886 cv
402.854 165.142 404.324 169.2 404.668 170.167 cv
404.691 170.167 li
406.492 170.167 407.508 167.792 407.513 167.769 cv
407.558 167.656 407.672 167.579 407.784 167.571 cv
407.809 167.57 li
cp
417.774 180.454 mo
415.321 180.454 409.382 171.06 407.837 168.549 cv
407.35 169.41 406.187 170.973 404.409 170.792 cv
404.282 170.779 404.182 170.697 404.138 170.582 cv
404.119 170.523 402.088 164.873 401.577 163.969 cv
401.503 163.838 401.526 163.673 401.643 163.573 cv
401.799 163.432 417.518 149.384 420.354 141.543 cv
420.392 141.438 420.477 141.359 420.594 141.338 cv
420.696 141.316 420.813 141.353 420.888 141.433 cv
421.011 141.565 433.163 154.624 436.888 161.751 cv
441.386 170.379 442.204 174.869 439.531 176.309 cv
439.259 176.458 438.928 176.535 438.574 176.535 cv
436.821 176.535 434.438 174.682 432.767 173.141 cv
433.546 174.741 434.067 176.613 432.953 177.586 cv
432.596 177.906 432.119 178.069 431.544 178.069 cv
429.635 178.069 426.7 176.167 424.588 173.8 cv
425.442 176.048 426.063 178.614 424.915 179.49 cv
424.712 179.646 424.469 179.726 424.197 179.726 cv
424.188 179.726 li
422.674 179.726 420.182 177.175 418.492 175.226 cv
419.179 176.971 419.661 179.17 418.399 180.23 cv
418.221 180.377 418.013 180.454 417.774 180.454 cv
cp
.376471 .466667 .945098 rgb
f
353.445 153.872 mo
353.445 153.872 356.013 153.125 359.387 151.84 cv
362.754 150.554 369.401 146.263 369.401 146.263 cv
369.401 146.263 364.63 147.398 360.775 148.921 cv
356.92 150.446 353.445 153.872 353.445 153.872 cv
cp
.937255 .592157 .615686 rgb
f
251.241 195.319 mo
251.167 197.321 251.724 205.271 251.724 205.271 cv
246.825 205.509 li
246.607 206.029 246.343 206.6 246.042 207.192 cv
245.97 207.333 245.893 207.473 245.817 207.621 cv
244.333 210.337 241.892 213.162 237.919 212.654 cv
237.483 212.598 237.079 212.5 236.693 212.392 cv
236.488 212.334 236.28 212.27 236.089 212.195 cv
234.683 211.672 233.628 210.837 232.866 209.996 cv
232.814 209.94 li
231.985 209.015 231.509 208.117 231.307 207.659 cv
231.224 207.473 231.177 207.352 231.177 207.352 cv
231.086 207.442 li
230.783 207.737 229.711 208.771 228.724 209.657 cv
227.908 210.387 227.152 211.02 226.918 211.051 cv
226.499 211.108 224.851 206.465 224.094 203.967 cv
223.856 203.183 223.708 202.613 223.708 202.459 cv
223.708 201.816 224.991 198.444 224.991 198.444 cv
225.494 198.537 226.136 198.991 226.748 199.532 cv
227.773 200.463 228.768 201.656 228.768 201.656 cv
229.141 201.285 229.358 198.979 229.358 196.411 cv
229.358 193.839 230.908 190.471 232.46 190.952 cv
234.017 191.433 234.599 196.681 234.599 196.681 cv
234.599 196.681 234.908 196.525 236.05 194.651 cv
236.416 194.041 236.872 193.258 237.437 192.237 cv
239.738 188.062 242.301 185.815 246.535 184.158 cv
250.665 182.539 252.57 184.556 252.665 184.653 cv
253.125 185.776 252.943 187.396 252.845 189.135 cv
252.689 192.025 251.241 195.319 251.241 195.319 cv
cp
.952941 .713726 .670588 rgb
f
236.089 212.195 mo
234.683 211.672 233.628 210.837 232.866 209.996 cv
232.814 209.94 li
231.985 209.015 231.509 208.117 231.307 207.659 cv
231.224 207.473 231.177 207.352 231.177 207.352 cv
231.086 207.442 li
230.783 207.737 229.711 208.771 228.724 209.657 cv
227.794 207.03 226.227 203.897 224.094 203.967 cv
223.856 203.183 223.708 202.613 223.708 202.459 cv
223.708 201.816 224.991 198.444 224.991 198.444 cv
225.494 198.537 226.136 198.991 226.748 199.532 cv
227.773 200.463 228.768 201.656 228.768 201.656 cv
229.141 201.285 229.358 198.979 229.358 196.411 cv
229.358 193.839 230.908 190.471 232.46 190.952 cv
234.017 191.433 234.599 196.681 234.599 196.681 cv
234.599 196.681 234.908 196.525 236.05 194.651 cv
235.138 197.091 234.074 200.494 233.841 203.583 cv
233.592 206.965 234.965 210.177 236.089 212.195 cv
cp
.956863 .580392 .556863 rgb
f
240.488 232.073 mo
240.481 233.017 240.462 233.914 240.431 234.815 cv
240.424 235.059 li
240.424 235.128 li
240.162 242.463 239.19 248.409 237.874 253.676 cv
237.514 255.137 237.128 256.551 236.719 257.924 cv
234.625 264.902 232.698 276.7 232.46 276.7 cv
232.325 276.7 229.447 275.461 225.418 273.489 cv
225.27 273.418 225.12 273.349 224.965 273.271 cv
221.981 271.807 218.416 269.971 214.887 267.955 cv
206.294 263.063 203.245 256.639 203.245 256.639 cv
203.245 256.639 205.338 255.39 208.035 253.634 cv
209.493 252.686 211.136 251.587 212.716 250.457 cv
217.211 247.245 227.162 240.908 231.581 229.827 cv
233.856 224.123 234.04 218.744 233.687 214.864 cv
233.493 212.714 233.13 211.02 232.866 209.996 cv
233.695 210.915 234.874 211.825 236.48 212.321 cv
236.693 212.392 li
236.745 212.513 236.801 212.654 236.872 212.842 cv
236.979 213.118 237.109 213.458 237.257 213.871 cv
237.296 213.985 237.34 214.114 237.384 214.241 cv
237.426 214.336 237.458 214.434 237.488 214.537 cv
237.53 214.646 237.565 214.762 237.602 214.883 cv
237.675 215.089 li
237.737 215.288 237.81 215.488 237.874 215.7 cv
238.003 216.103 238.136 216.534 238.27 217.004 cv
238.287 217.048 li
238.447 217.582 238.6 218.158 238.755 218.762 cv
238.873 219.198 238.98 219.649 239.089 220.117 cv
239.146 220.349 239.198 220.585 239.25 220.824 cv
239.281 220.977 239.312 221.125 239.354 221.277 cv
239.382 221.452 239.421 221.632 239.452 221.807 cv
239.638 222.704 239.81 223.655 239.949 224.636 cv
240.017 225.134 240.09 225.633 240.146 226.139 cv
240.146 226.146 li
240.211 226.654 240.26 227.169 240.307 227.694 cv
240.328 227.932 240.346 228.175 240.364 228.418 cv
240.384 228.613 240.398 228.805 240.405 229.004 cv
240.416 229.249 240.431 229.498 240.441 229.749 cv
240.449 229.862 240.458 229.985 240.458 230.108 cv
240.467 230.377 240.473 230.655 240.481 230.929 cv
240.488 231.309 240.488 231.687 240.488 232.073 cv
cp
.137255 .247059 .890196 rgb
f
237.874 253.676 mo
237.514 255.137 237.128 256.551 236.719 257.924 cv
234.625 264.902 232.698 276.7 232.46 276.7 cv
232.325 276.7 229.447 275.461 225.418 273.489 cv
225.27 273.418 225.12 273.349 224.965 273.271 cv
221.981 271.807 218.416 269.971 214.887 267.955 cv
206.294 263.063 203.245 256.639 203.245 256.639 cv
203.245 256.639 205.338 255.39 208.035 253.634 cv
214.571 255.018 226.731 256.833 237.874 253.676 cv
cp
.0470588 .207843 .729412 rgb
f
230.978 231.225 mo
230.766 231.687 230.548 232.137 230.323 232.587 cv
226.949 239.287 221.781 244.53 211.623 251.227 cv
200.794 258.362 195.911 260.706 195.911 260.706 cv
194.268 260.264 192.758 259.695 191.393 259.068 cv
191.209 258.985 191.038 258.906 190.872 258.825 cv
188.81 257.83 187.09 256.703 185.74 255.689 cv
184.952 255.094 184.289 254.535 183.757 254.053 cv
182.741 253.133 182.215 252.52 182.215 252.52 cv
182.215 252.52 183.063 252.126 184.476 251.369 cv
187.84 249.597 191.059 247.623 193.613 246.045 cv
198.665 242.914 203.406 239.779 209.343 230.872 cv
210.861 228.599 212.343 226.103 213.711 223.63 cv
213.731 223.592 li
216.742 218.17 219.201 212.907 220.26 210.555 cv
220.491 210.042 220.654 209.671 220.742 209.464 cv
220.789 209.355 220.814 209.292 220.82 209.277 cv
220.846 209.208 220.955 208.63 221.097 207.852 cv
221.436 206.047 221.949 203.177 221.949 203.177 cv
223.708 202.459 li
223.708 203.1 226.361 211.129 226.918 211.051 cv
227.431 210.972 230.541 207.973 231.086 207.442 cv
231.307 207.659 li
231.509 208.117 231.985 209.015 232.814 209.94 cv
232.846 210.074 232.877 210.21 232.911 210.344 cv
232.965 210.555 233.006 210.763 233.05 210.972 cv
233.302 212.135 233.493 213.297 233.628 214.46 cv
234.271 220.084 233.499 225.689 230.978 231.225 cv
cp
.835294 .862745 1 rgb
f
230.323 232.587 mo
226.949 239.287 221.781 244.53 211.623 251.227 cv
200.794 258.362 195.911 260.706 195.911 260.706 cv
194.268 260.264 192.758 259.695 191.393 259.068 cv
191.209 258.985 191.038 258.906 190.872 258.825 cv
188.81 257.83 187.09 256.703 185.74 255.689 cv
191.011 254.193 209.094 249.776 220.26 241.359 cv
224.866 237.893 228.081 234.937 230.323 232.587 cv
cp
.682353 .741176 .956863 rgb
f
178.856 287.84 mo
178.856 287.84 164.557 297.491 151.182 302.737 cv
137.801 307.978 132.021 309.479 124.534 305.198 cv
117.041 300.913 91.7856 276.675 91.7856 276.675 cv
91.7856 276.675 93.2065 275.385 94.6875 274.131 cv
96.1221 272.923 97.6235 271.758 97.9888 271.807 cv
98.7393 271.916 127.527 280.72 134.166 289.75 cv
134.166 289.75 145.184 279.832 150.963 274.483 cv
156.745 269.131 167.673 260.711 167.673 260.711 cv
166.953 264.098 167.15 269.218 169.803 274.161 cv
170.233 274.96 170.753 275.858 171.35 276.831 cv
172.02 277.921 172.781 279.11 173.616 280.358 cv
175.19 282.711 176.995 285.278 178.856 287.84 cv
cp
.0470588 .0784314 .596078 rgb
f
178.856 287.84 mo
178.856 287.84 164.557 297.491 151.182 302.737 cv
137.801 307.978 132.021 309.479 124.534 305.198 cv
117.041 300.913 91.7856 276.675 91.7856 276.675 cv
91.7856 276.675 93.2065 275.385 94.6875 274.131 cv
96.9805 276.375 101.61 280.688 108.856 286.48 cv
119.77 295.211 134.378 301.182 134.378 301.182 cv
144.73 300.496 162.489 285.118 171.35 276.831 cv
172.02 277.921 172.781 279.11 173.616 280.358 cv
175.19 282.711 176.995 285.278 178.856 287.84 cv
cp
0 .0705882 .478431 rgb
f
234.226 373.261 mo
234.226 373.261 232.659 373.915 231.499 374.467 cv
231.317 374.555 231.144 374.641 230.991 374.718 cv
230.825 374.81 230.683 374.885 230.561 374.954 cv
230.392 375.052 230.284 375.135 230.266 375.188 cv
230.162 375.508 206.828 346.935 203.193 338.695 cv
199.55 330.452 203.193 318.791 203.193 318.791 cv
203.193 318.791 195.271 308.518 190.452 302.84 cv
187.859 299.784 183.21 293.83 178.856 287.84 cv
175.133 282.716 171.627 277.566 169.803 274.161 cv
167.15 269.218 166.953 264.098 167.673 260.711 cv
167.851 259.877 168.089 259.139 168.359 258.541 cv
168.629 257.944 168.93 257.48 169.243 257.185 cv
171.067 256.504 172.951 255.877 174.669 255.432 cv
176.168 255.049 177.741 254.488 179.34 253.822 cv
179.538 253.736 179.736 253.648 179.943 253.559 cv
180.692 253.234 181.451 252.883 182.203 252.52 cv
182.215 252.52 li
182.215 252.52 182.376 252.949 183.46 253.906 cv
183.924 254.314 184.56 254.822 185.426 255.432 cv
186.324 256.063 187.668 256.789 189.092 257.488 cv
189.247 257.566 189.4 257.636 189.555 257.712 cv
192.586 259.178 195.81 260.46 195.81 260.46 cv
195.81 260.46 214.753 302.949 218.064 315.043 cv
221.384 327.138 234.226 373.261 234.226 373.261 cv
cp
.0470588 .0784314 .596078 rgb
f
231.499 374.467 mo
231.317 374.555 231.144 374.641 230.991 374.718 cv
230.825 374.81 230.683 374.885 230.561 374.954 cv
230.392 375.052 230.284 375.135 230.266 375.188 cv
230.162 375.508 206.828 346.935 203.193 338.695 cv
199.55 330.452 203.193 318.791 203.193 318.791 cv
203.193 318.791 195.271 308.518 190.452 302.84 cv
187.859 299.784 183.21 293.83 178.856 287.84 cv
175.133 282.716 171.627 277.566 169.803 274.161 cv
167.15 269.218 166.953 264.098 167.673 260.711 cv
167.851 259.877 168.089 259.139 168.359 258.541 cv
168.629 257.944 168.93 257.48 169.243 257.185 cv
171.067 256.504 172.951 255.877 174.669 255.432 cv
176.168 255.049 177.741 254.488 179.34 253.822 cv
179.538 253.736 179.736 253.648 179.943 253.559 cv
180.692 253.234 181.451 252.883 182.203 252.52 cv
182.215 252.52 li
182.215 252.52 182.376 252.949 183.46 253.906 cv
181.644 255.292 178.807 257.296 176.719 258.001 cv
176.719 258.001 173.901 260.68 174.099 265.385 cv
174.299 270.094 177.829 278.069 188.958 294.203 cv
200.084 310.333 206.828 319.534 207.045 319.856 cv
207.26 320.178 203.193 324.891 207.582 336.872 cv
211.193 346.752 226.302 367.493 231.499 374.467 cv
cp
0 .0705882 .478431 rgb
f
221.949 203.177 mo
221.949 203.177 221.289 206.882 220.975 208.521 cv
220.89 208.943 220.831 209.232 220.82 209.277 cv
220.742 209.522 215.286 221.965 209.343 230.872 cv
208.141 232.668 206.996 234.237 205.872 235.611 cv
205.587 235.971 205.302 236.317 205.004 236.652 cv
200.97 241.377 197.377 243.708 193.613 246.045 cv
191.059 247.623 187.84 249.597 184.476 251.369 cv
183.726 251.77 182.966 252.152 182.203 252.52 cv
179.641 253.763 177.06 254.822 174.669 255.432 cv
173.714 255.674 172.699 255.986 171.679 256.326 cv
170.869 256.594 170.055 256.888 169.243 257.185 cv
164.448 258.985 160.062 261.137 160.062 261.137 cv
159.901 259.851 159.986 247.007 159.986 247.007 cv
159.986 247.007 167.673 241.994 174.099 237.607 cv
174.253 237.504 174.4 237.403 174.548 237.299 cv
175.441 236.69 176.302 236.099 177.11 235.533 cv
177.271 235.424 177.425 235.316 177.579 235.208 cv
178.254 234.731 178.889 234.282 179.461 233.869 cv
179.879 233.575 180.263 233.293 180.61 233.035 cv
185.592 229.332 190.447 221.66 191.48 219.968 cv
191.597 219.783 191.662 219.667 191.681 219.641 cv
189.253 221.155 173.226 222.441 172.185 222.762 cv
171.14 223.077 168.729 225.415 162.875 231.354 cv
157.012 237.292 149.711 247.007 149.711 247.007 cv
149.487 246.898 149.223 246.758 148.941 246.597 cv
146.532 245.263 142.48 242.432 142.48 242.432 cv
142.48 242.432 146.256 233.357 149.744 227.339 cv
153.224 221.325 159.178 211.769 160.948 210.088 cv
162.708 208.399 173.303 203.262 184.141 200.976 cv
194.981 198.683 201.157 198.125 207.26 198.767 cv
209.719 199.024 212.022 199.511 214.121 200.109 cv
214.263 200.146 li
214.426 200.192 214.577 200.237 214.731 200.282 cv
217.576 201.142 220.022 202.195 221.949 203.177 cv
cp
.137255 .247059 .890196 rgb
f
179.461 233.869 mo
177.232 236.781 175.761 240.003 174.099 245.271 cv
172.789 249.396 172.062 253.551 171.679 256.326 cv
170.869 256.594 170.055 256.888 169.243 257.185 cv
164.448 258.985 160.062 261.137 160.062 261.137 cv
159.901 259.851 159.986 247.007 159.986 247.007 cv
159.986 247.007 167.673 241.994 174.099 237.607 cv
174.253 237.504 174.4 237.403 174.548 237.299 cv
175.441 236.69 176.302 236.099 177.11 235.533 cv
177.271 235.424 177.425 235.316 177.579 235.208 cv
178.254 234.731 178.889 234.282 179.461 233.869 cv
cp
.0470588 .207843 .729412 rgb
f
191.48 219.968 mo
191.597 219.783 191.662 219.667 191.681 219.641 cv
189.253 221.155 173.226 222.441 172.185 222.762 cv
171.14 223.077 168.729 225.415 162.875 231.354 cv
157.012 237.292 149.711 247.007 149.711 247.007 cv
149.487 246.898 149.223 246.758 148.941 246.597 cv
151.368 240.782 161.976 223.307 168.089 219.906 cv
194.758 214.499 li
194.758 214.499 194.46 216.689 191.48 219.968 cv
cp
f
290.014 208.161 mo
290.014 211.313 289.526 215.193 289.166 217.608 cv
288.965 218.999 288.809 219.906 288.809 219.906 cv
283.104 223.835 267.936 231.919 257.664 233.357 cv
248.397 234.667 241.823 235.059 240.624 235.123 cv
240.481 235.128 li
240.424 235.128 li
240.424 235.059 li
240.431 234.815 li
240.462 233.914 240.481 233.017 240.488 232.073 cv
240.488 231.687 240.488 231.309 240.481 230.929 cv
240.473 230.655 240.467 230.377 240.458 230.108 cv
240.458 229.985 240.449 229.862 240.441 229.749 cv
240.431 229.498 240.416 229.249 240.405 229.004 cv
240.398 228.805 240.384 228.613 240.364 228.418 cv
240.346 228.201 240.333 227.982 240.314 227.771 cv
240.307 227.694 li
240.26 227.169 240.211 226.654 240.146 226.146 cv
240.146 226.139 li
240.09 225.633 240.017 225.134 239.949 224.636 cv
239.81 223.655 239.638 222.704 239.452 221.807 cv
239.421 221.632 239.382 221.452 239.354 221.277 cv
239.312 221.125 239.281 220.977 239.25 220.824 cv
239.198 220.585 239.146 220.349 239.089 220.117 cv
238.98 219.649 238.873 219.198 238.755 218.762 cv
238.6 218.158 238.447 217.582 238.287 217.048 cv
238.27 217.004 li
238.136 216.534 238.003 216.103 237.874 215.7 cv
237.81 215.488 237.737 215.288 237.675 215.089 cv
237.602 214.883 li
237.565 214.762 237.53 214.646 237.488 214.537 cv
237.458 214.434 237.426 214.336 237.384 214.241 cv
237.34 214.114 237.296 213.985 237.257 213.871 cv
237.109 213.458 236.979 213.118 236.872 212.842 cv
237.097 212.892 li
238.099 213.125 239.991 213.54 242.4 214.019 cv
249.361 215.383 260.573 217.181 266.493 216.02 cv
275.482 214.262 290.014 208.161 290.014 208.161 cv
cp
.137255 .247059 .890196 rgb
f
289.166 217.608 mo
288.965 218.999 288.809 219.906 288.809 219.906 cv
283.104 223.835 267.936 231.919 257.664 233.357 cv
248.397 234.667 241.823 235.059 240.624 235.123 cv
240.481 235.128 li
240.424 235.128 li
240.424 235.059 li
240.431 234.815 li
240.462 233.914 240.481 233.017 240.488 232.073 cv
240.488 231.687 240.488 231.309 240.481 230.929 cv
240.473 230.655 240.467 230.377 240.458 230.108 cv
240.458 229.985 240.449 229.862 240.441 229.749 cv
240.431 229.498 240.416 229.249 240.405 229.004 cv
240.398 228.805 240.384 228.613 240.364 228.418 cv
240.346 228.201 240.333 227.982 240.314 227.771 cv
240.424 227.733 240.488 227.714 240.488 227.714 cv
240.488 227.714 261.307 227.391 269.757 225.574 cv
276.039 224.227 284.987 219.796 289.166 217.608 cv
cp
.0470588 .207843 .729412 rgb
f
214.731 200.282 mo
217.576 201.142 220.022 202.195 221.949 203.177 cv
221.949 203.177 221.289 206.882 220.975 208.521 cv
217.612 205.368 215.214 201.855 214.121 200.109 cv
214.263 200.146 li
214.426 200.192 214.577 200.237 214.731 200.282 cv
cp
f
242.4 214.019 mo
241.141 214.371 239.485 214.729 237.602 214.883 cv
236.377 214.986 235.056 215 233.687 214.864 cv
233.493 212.714 233.13 211.02 232.866 209.996 cv
233.695 210.915 234.874 211.825 236.48 212.321 cv
236.693 212.392 li
236.745 212.513 236.801 212.654 236.872 212.842 cv
237.097 212.892 li
238.099 213.125 239.991 213.54 242.4 214.019 cv
cp
f
233.628 214.46 mo
227.121 214.883 223.279 211.429 221.097 207.852 cv
221.436 206.047 221.949 203.177 221.949 203.177 cv
223.708 202.459 li
223.708 203.1 226.361 211.129 226.918 211.051 cv
227.431 210.972 230.541 207.973 231.086 207.442 cv
231.307 207.659 li
231.509 208.117 231.985 209.015 232.814 209.94 cv
232.846 210.074 232.877 210.21 232.911 210.344 cv
232.965 210.555 233.006 210.763 233.05 210.972 cv
233.302 212.135 233.493 213.297 233.628 214.46 cv
cp
.682353 .741176 .956863 rgb
f
179.334 288.737 mo
179.14 288.642 li
176.012 284.432 170.188 276.602 167.936 270.237 cv
165.756 264.073 168.038 258.683 168.061 258.629 cv
168.113 258.507 168.255 258.452 168.377 258.504 cv
168.499 258.556 168.555 258.698 168.502 258.819 cv
168.479 258.872 166.273 264.1 168.39 270.079 cv
170.617 276.375 176.413 284.167 179.527 288.354 cv
179.606 288.46 179.584 288.609 179.477 288.691 cv
179.334 288.737 li
cp
.376471 .466667 .945098 rgb
f
231.89 376.785 mo
231.768 376.819 li
231.556 376.703 li
231.538 376.678 231.177 376.053 230.561 374.954 cv
228.377 371.032 222.934 361.023 218.379 350.343 cv
212.214 335.89 211.83 323.504 211.83 323.387 cv
211.83 322.546 207.066 313.623 203.038 306.923 cv
201.043 303.602 196.757 297.005 192.224 290.017 cv
188.219 283.835 184.071 277.436 181.451 273.219 cv
176.81 265.75 177.829 258.419 179.34 253.822 cv
179.538 253.736 179.736 253.648 179.943 253.559 cv
179.39 255.137 178.889 257.09 178.671 259.278 cv
179.782 259.517 185.733 260.608 189.092 257.488 cv
189.247 257.566 189.4 257.636 189.555 257.712 cv
187.572 259.68 184.714 260.159 182.39 260.159 cv
180.649 260.159 179.204 259.889 178.626 259.768 cv
178.318 263.67 178.953 268.286 181.855 272.963 cv
184.481 277.182 188.625 283.572 192.628 289.755 cv
197.163 296.748 201.447 303.349 203.452 306.681 cv
206.949 312.499 212.317 322.297 212.317 323.387 cv
212.317 323.504 212.695 335.786 218.822 350.156 cv
223.364 360.816 228.799 370.802 230.991 374.718 cv
231.602 375.81 231.959 376.434 231.972 376.457 cv
232.045 376.576 231.999 376.721 231.89 376.785 cv
cp
f
135.321 247.945 mo
135.321 247.945 140.157 244.145 144.813 249.3 cv
149.468 254.451 149.437 256.25 146.642 261.98 cv
145.574 260.702 li
145.574 260.702 147.783 256.637 146.658 253.827 cv
145.534 251.016 141.12 247.808 139.275 248.128 cv
137.428 248.452 136.704 249.707 136.704 249.707 cv
135.321 247.945 li
cp
.0470588 .0784314 .596078 rgb
f
243.271 193.523 mo
242.597 193.345 243.216 192.131 244.716 191.543 cv
246.212 190.952 249.318 190.634 250.226 191.117 cv
251.135 191.598 251.348 192.454 250.226 192.561 cv
249.102 192.667 244.287 193.79 243.271 193.523 cv
cp
.0117647 .0509804 .447059 rgb
f
136.732 294.201 mo
136.517 294.066 li
136.476 293.985 132.068 285.687 124.649 282.408 cv
124.527 282.354 124.471 282.214 124.526 282.092 cv
124.58 281.97 124.723 281.914 124.844 281.968 cv
132.414 285.312 136.906 293.768 136.947 293.852 cv
137.008 293.97 136.958 294.115 136.838 294.178 cv
136.732 294.201 li
cp
.34902 .0901961 .0705882 rgb
f
97.9888 271.807 mo
94.0474 274.902 li
91.7856 276.675 li
89.9614 277.479 78.585 280.237 78.585 280.237 cv
79.3735 279.11 81.1841 277.24 83.3296 275.182 cv
88.3511 270.38 95.2085 264.532 95.2085 264.532 cv
96.7051 265.814 97.9888 271.807 97.9888 271.807 cv
cp
.137255 .247059 .890196 rgb
f
230.268 375.188 mo
230.268 381.929 li
230.268 381.929 245.679 377.975 251.026 375.193 cv
234.1 372.81 li
230.268 375.188 li
cp
f
253.972 182.072 mo
253.89 182.322 253.759 182.612 253.618 182.907 cv
253.208 183.766 252.669 184.666 252.669 184.666 cv
252.665 184.653 li
252.57 184.556 250.665 182.539 246.535 184.158 cv
242.301 185.815 239.738 188.062 237.437 192.237 cv
237.238 192.59 237.058 192.922 236.884 193.218 cv
235.047 196.455 234.599 196.681 234.599 196.681 cv
234.599 196.681 234.017 191.433 232.46 190.952 cv
230.908 190.471 229.358 193.839 229.358 196.411 cv
229.358 198.979 229.141 201.285 228.768 201.656 cv
228.768 201.656 227.799 200.463 226.748 199.532 cv
226.092 198.934 225.424 198.444 224.991 198.444 cv
224.991 198.444 224.003 194.702 224.003 191.17 cv
224.003 187.639 223.952 182.552 228.125 178.43 cv
228.504 178.059 228.911 177.692 229.338 177.346 cv
233.602 173.846 240.102 171.702 246.959 173.403 cv
254.503 175.278 254.291 181.108 253.972 182.072 cv
cp
.0117647 .0509804 .447059 rgb
f
228.768 201.656 mo
228.768 201.656 227.799 200.466 226.748 199.53 cv
227.771 200.463 228.768 201.656 228.768 201.656 cv
cp
.34902 .0901961 .0705882 rgb
f
155.568 271.807 mo
141.236 286.141 li
140.895 286.48 li
133.415 293.96 li
133.415 293.96 126.78 286.651 120.07 278.846 cv
119.963 278.722 119.854 278.603 119.752 278.473 cv
119.705 278.42 li
114.073 271.865 108.47 265.045 106.766 261.98 cv
115.012 254.014 li
115.371 253.662 li
129.319 240.183 li
129.319 240.183 140.092 254.379 148.587 264.275 cv
151.278 267.413 153.75 270.126 155.568 271.807 cv
cp
1 .262745 .368627 rgb
f
178.042 245.789 mo
178.047 245.898 177.978 246.001 177.869 246.033 cv
176.918 246.322 175.467 246.771 175.326 246.814 cv
175.243 246.836 li
175.196 246.836 li
175.114 246.836 175.061 246.81 175.018 246.597 cv
174.992 246.597 li
175.004 246.514 li
174.96 246.258 174.908 245.802 174.83 244.981 cv
174.099 237.607 li
174.253 237.504 174.4 237.403 174.548 237.299 cv
174.792 239.727 175.317 245.012 175.441 246.289 cv
175.792 246.162 176.432 245.968 177.555 245.628 cv
177.489 244.261 177.214 238.559 177.11 235.533 cv
177.271 235.424 177.425 235.316 177.579 235.208 cv
177.656 237.603 177.876 242.354 178.042 245.789 cv
cp
.376471 .466667 .945098 rgb
f
238.755 218.762 mo
238.374 230.596 231.618 255.088 229.198 260.351 cv
227.156 264.808 225.988 270.452 225.418 273.489 cv
225.27 273.418 225.12 273.349 224.965 273.271 cv
225.553 270.183 226.721 264.59 228.763 260.146 cv
231.291 254.645 238.617 227.926 238.287 217.048 cv
238.447 217.582 238.6 218.158 238.755 218.762 cv
cp
f
155.568 271.807 mo
141.236 286.141 li
140.895 286.48 li
133.415 293.96 li
133.415 293.96 126.78 286.651 120.07 278.846 cv
119.963 278.722 119.854 278.603 119.752 278.473 cv
119.705 278.42 li
125.837 276.653 139.208 272.146 148.587 264.275 cv
151.278 267.413 153.75 270.126 155.568 271.807 cv
cp
1 .133333 .298039 rgb
f
214.731 200.282 mo
214.483 203.692 213.563 211.346 211.182 219.225 cv
209.307 225.415 207.245 231.578 205.872 235.611 cv
205.587 235.971 205.302 236.317 205.004 236.652 cv
206.359 232.722 208.651 225.915 210.719 219.083 cv
213.198 210.909 214.038 203.34 214.263 200.146 cv
214.426 200.192 214.577 200.237 214.731 200.282 cv
cp
.376471 .466667 .945098 rgb
f
190.245 222.152 mo
190.11 222.111 li
190.001 222.04 189.97 221.89 190.043 221.78 cv
190.115 221.667 197.39 210.529 198.672 202.421 cv
198.693 202.29 198.815 202.201 198.949 202.221 cv
199.079 202.243 199.17 202.366 199.146 202.496 cv
197.849 210.705 190.52 221.932 190.447 222.045 cv
190.245 222.152 li
cp
f
232.128 194.896 mo
232.177 195.426 232.198 195.982 232.172 196.522 cv
231.965 196.537 231.674 196.528 231.499 196.398 cv
231.395 196.323 231.34 196.218 231.325 196.068 cv
231.281 195.605 231.752 195.159 232.128 194.896 cv
cp
231.213 196.785 mo
231.459 196.968 231.778 197.012 232.037 197.012 cv
232.136 197.01 li
232.115 197.172 232.095 197.334 232.063 197.491 cv
232.037 197.621 232.126 197.748 232.255 197.772 cv
232.302 197.776 li
232.413 197.776 232.514 197.697 232.537 197.582 cv
232.582 197.348 232.613 197.102 232.633 196.852 cv
232.662 196.683 li
232.649 196.654 li
232.773 194.593 232.188 192.273 232.159 192.162 cv
232.128 192.034 231.994 191.958 231.867 191.989 cv
231.737 192.022 231.659 192.152 231.695 192.283 cv
231.695 192.3 231.926 193.202 232.068 194.363 cv
231.701 194.583 230.758 195.24 230.845 196.114 cv
230.875 196.4 231.001 196.632 231.213 196.785 cv
cp
.0470588 .0784314 .596078 rgb
f
232.888 199.414 mo
232.822 199.297 232.68 199.255 232.56 199.317 cv
231.926 199.664 231.375 199.722 230.926 199.494 cv
229.866 198.958 229.592 197.042 229.592 197.022 cv
229.574 196.89 229.452 196.804 229.32 196.816 cv
229.188 196.833 229.094 196.955 229.115 197.088 cv
229.125 197.175 229.423 199.273 230.708 199.924 cv
230.957 200.05 231.224 200.114 231.509 200.114 cv
231.905 200.114 232.333 199.99 232.789 199.741 cv
232.908 199.678 232.95 199.532 232.888 199.414 cv
cp
f
231.657 208.577 mo
231.441 208.446 li
231.056 207.7 230.825 206.937 230.773 205.249 cv
230.768 205.116 230.875 205.006 231.006 205.002 cv
231.157 204.99 231.25 205.1 231.255 205.234 cv
231.307 206.998 231.576 207.657 231.872 208.226 cv
231.932 208.345 231.887 208.49 231.768 208.551 cv
231.657 208.577 li
cp
f
246.042 207.192 mo
245.97 207.333 245.893 207.473 245.817 207.621 cv
244.411 207.204 241.899 206.556 241.876 206.542 cv
241.748 206.511 241.664 206.381 241.701 206.254 cv
241.734 206.125 241.861 206.047 241.99 206.082 cv
242.022 206.087 244.649 206.768 246.042 207.192 cv
cp
1 .262745 .368627 rgb
f
240.624 235.123 mo
240.576 235.245 li
240.481 235.128 li
240.424 235.059 li
240.177 235.033 li
240.188 234.964 240.55 227.225 239.242 221.973 cv
238.81 220.239 238.26 218.486 237.778 216.944 cv
237.198 215.114 236.706 213.548 236.48 212.321 cv
236.693 212.392 li
236.745 212.513 236.801 212.654 236.872 212.842 cv
237.097 212.892 li
237.358 214.011 237.784 215.359 238.234 216.797 cv
238.722 218.352 239.276 220.112 239.711 221.852 cv
240.821 226.307 240.88 234.044 240.624 235.123 cv
cp
.376471 .466667 .945098 rgb
f
141.236 286.141 mo
140.895 286.48 li
139.188 284.912 137.455 283.16 135.732 281.292 cv
135.624 281.175 135.513 281.06 135.405 280.937 cv
134.392 279.825 133.369 278.685 132.368 277.515 cv
132.266 277.395 132.162 277.271 132.054 277.149 cv
130.479 275.302 128.933 273.405 127.45 271.525 cv
127.353 271.395 127.25 271.269 127.147 271.139 cv
125.471 268.996 123.878 266.877 122.415 264.872 cv
122.319 264.737 122.222 264.606 122.134 264.481 cv
121.055 262.991 120.047 261.57 119.14 260.264 cv
119.044 260.126 118.956 259.998 118.87 259.873 cv
117.194 257.446 115.865 255.416 115.012 254.014 cv
115.371 253.662 li
116.226 255.049 117.612 257.167 119.366 259.726 cv
119.405 259.772 li
119.41 259.788 li
120.38 261.193 121.465 262.727 122.634 264.346 cv
122.672 264.39 li
122.684 264.411 li
124.194 266.498 125.858 268.72 127.622 270.974 cv
127.63 270.978 li
127.706 271.073 li
127.706 271.082 li
129.248 273.048 130.853 275.025 132.514 276.955 cv
132.528 276.971 li
132.594 277.054 li
133.686 278.325 134.783 279.563 135.891 280.771 cv
135.919 280.789 li
135.945 280.836 li
137.711 282.734 139.482 284.527 141.236 286.141 cv
cp
.0470588 .0784314 .596078 rgb
f
127.649 271.338 mo
127.643 271.344 127.571 271.41 127.45 271.525 cv
126.511 272.406 122.466 276.25 120.07 278.846 cv
119.963 278.722 119.854 278.603 119.752 278.473 cv
122.202 275.827 126.254 271.986 127.147 271.139 cv
127.315 270.986 li
127.406 270.908 127.533 270.903 127.622 270.974 cv
127.63 270.978 li
127.656 270.997 li
127.706 271.073 li
127.706 271.082 li
127.649 271.338 li
cp
f
117.108 268.623 mo
117.053 268.618 li
116.896 268.498 li
114.795 264.644 li
114.826 264.371 li
118.89 259.641 119.071 259.659 119.213 259.664 cv
119.405 259.771 li
119.481 259.88 119.453 260.033 119.341 260.105 cv
119.27 260.142 li
118.893 260.437 116.701 262.929 115.299 264.561 cv
117.187 268.03 li
122.337 264.333 li
122.447 264.258 122.597 264.281 122.675 264.39 cv
122.752 264.496 122.728 264.648 122.62 264.724 cv
117.247 268.58 li
117.108 268.623 li
cp
f
131.704 284.996 mo
131.692 284.996 li
131.523 284.919 li
128.527 281.581 li
128.446 281.493 128.445 281.355 128.522 281.263 cv
132.191 276.991 li
132.276 276.891 132.431 276.879 132.528 276.965 cv
132.631 277.054 132.642 277.205 132.556 277.307 cv
129.026 281.416 li
131.717 284.41 li
135.578 280.778 li
135.675 280.688 135.827 280.69 135.919 280.789 cv
136.009 280.885 136.005 281.038 135.909 281.129 cv
131.867 284.935 li
131.704 284.996 li
cp
.34902 .0901961 .0705882 rgb
f
213.711 223.63 mo
211.361 228.773 208.273 234.711 205.004 238.732 cv
198.815 246.349 188.785 251.53 183.757 254.053 cv
182.741 253.133 182.215 252.52 182.215 252.52 cv
182.215 252.52 183.063 252.126 184.476 251.369 cv
187.84 249.597 191.059 247.623 193.613 246.045 cv
198.665 242.914 203.406 239.779 209.343 230.872 cv
210.861 228.599 212.343 226.103 213.711 223.63 cv
cp
.682353 .741176 .956863 rgb
f
141.942 278.789 mo
141.747 278.692 li
141.701 278.631 137.241 272.535 132.802 267.227 cv
128.351 261.897 120.77 250.758 120.696 250.646 cv
120.62 250.536 120.648 250.385 120.756 250.312 cv
120.868 250.234 121.019 250.266 121.092 250.374 cv
121.169 250.488 128.736 261.609 133.172 266.919 cv
137.619 272.239 142.09 278.347 142.136 278.407 cv
142.212 278.514 142.19 278.665 142.083 278.745 cv
141.942 278.789 li
cp
.0470588 .0784314 .596078 rgb
f
161.806 232.7 mo
161.648 232.64 li
161.548 232.553 161.538 232.4 161.623 232.301 cv
168.542 224.327 171.935 222.614 172.077 222.545 cv
172.152 222.523 li
172.181 222.52 175.3 222.114 181.447 221.406 cv
187.564 220.701 191.519 219.449 191.556 219.437 cv
191.686 219.395 191.82 219.466 191.861 219.592 cv
191.9 219.718 191.831 219.854 191.704 219.896 cv
191.665 219.908 187.669 221.172 181.502 221.883 cv
175.746 222.549 172.648 222.944 172.255 222.996 cv
171.89 223.192 168.468 225.148 161.987 232.617 cv
161.806 232.7 li
cp
.34902 .0901961 .0705882 rgb
f
226.913 211.622 mo
226.823 211.794 226.695 212.661 226.561 213.574 cv
226.022 217.227 224.897 224.831 221.059 231.7 cv
216.125 240.53 198.576 254.598 191.393 259.068 cv
191.209 258.985 191.038 258.906 190.872 258.825 cv
197.831 254.58 215.675 240.351 220.638 231.462 cv
224.434 224.67 225.545 217.131 226.084 213.504 cv
226.348 211.712 226.41 211.377 226.61 211.25 cv
226.727 211.172 226.877 211.203 226.944 211.313 cv
227.017 211.417 226.996 211.543 226.913 211.622 cv
cp
.0470588 .0784314 .596078 rgb
f
226.748 211.447 mo
226.416 211.501 222.721 214.019 222.721 214.019 cv
222.721 214.019 223.204 216.533 223.204 216.907 cv
223.204 216.907 218.167 221.614 208.029 223.971 cv
197.893 226.325 190.939 227.715 190.939 227.715 cv
186.496 233.709 li
194.576 236.597 li
194.576 236.597 206.937 231.674 215.872 226.377 cv
224.81 221.081 226.748 217.764 226.748 217.764 cv
228.983 215.034 li
226.748 211.447 li
cp
1 .262745 .368627 rgb
f
249.224 195.402 mo
248.754 196.418 248.152 197.14 247.882 197.013 cv
247.61 196.887 247.773 195.961 248.242 194.947 cv
248.713 193.932 249.318 193.21 249.586 193.336 cv
249.862 193.461 249.696 194.388 249.224 195.402 cv
cp
.0470588 .0784314 .596078 rgb
f
94.0474 274.902 mo
91.7856 276.675 li
89.9614 277.479 78.585 280.237 78.585 280.237 cv
79.3735 279.11 81.1841 277.24 83.3296 275.182 cv
86.4365 275.291 90.9185 275.291 94.0474 274.902 cv
cp
.0470588 .207843 .729412 rgb
f
251.724 205.271 mo
246.825 205.509 li
248.405 204.059 251.724 205.271 251.724 205.271 cv
cp
.956863 .580392 .556863 rgb
f
245.465 182.661 mo
242.576 183.833 238.771 186.397 236.012 192.763 cv
231.033 189.908 228.328 183.074 229.338 177.346 cv
228.911 177.692 228.504 178.059 228.125 178.43 cv
223.952 182.552 224.003 187.639 224.003 191.17 cv
224.003 194.702 224.991 198.444 224.991 198.444 cv
225.424 198.444 226.092 198.934 226.748 199.532 cv
227.799 200.463 228.768 201.656 228.768 201.656 cv
229.141 201.285 229.358 198.979 229.358 196.411 cv
229.358 193.839 230.908 190.471 232.46 190.952 cv
234.017 191.433 234.599 196.681 234.599 196.681 cv
234.599 196.681 235.047 196.455 236.884 193.218 cv
237.058 192.922 237.238 192.59 237.437 192.237 cv
239.738 188.062 242.301 185.815 246.535 184.158 cv
250.665 182.539 252.57 184.556 252.665 184.653 cv
252.669 184.666 li
252.669 184.666 253.208 183.766 253.618 182.907 cv
251.389 180.249 248.662 181.359 245.465 182.661 cv
cp
0 .0431373 .34902 rgb
f
299.021 212.708 mo
299.326 212.629 303.023 211.69 303.254 212.714 cv
303.499 213.773 297.761 215.782 297.761 215.782 cv
297.761 215.782 300.979 215.507 301.498 216.308 cv
301.573 216.508 li
301.65 217.548 288.809 219.906 288.809 219.906 cv
288.809 219.906 288.876 219.205 288.979 218.165 cv
289.115 216.837 289.313 214.949 289.526 213.297 cv
290.006 209.561 290.014 208.232 290.014 208.161 cv
290.014 208.161 296.437 202.618 296.993 203.262 cv
297.552 203.903 294.266 208.161 294.266 208.161 cv
294.266 208.161 303.254 203.744 303.575 204.463 cv
303.882 205.168 299.067 208.887 298.771 209.118 cv
299.073 209.034 305.347 207.221 305.503 208.313 cv
305.655 209.414 299.41 212.513 299.021 212.708 cv
cp
.952941 .713726 .670588 rgb
f
301.573 216.508 mo
301.65 217.548 288.809 219.906 288.809 219.906 cv
288.809 219.906 288.876 219.205 288.979 218.165 cv
291.65 217.844 297.6 217.343 301.498 216.308 cv
301.573 216.508 li
cp
.956863 .580392 .556863 rgb
f
148.665 256.168 mo
148.433 256.126 148.233 256.012 148.067 255.846 cv
147.227 255.021 147.06 252.98 147.06 252.98 cv
147.06 252.98 145.692 255.354 144.973 254.953 cv
144.252 254.547 144.01 253.431 144.01 253.431 cv
142.327 253.666 142.007 251.742 142.007 251.742 cv
140.4 251.421 140.639 249.494 140.639 249.494 cv
140.639 249.494 138.552 249.494 138.795 247.97 cv
139.034 246.441 141.28 243.716 142.48 242.432 cv
142.48 242.432 143.368 242.914 145.616 244.442 cv
146.958 245.351 148.165 246.089 148.908 246.541 cv
149.41 246.841 149.711 247.007 149.711 247.007 cv
149.711 247.007 150.031 256.395 148.665 256.168 cv
cp
.952941 .713726 .670588 rgb
f
148.665 256.168 mo
148.433 256.126 148.233 256.012 148.067 255.846 cv
148.646 252.965 148.845 248.66 148.908 246.541 cv
149.41 246.841 149.711 247.007 149.711 247.007 cv
149.711 247.007 150.031 256.395 148.665 256.168 cv
cp
.956863 .580392 .556863 rgb
f
376.855 149.565 mo
361.536 149.565 349.078 162.028 349.078 177.346 cv
349.078 192.665 361.536 205.127 376.855 205.127 cv
392.176 205.127 404.635 192.665 404.635 177.346 cv
404.635 162.028 392.176 149.565 376.855 149.565 cv
cp
376.855 206.411 mo
360.829 206.411 347.791 193.374 347.791 177.346 cv
347.791 161.319 360.829 148.28 376.855 148.28 cv
392.884 148.28 405.923 161.319 405.923 177.346 cv
405.923 193.374 392.884 206.411 376.855 206.411 cv
cp
.376471 .466667 .945098 rgb
f
407.756 149.373 mo
407.738 149.373 li
407.05 149.338 406.475 149.069 406.028 148.567 cv
404.804 147.201 404.832 144.395 404.959 142.4 cv
405.134 139.634 403.389 134.355 389.689 130.101 cv
372.499 124.765 366.525 134.644 365.506 136.68 cv
363.733 140.205 359.053 140.381 358.856 140.387 cv
358.689 140.396 358.531 140.254 358.529 140.076 cv
358.518 139.898 358.661 139.751 358.837 139.746 cv
358.881 139.746 363.337 139.573 364.93 136.39 cv
365.998 134.275 372.199 124 389.873 129.486 cv
395.936 131.369 406.039 135.553 405.6 142.443 cv
405.485 144.319 405.44 146.952 406.503 148.14 cv
406.84 148.512 407.251 148.708 407.771 148.729 cv
407.954 148.739 408.086 148.888 408.081 149.067 cv
408.067 149.238 407.931 149.373 407.756 149.373 cv
cp
.137255 .247059 .890196 rgb
f
370.568 145.099 mo
369.604 147.025 366.072 147.238 361.796 148.919 cv
357.511 150.608 354.428 153.259 353.445 153.87 cv
352.682 154.353 351.892 153.677 351.438 152.29 cv
351.155 151.417 351.005 150.256 351.091 148.919 cv
351.301 145.47 358.047 139.532 364.579 139.532 cv
366.021 139.532 367.166 139.71 368.06 140.013 cv
371.226 141.059 371.316 143.597 370.568 145.099 cv
cp
.980392 .682353 .690196 rgb
f
409.845 161.472 mo
408.881 164.144 406.955 167.034 405.881 165.107 cv
404.816 163.182 402.353 159.167 399.357 156.251 cv
398.249 155.167 397.267 154.236 396.412 153.439 cv
396.395 153.426 li
394.966 152.111 393.919 151.2 393.257 150.659 cv
392.306 149.902 393.581 146.96 397.533 146.782 cv
401.498 146.595 405.564 148.63 407.705 151.301 cv
409.176 153.152 410.094 156.015 410.202 158.492 cv
410.254 159.604 410.146 160.645 409.845 161.472 cv
cp
f
381.381 159.165 mo
381.199 159.139 li
380.848 159.038 380.643 158.671 380.743 158.319 cv
382.316 152.826 li
382.414 152.473 382.785 152.261 383.135 152.371 cv
383.487 152.472 383.691 152.838 383.591 153.191 cv
382.019 158.685 li
381.936 158.976 381.669 159.165 381.381 159.165 cv
cp
.376471 .466667 .945098 rgb
f
370.725 203.662 mo
370.547 203.638 li
370.203 203.54 370.007 203.183 370.104 202.844 cv
371.472 198.107 li
371.568 197.767 371.922 197.568 372.267 197.667 cv
372.606 197.766 372.801 198.123 372.705 198.463 cv
371.34 203.199 li
371.259 203.479 371.006 203.662 370.725 203.662 cv
cp
f
356.705 173.547 mo
356.49 173.508 li
351.435 171.678 li
351.104 171.557 350.928 171.191 351.05 170.858 cv
351.172 170.522 351.539 170.352 351.868 170.472 cv
356.925 172.301 li
357.26 172.421 357.43 172.789 357.316 173.125 cv
357.215 173.384 356.972 173.547 356.705 173.547 cv
cp
f
401.235 184.274 mo
401.021 184.235 li
395.964 182.406 li
395.628 182.284 395.453 181.916 395.58 181.582 cv
395.697 181.249 396.067 181.078 396.398 181.199 cv
401.459 183.026 li
401.787 183.148 401.961 183.517 401.845 183.849 cv
401.746 184.112 401.503 184.274 401.235 184.274 cv
cp
f
355.907 163.771 mo
375.168 179.503 li
380.789 153.008 li
380.789 153.008 362.008 152.321 355.907 163.771 cv
cp
1 .262745 .368627 rgb
f
375.547 178.112 mo
375.598 177.792 379.931 158.849 379.931 158.849 cv
381.381 158.502 li
380.789 153.008 li
377.472 158.502 li
377.953 159.01 li
377.953 159.01 375.598 169.016 374.851 177.898 cv
375.547 178.112 li
cp
.0470588 .0784314 .596078 rgb
f
374.477 178.112 mo
374.42 177.898 360.981 166.928 361.013 166.769 cv
361.044 166.607 361.428 165.559 361.428 165.559 cv
355.907 163.771 li
359.119 168.909 li
359.811 168.106 li
374.477 179.289 li
374.477 178.112 li
cp
f
375.894 178.739 mo
375.894 179.508 375.492 180.131 375.005 180.131 cv
374.518 180.131 374.125 179.508 374.125 178.739 cv
374.125 177.969 374.518 177.346 375.005 177.346 cv
375.492 177.346 375.894 177.969 375.894 178.739 cv
cp
.0235294 .168627 .576471 rgb
f
390.487 164.24 mo
390.318 164.24 390.153 164.174 390.022 164.043 cv
389.78 163.789 389.785 163.381 390.046 163.135 cv
394.158 159.171 li
394.415 158.926 394.826 158.933 395.07 159.188 cv
395.318 159.445 395.308 159.85 395.052 160.096 cv
390.936 164.062 li
390.812 164.182 390.65 164.24 390.487 164.24 cv
cp
.376471 .466667 .945098 rgb
f
358.856 197.368 mo
358.689 197.368 358.518 197.302 358.394 197.17 cv
358.145 196.915 358.156 196.508 358.41 196.263 cv
361.964 192.848 li
362.215 192.603 362.622 192.609 362.873 192.866 cv
363.116 193.121 363.108 193.527 362.855 193.772 cv
359.301 197.188 li
359.177 197.307 359.017 197.368 358.856 197.368 cv
cp
f
361.929 164.346 mo
361.741 164.346 361.56 164.27 361.434 164.118 cv
357.973 160.002 li
357.743 159.731 357.779 159.324 358.051 159.095 cv
358.323 158.869 358.725 158.903 358.956 159.175 cv
362.418 163.292 li
362.644 163.564 362.611 163.968 362.339 164.196 cv
362.215 164.297 362.07 164.346 361.929 164.346 cv
cp
.980392 .682353 .690196 rgb
f
395.088 195.938 mo
394.906 195.938 394.723 195.86 394.594 195.71 cv
391.138 191.593 li
390.912 191.322 390.945 190.917 391.213 190.688 cv
391.485 190.458 391.891 190.496 392.124 190.767 cv
395.58 194.884 li
395.805 195.155 395.771 195.562 395.5 195.79 cv
395.383 195.89 395.233 195.938 395.088 195.938 cv
cp
.376471 .466667 .945098 rgb
f
395.738 172.937 mo
395.453 172.937 395.195 172.746 395.121 172.458 cv
395.031 172.114 395.238 171.763 395.58 171.671 cv
401.108 170.225 li
401.451 170.135 401.799 170.341 401.895 170.683 cv
401.985 171.028 401.775 171.379 401.436 171.467 cv
395.907 172.916 li
395.738 172.937 li
cp
f
351.956 186.393 mo
351.671 186.393 351.41 186.203 351.335 185.912 cv
351.244 185.57 351.451 185.219 351.793 185.13 cv
356.56 183.885 li
356.903 183.797 357.258 184.002 357.345 184.344 cv
357.435 184.685 357.229 185.038 356.889 185.129 cv
352.115 186.372 li
351.956 186.393 li
cp
f
370.763 159.078 mo
370.459 159.078 370.191 158.864 370.136 158.556 cv
369.125 153.274 li
369.06 152.925 369.285 152.589 369.635 152.522 cv
369.982 152.458 370.316 152.685 370.387 153.033 cv
371.395 158.315 li
371.465 158.664 371.234 159 370.884 159.067 cv
370.763 159.078 li
cp
.980392 .682353 .690196 rgb
f
384.27 202.844 mo
383.969 202.844 383.702 202.629 383.643 202.32 cv
382.632 197.038 li
382.57 196.689 382.795 196.353 383.143 196.288 cv
383.487 196.223 383.829 196.45 383.892 196.797 cv
384.901 202.081 li
384.972 202.428 384.746 202.765 384.394 202.831 cv
384.27 202.844 li
cp
.376471 .466667 .945098 rgb
f
409.845 161.472 mo
408.881 164.144 406.955 167.034 405.881 165.107 cv
404.816 163.182 402.353 159.167 399.357 156.251 cv
398.249 155.167 397.267 154.236 396.412 153.439 cv
402.327 157.473 407.574 158.34 410.202 158.492 cv
410.254 159.604 410.146 160.645 409.845 161.472 cv
cp
.937255 .592157 .615686 rgb
f
370.568 145.099 mo
369.604 147.025 366.072 147.238 361.796 148.919 cv
357.511 150.608 354.428 153.259 353.445 153.87 cv
352.682 154.353 351.892 153.677 351.438 152.29 cv
352.843 151.494 355.646 150.005 360.632 147.699 cv
365.738 145.342 367.471 142.082 368.06 140.013 cv
371.226 141.059 371.316 143.597 370.568 145.099 cv
cp
f
360.194 141.653 mo
359.554 141.245 355.104 143.866 354.184 145.792 cv
353.262 147.718 355.889 147.077 357.826 145.792 cv
359.757 144.508 361.446 142.453 360.194 141.653 cv
cp
1 .823529 .823529 rgb
f
396.412 148.602 mo
395.876 149.966 402.223 151.875 402.624 150.761 cv
403.023 149.646 396.942 147.238 396.412 148.602 cv
cp
f
360.544 140.225 mo
360.544 140.225 359.837 140.419 358.915 140.828 cv
358.438 141.047 357.917 141.316 357.399 141.651 cv
357.399 141.651 356.547 138.3 357.992 137.714 cv
358.373 137.56 358.725 137.657 359.05 137.888 cv
359.946 138.537 360.544 140.225 360.544 140.225 cv
cp
1 .592157 .623529 rgb
f
358.915 140.828 mo
359.191 139.788 359.148 138.665 359.05 137.888 cv
359.946 138.537 360.544 140.225 360.544 140.225 cv
360.544 140.225 359.837 140.419 358.915 140.828 cv
cp
1 .443137 .509804 rgb
f
389.774 143.064 mo
389.762 143.307 li
389.643 144.522 388.619 145.47 387.373 145.47 cv
386.132 145.47 385.11 144.533 384.981 143.327 cv
384.962 143.064 li
384.962 141.734 386.039 140.656 387.373 140.656 cv
388.703 140.656 389.774 141.734 389.774 143.064 cv
cp
1 .592157 .623529 rgb
f
389.762 143.307 mo
389.643 144.522 388.619 145.47 387.373 145.47 cv
386.132 145.47 385.11 144.533 384.981 143.327 cv
386.194 143.7 388.278 144.096 389.762 143.307 cv
cp
1 .443137 .509804 rgb
f
407.241 150.764 mo
407.241 150.764 406.679 150.222 406.063 149.696 cv
405.71 149.401 405.331 149.106 405.031 148.919 cv
405.031 148.919 407.166 146.697 408.238 147.526 cv
408.406 147.655 408.497 147.821 408.526 148.014 cv
408.717 149.04 407.241 150.764 407.241 150.764 cv
cp
1 .592157 .623529 rgb
f
407.241 150.764 mo
407.241 150.764 406.679 150.222 406.063 149.696 cv
406.821 149.38 407.833 148.83 408.526 148.014 cv
408.717 149.04 407.241 150.764 407.241 150.764 cv
cp
1 .443137 .509804 rgb
f
388.552 142.046 mo
389.073 141.808 387.64 141.175 386.676 141.611 cv
385.715 142.046 386.194 143.117 388.552 142.046 cv
cp
.980392 .682353 .690196 rgb
f
358.101 138.301 mo
357.42 138.105 357.271 140.441 357.826 140.279 cv
358.371 140.121 358.699 138.47 358.101 138.301 cv
cp
f
407.392 147.998 mo
407.79 148.149 406.726 148.943 406.451 148.662 cv
406.187 148.384 406.969 147.833 407.392 147.998 cv
cp
f
233.05 210.972 mo
231.592 213.092 230.361 216.193 230.198 216.663 cv
230.167 216.751 230.084 216.822 229.988 216.837 cv
229.955 216.837 li
229.771 216.837 229.462 216.56 226.669 211.789 cv
220.633 215.744 li
220.39 215.757 li
220.26 215.546 li
220.26 210.555 li
220.491 210.042 220.654 209.671 220.742 209.464 cv
220.742 215.096 li
226.61 211.25 li
226.805 211.21 li
226.949 211.326 li
227.876 212.899 229.328 215.32 229.887 216.136 cv
230.292 215.114 231.483 212.257 232.911 210.344 cv
232.965 210.555 233.006 210.763 233.05 210.972 cv
cp
.0470588 .0784314 .596078 rgb
f
106.414 83.1528 mo
107.606 84.8018 li
79.8511 104.865 li
78.6587 103.216 li
106.414 83.1528 li
cp
.980392 .682353 .690196 rgb
f
84.9102 98.6978 mo
84.4419 101.547 li
79.8511 104.865 li
79.8105 104.81 li
79.9639 102.272 li
84.9102 98.6978 li
cp
1 .780392 .780392 rgb
f
105.251 86.5039 mo
107.604 89.7588 li
84.5586 106.418 li
82.2055 103.163 li
105.251 86.5039 li
.980392 .682353 .690196 rgb
f
106.414 83.1528 mo
107.606 84.8017 li
105.251 86.5039 li
107.604 89.7588 li
98.4838 96.3516 li
96.9488 92.5054 li
96.1709 90.5571 li
106.414 83.1528 li
.988235 .662745 .662745 rgb
f
141.942 135.223 mo
141.942 135.223 145.815 140.582 146.152 141.047 cv
146.49 141.514 145.878 143.674 142.765 147.181 cv
140.887 149.296 138.554 151.706 135.556 153.913 cv
133.583 155.366 131.323 156.731 128.715 157.87 cv
122.145 160.736 120.021 159.47 120.021 159.47 cv
120.021 159.47 116.492 154.586 115.827 153.666 cv
115.162 152.746 115.63 151.716 116.86 150.554 cv
119.503 148.056 129.251 141.443 134.584 137.711 cv
135.384 137.152 136.085 136.656 136.648 136.249 cv
140.961 133.131 141.942 135.223 141.942 135.223 cv
.980392 .682353 .690196 rgb
f
141.942 135.223 mo
141.942 135.223 145.815 140.582 146.152 141.047 cv
146.49 141.514 145.878 143.674 142.765 147.181 cv
140.887 149.296 138.554 151.706 135.556 153.913 cv
135.738 152.564 135.959 150.796 136.222 148.484 cv
136.859 142.852 135.539 139.364 134.584 137.711 cv
135.384 137.152 136.085 136.656 136.648 136.249 cv
140.961 133.131 141.942 135.223 141.942 135.223 cv
.988235 .662745 .662745 rgb
f
115.926 151.628 mo
114.041 149.667 111.407 146.511 109.897 142.892 cv
108.774 140.195 108.226 137.652 108.111 135.306 cv
109.267 135.306 110.428 135.306 111.601 135.306 cv
111.69 136.783 111.872 138.284 112.203 139.612 cv
113.106 143.251 114.893 147.538 117.042 150.386 cv
116.978 150.443 116.917 150.5 116.86 150.554 cv
116.467 150.925 116.152 151.283 115.926 151.628 cv
121.213 147.113 mo
119.881 145.449 118.228 143.143 116.749 140.381 cv
115.849 138.701 115.158 136.949 114.63 135.306 cv
116.997 135.306 119.38 135.306 121.756 135.306 cv
123.719 137.889 125.46 140.118 126.296 141.123 cv
126.375 141.233 li
126.25 141.708 125.949 142.463 125.233 143.101 cv
124.512 143.743 123.997 144.618 123.649 145.352 cv
122.797 145.96 121.978 146.552 121.213 147.113 cv
126.456 140.827 mo
125.527 139.703 123.923 137.649 122.14 135.306 cv
126.054 135.306 129.941 135.306 133.689 135.306 cv
134.287 136.03 134.75 136.72 135.108 137.344 cv
134.939 137.463 134.764 137.585 134.584 137.711 cv
133.308 138.604 131.779 139.663 130.154 140.79 cv
130.086 140.793 130.015 140.795 129.941 140.796 cv
129.737 140.802 129.487 140.804 129.216 140.804 cv
128.039 140.804 126.462 140.764 126.462 140.764 cv
126.462 140.764 126.461 140.786 126.456 140.827 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 500 ]ct
[28.32 0 0 17.76 107.52 347.84 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 59 
/H 37 
/M[59 0 0 -37 0 37 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 59 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 59 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 59 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
`q[R*ptF'J`q]#Sf[n-sk4mp1`n0&#lIs8QeCX<D`nJW2r:n:``nLCdb4s!.o\.dJ`q\lOgt0R"iqVX1
`n/ntmb5\Ud+A$D`nJK.!;ORc`nL7`cM5E1nClLJ`q\`Ji7>p%hY?@1`n&\oo%M+Ybgu[B`nJH-rmo3B
`nL+\deLi5m+U4J`q\TFjOV?)gA((1`n&Pkp=dO]aO^CB`nJH-qUWpB`nKtXf(d89kh=qJ`q\HBkgmc-
f(\_/`n&DgqV&s``n'q=ce?D5n(-.B`nKSLiV1@Ch:h/J`qS!6o@Cq9bP1r/`n&/arV+J/`n'e:e(_n:
ldjkB`nTMIjnHdGg"YrL`qRj2pX[@=a7fT.`n&/aq=i2/`n'Y6fA"=>kLSSB`nTAEl1`3Ke_BZL`qR^.
qprdAJ,~>

%%EndBinary
grestore
np
133.689 135.306 mo
129.941 135.306 126.054 135.306 122.14 135.306 cv
120.495 133.145 118.699 130.738 117.14 128.588 cv
118.715 127.932 120.429 127.411 122.291 127.073 cv
122.94 126.956 123.566 126.855 124.171 126.771 cv
125.798 128.081 130.185 131.667 132.689 134.202 cv
133.059 134.575 133.391 134.945 133.689 135.306 cv
121.756 135.306 mo
119.38 135.306 116.997 135.306 114.63 135.306 cv
114.05 133.501 113.667 131.827 113.42 130.522 cv
114.48 129.852 115.621 129.241 116.848 128.712 cv
118.382 130.827 120.144 133.186 121.756 135.306 cv
111.601 135.306 mo
110.428 135.306 109.267 135.306 108.111 135.306 cv
108.105 135.186 108.1 135.067 108.097 134.948 cv
109.11 133.868 110.254 132.81 111.54 131.829 cv
111.517 132.901 111.528 134.096 111.601 135.306 cv
138.201 135.262 mo
137.454 133.737 136.06 131.412 133.78 129.386 cv
132.468 128.221 131 127.204 129.642 126.374 cv
131.111 126.378 132.345 126.48 133.345 126.618 cv
133.345 126.618 li
133.345 126.618 li
130.56 124.07 126.904 121.664 122.074 120.639 cv
121.332 120.481 120.494 120.403 119.691 120.403 cv
119.046 120.403 118.423 120.453 117.892 120.554 cv
117.639 120.664 117.3 120.738 116.916 120.738 cv
116.736 120.738 116.547 120.722 116.352 120.686 cv
115.339 120.974 114.337 121.275 113.385 121.57 cv
113.123 120.296 112.406 118.151 112.085 117.097 cv
111.942 116.629 111.877 116.249 111.877 115.915 cv
111.877 114.932 112.446 114.342 113.315 113.055 cv
114.441 111.391 114.774 109.481 114.774 107.688 cv
114.775 105.991 114.478 104.399 114.272 103.22 cv
114.248 103.071 114.225 102.928 114.201 102.793 cv
113.82 100.46 110.906 95.4937 110.906 95.4937 cv
110.906 95.4937 110.749 95.6794 110.355 96.0695 cv
110.354 96.068 110.354 96.0666 110.353 96.0651 cv
110.724 95.6921 110.906 95.4932 110.906 95.4932 cv
110.906 95.4932 110.682 95.5667 110.194 95.785 cv
109.958 95.3739 109.734 95.0091 109.535 94.6972 cv
110.328 94.5237 111.047 94.4048 111.685 94.3252 cv
110.619 92.7492 109.483 91.5185 108.68 90.734 cv
108.68 90.734 li
109.483 91.5185 110.619 92.7492 111.685 94.3252 cv
111.912 94.6602 112.136 95.0122 112.353 95.3794 cv
114.406 98.8511 116.492 105.739 115.458 110.808 cv
115.051 112.793 114.09 114.474 112.868 115.838 cv
113.371 119.234 114.997 120.436 116.352 120.686 cv
116.547 120.722 116.736 120.738 116.916 120.738 cv
117.3 120.738 117.639 120.664 117.892 120.554 cv
118.423 120.453 119.046 120.403 119.691 120.403 cv
120.494 120.403 121.332 120.481 122.074 120.639 cv
126.904 121.664 130.56 124.07 133.345 126.618 cv
134.6 127.765 135.678 128.939 136.606 130.029 cv
137.285 130.825 137.884 131.624 138.406 132.388 cv
138.414 132.38 li
139.024 133.018 139.542 133.825 139.956 134.594 cv
139.482 134.683 138.903 134.886 138.201 135.262 cv
109.616 122.786 mo
109.616 122.786 li
108.781 121.382 107.506 120.451 106.921 120.299 cv
106.578 120.35 106.196 120.378 105.784 120.386 cv
105.784 120.386 li
104.951 120.089 103.759 119.637 102.371 119.032 cv
102.962 119.094 103.53 119.125 104.06 119.125 cv
104.376 119.125 104.679 119.114 104.965 119.091 cv
105.348 119.06 105.695 119.043 106.014 119.043 cv
107.159 119.043 107.945 119.269 108.73 119.938 cv
109.508 120.6 110.712 121.533 111.511 122.162 cv
110.825 122.384 110.187 122.595 109.616 122.786 cv
89.8745 109.837 mo
89.3425 108.978 88.9113 108.12 88.563 107.311 cv
88.7361 107.12 88.9139 106.928 89.0964 106.734 cv
89.4615 107.21 90.0724 107.992 90.8334 108.917 cv
90.4565 109.262 90.1402 109.567 89.8745 109.837 cv
93.9652 106.304 mo
93.1825 105.153 92.6254 104.221 92.3119 103.673 cv
93.8843 102.328 95.6884 100.984 97.7456 99.7182 cv
101.188 97.6001 104.216 96.277 106.743 95.4578 cv
105.606 96.6445 li
105.606 96.6445 105.86 96.9553 106.407 97.7974 cv
104.171 99.1125 101.014 101.138 96.7447 104.224 cv
95.6891 104.987 94.7687 105.678 93.9652 106.304 cv
.992157 .854902 .854902 rgb
f
119.381 153.919 mo
118.843 153.919 118.44 153.837 118.142 153.742 cv
118.142 153.742 117.207 152.961 115.926 151.628 cv
116.152 151.283 116.467 150.925 116.86 150.554 cv
116.917 150.5 116.978 150.443 117.042 150.386 cv
117.333 150.771 117.63 151.131 117.933 151.458 cv
117.722 151.615 117.599 151.71 117.599 151.71 cv
117.639 151.876 117.914 152.31 118.379 152.749 cv
118.379 152.749 li
118.379 152.749 li
118.851 153.196 119.515 153.65 120.331 153.844 cv
119.975 153.897 119.66 153.919 119.381 153.919 cv
122.362 148.491 mo
122.021 148.099 121.633 147.638 121.213 147.113 cv
121.978 146.552 122.797 145.96 123.649 145.352 cv
123.443 145.785 123.296 146.17 123.197 146.43 cv
122.987 146.984 123.155 147.726 122.362 148.491 cv
130.154 140.79 mo
131.779 139.663 133.308 138.604 134.584 137.711 cv
134.764 137.585 134.939 137.463 135.108 137.344 cv
135.108 137.344 li
134.939 137.463 134.764 137.585 134.584 137.711 cv
134.666 137.852 134.75 138.006 134.835 138.173 cv
133.656 138.912 132.687 139.878 132.108 140.255 cv
131.467 140.674 131.086 140.759 130.154 140.79 cv
.984314 .729412 .733333 rgb
f
134.835 138.173 mo
134.75 138.006 134.666 137.852 134.584 137.711 cv
134.764 137.585 134.939 137.463 135.108 137.344 cv
135.21 137.52 135.302 137.69 135.387 137.854 cv
135.199 137.953 135.014 138.061 134.835 138.173 cv
140.84 137.667 mo
140.291 136.656 139.772 135.56 139.218 135.56 cv
139.123 135.56 139.027 135.593 138.929 135.663 cv
138.811 135.748 138.675 135.847 138.523 135.955 cv
138.433 135.75 138.326 135.517 138.201 135.262 cv
138.903 134.886 139.482 134.683 139.956 134.594 cv
140.677 135.937 141.077 137.164 141.077 137.164 cv
140.999 137.334 140.92 137.504 140.84 137.667 cv
140.84 137.667 li
.988235 .721569 .721569 rgb
f
109.859 90.8896 mo
109.933 90.9092 li
109.859 90.8896 li
cp
.34902 .0901961 .0705882 rgb
f
f
110.906 95.4937 mo
110.906 95.4937 113.82 100.46 114.201 102.793 cv
114.225 102.928 114.248 103.071 114.272 103.22 cv
114.694 105.644 115.506 109.816 113.315 113.055 cv
112.15 114.781 111.524 115.253 112.085 117.097 cv
112.476 118.382 113.456 121.287 113.482 122.261 cv
113.484 122.352 113.48 122.425 113.464 122.478 cv
113.373 122.799 113.189 122.967 112.945 122.986 cv
112.702 123.006 112.404 122.883 112.089 122.624 cv
111.455 122.104 109.736 120.794 108.73 119.938 cv
107.726 119.083 106.72 118.951 104.965 119.091 cv
102.733 119.272 99.4419 118.731 96.7417 117.691 cv
96.1313 117.457 95.5518 117.197 95.0205 116.914 cv
91.6689 115.126 88.7378 112.413 88.5053 111.558 cv
88.5053 111.558 94.1709 109.015 101.019 103.926 cv
105.784 100.384 108.703 97.6884 110.038 96.3784 cv
110.666 95.7769 110.906 95.4937 110.906 95.4937 cv
1 .262745 .368627 rgb
f
96.7447 104.224 mo
89.0381 109.795 88.5049 111.558 88.5049 111.558 cv
88.5049 111.558 94.1709 109.015 101.019 103.926 cv
105.784 100.384 108.702 97.6905 110.039 96.3774 cv
110.622 95.8042 110.906 95.4932 110.906 95.4932 cv
110.906 95.4932 107.093 96.7442 96.7447 104.224 cv
1 .341176 .466667 rgb
f
140.84 137.667 mo
140.84 137.668 li
138.571 142.397 136.053 145.081 128.739 149.933 cv
124.68 152.626 122.037 153.592 120.331 153.844 cv
119.515 153.65 118.851 153.196 118.379 152.749 cv
117.914 152.31 117.639 151.876 117.599 151.71 cv
117.599 151.71 119.741 150.063 121.506 149.099 cv
123.27 148.132 122.931 147.13 123.197 146.43 cv
123.462 145.728 124.088 144.122 125.233 143.101 cv
126.378 142.081 126.462 140.764 126.462 140.764 cv
126.462 140.764 128.85 140.824 129.941 140.796 cv
131.032 140.77 131.42 140.704 132.108 140.255 cv
132.798 139.806 134.041 138.52 135.534 137.779 cv
136.239 137.428 136.89 137.043 137.448 136.683 cv
138.07 136.284 138.579 135.916 138.929 135.663 cv
139.595 135.182 140.197 136.482 140.84 137.667 cv
1 .262745 .368627 rgb
f
132.269 148.675 mo
130.462 149.98 128.52 151.222 126.576 152.302 cv
123.336 154.099 120.68 154.947 118.68 154.825 cv
117.63 154.761 116.803 154.427 116.288 153.858 cv
116.404 153.754 li
116.972 154.379 119.378 156.116 126.5 152.164 cv
133.917 148.046 143.461 140.195 141.461 135.63 cv
141.604 135.567 li
142.771 138.229 140.138 141.674 137.724 144.098 cv
136.222 145.605 134.334 147.181 132.269 148.675 cv
cp
f
105.296 86.5669 mo
82.252 103.225 li
82.1606 103.099 li
105.205 86.4414 li
105.296 86.5669 li
cp
f
126.901 141.694 mo
126.683 141.659 li
126.296 141.123 li
123.833 138.163 113.51 124.568 112.789 122.616 cv
112.881 122.415 li
113.081 122.508 li
113.761 124.345 123.705 137.519 126.542 140.932 cv
126.937 141.476 li
126.901 141.694 li
.956863 .184314 .313726 rgb
f
114.272 103.22 mo
114.694 105.644 115.506 109.816 113.315 113.055 cv
112.15 114.781 111.524 115.253 112.085 117.097 cv
112.476 118.382 113.456 121.287 113.482 122.261 cv
113.342 122.509 113.163 122.751 112.945 122.986 cv
112.702 123.006 112.404 122.883 112.089 122.624 cv
111.455 122.104 109.736 120.794 108.73 119.938 cv
107.726 119.083 106.72 118.951 104.965 119.091 cv
102.733 119.272 99.4419 118.731 96.7417 117.691 cv
99.5625 116.935 103.061 115.439 105.803 113.431 cv
109.443 110.77 112.323 106.955 112.323 106.955 cv
112.323 106.955 113.282 105.092 114.272 103.22 cv
f
140.84 137.667 mo
140.84 137.668 li
138.571 142.397 136.053 145.081 128.739 149.933 cv
124.68 152.626 122.037 153.592 120.331 153.844 cv
119.515 153.65 118.851 153.196 118.379 152.749 cv
119.277 152.687 120.561 152.415 122.288 151.651 cv
126.24 149.904 128.458 148.565 128.852 147.907 cv
129.246 147.249 130.109 143.501 131.483 142.864 cv
132.857 142.225 135.122 141.085 135.122 141.085 cv
135.122 141.085 136.739 138.241 137.448 136.683 cv
138.07 136.284 138.579 135.916 138.929 135.663 cv
139.595 135.182 140.197 136.482 140.84 137.667 cv
f
90.8334 108.917 mo
90.0724 107.992 89.4615 107.21 89.0964 106.734 cv
90.0391 105.735 91.1075 104.704 92.3119 103.673 cv
92.6254 104.221 93.1825 105.153 93.9652 106.304 cv
92.6179 107.353 91.6003 108.216 90.8334 108.917 cv
.996078 .92549 .92549 rgb
f
99.5552 116.767 mo
98.6838 116.431 97.8321 115.982 97.0693 115.385 cv
95.2826 113.985 93.2792 111.811 91.6831 109.934 cv
92.6593 109.397 93.8235 108.728 95.1215 107.927 cv
96.1726 109.336 97.4754 110.914 99.0073 112.454 cv
100.289 113.742 101.458 114.721 102.474 115.462 cv
101.508 115.957 100.521 116.394 99.5552 116.767 cv
1 .611765 .670588 rgb
f
91.6831 109.934 mo
91.3841 109.582 91.0996 109.241 90.8334 108.917 cv
91.6003 108.216 92.6179 107.353 93.9652 106.304 cv
94.3079 106.808 94.6939 107.353 95.1215 107.927 cv
93.8235 108.728 92.6593 109.397 91.6831 109.934 cv
1 .654902 .721569 rgb
f
105.276 117.735 mo
103.91 117.735 101.674 117.584 99.5552 116.767 cv
100.521 116.394 101.508 115.957 102.474 115.462 cv
105.004 117.308 106.585 117.683 106.585 117.683 cv
106.585 117.683 106.081 117.735 105.276 117.735 cv
.980392 .572549 .643137 rgb
f
117.042 150.386 mo
114.893 147.538 113.106 143.251 112.203 139.612 cv
111.872 138.284 111.69 136.783 111.601 135.306 cv
112.605 135.306 113.618 135.306 114.63 135.306 cv
115.158 136.949 115.849 138.701 116.749 140.381 cv
118.228 143.143 119.881 145.449 121.213 147.113 cv
119.415 148.434 117.922 149.587 117.042 150.386 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 500 ]ct
[11.04 0 0 16.8 110.88 348.8 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 23 
/H 35 
/M[23 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 23 string /rs cvx /pop cvx] cvx
]
/O 2
>>
%%BeginBinary: 1
img
lMKl2lKda4lKS!-p?V#@lKRU"lMKl2!:/t:lMKl2lKda4o]c,7lKda4lKRU"lMLVGm-3g$lMKl2lKe'=
q"s@@lKda4lKRU"rql*[lKRU"lMKl2o'?,;lMKl2lKda4lKS95md'08lKRU"lML,9qW[;2lMKl2lKda4
r9<\7lKda4lKRU"nGE+[lKRU"lMKl2lKe?EnGDM8lKda4lKRd'r9NYFlKRU"lMKl2qWm\;lMKl2lKda4
mcj]7lKda4lKRU"lMLDAo',H*lMKl2lKdj7rql!FlKda4lKRU"q"s[[lKRU"lMKl2m-F];J,~>

%%EndBinary
grestore
np
114.63 135.306 mo
113.618 135.306 112.605 135.306 111.601 135.306 cv
111.528 134.096 111.517 132.901 111.54 131.829 cv
112.136 131.375 112.762 130.937 113.42 130.522 cv
113.667 131.827 114.05 133.501 114.63 135.306 cv
.996078 .92549 .92549 rgb
f
117.933 151.458 mo
117.63 151.131 117.333 150.771 117.042 150.386 cv
117.922 149.587 119.415 148.434 121.213 147.113 cv
121.633 147.638 122.021 148.099 122.362 148.491 cv
122.152 148.693 121.875 148.897 121.506 149.099 cv
120.164 149.832 118.604 150.96 117.933 151.458 cv
.992157 .858823 .862745 rgb
f
119.093 152.53 mo
118.7 152.229 118.312 151.868 117.933 151.458 cv
118.604 150.96 120.164 149.832 121.506 149.099 cv
121.875 148.897 122.152 148.693 122.362 148.491 cv
123.229 149.487 123.79 150.033 123.79 150.033 cv
123.624 150.605 119.093 152.53 119.093 152.53 cv
1 .611765 .670588 rgb
f
135.108 137.344 mo
134.75 136.72 134.287 136.03 133.689 135.306 cv
135.191 135.306 136.67 135.306 138.12 135.306 cv
137.679 135.548 137.189 135.857 136.648 136.249 cv
136.212 136.564 135.692 136.933 135.108 137.344 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 500 ]ct
[5.76 0 0 3.84 132.96 361.76 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 8 
/M[12 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f~>
<~l07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hs
l07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hsl07Hs~>
<~lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&
lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
138.12 135.306 mo
136.67 135.306 135.191 135.306 133.689 135.306 cv
133.391 134.945 133.059 134.575 132.689 134.202 cv
130.185 131.667 125.798 128.081 124.171 126.771 cv
126.225 126.482 128.022 126.374 129.563 126.374 cv
129.589 126.374 129.616 126.374 129.642 126.374 cv
131 127.204 132.468 128.221 133.78 129.386 cv
136.06 131.412 137.454 133.737 138.201 135.262 cv
138.174 135.277 138.147 135.291 138.12 135.306 cv
.996078 .92549 .92549 rgb
f
135.387 137.854 mo
135.302 137.69 135.21 137.52 135.108 137.344 cv
135.692 136.933 136.212 136.564 136.648 136.249 cv
137.223 135.833 137.739 135.51 138.201 135.262 cv
138.326 135.517 138.433 135.75 138.523 135.955 cv
138.223 136.167 137.86 136.418 137.448 136.683 cv
136.89 137.043 136.239 137.428 135.534 137.779 cv
135.485 137.804 135.436 137.829 135.387 137.854 cv
.996078 .854902 .854902 rgb
f
136.053 139.406 mo
135.917 139.004 135.707 138.473 135.387 137.854 cv
135.436 137.829 135.485 137.804 135.534 137.779 cv
136.239 137.428 136.89 137.043 137.448 136.683 cv
137.86 136.418 138.223 136.167 138.523 135.955 cv
138.523 135.955 li
138.223 136.167 137.86 136.418 137.448 136.683 cv
137.101 137.444 136.538 138.513 136.053 139.406 cv
1 .611765 .670588 rgb
f
136.278 140.234 mo
136.278 140.234 136.228 139.928 136.053 139.406 cv
136.538 138.513 137.101 137.444 137.448 136.683 cv
137.86 136.418 138.223 136.167 138.523 135.955 cv
138.786 136.555 138.904 136.92 138.904 136.92 cv
138.904 136.92 137.3 139.689 136.278 140.234 cv
.980392 .572549 .643137 rgb
f
106.407 97.7974 mo
105.86 96.9553 105.606 96.6445 105.606 96.6445 cv
106.743 95.4578 li
107.756 95.1296 108.688 94.8823 109.535 94.6972 cv
109.734 95.0091 109.958 95.3739 110.194 95.785 cv
109.501 96.0953 108.276 96.6979 106.407 97.7974 cv
109.439 96.9564 mo
109.666 96.741 109.865 96.5477 110.039 96.3774 cv
110.155 96.2627 110.26 96.1584 110.353 96.0651 cv
110.354 96.0666 110.354 96.068 110.355 96.0695 cv
110.263 96.1611 110.158 96.264 110.038 96.3784 cv
109.865 96.5482 109.665 96.7412 109.439 96.9564 cv
.996078 .92549 .92549 rgb
f
110.984 108.574 mo
110.807 106.774 110.35 104.707 109.32 102.804 cv
108.436 101.169 107.722 99.9325 107.166 99.0128 cv
108.106 98.1971 108.86 97.5053 109.439 96.9564 cv
109.665 96.7412 109.865 96.5482 110.038 96.3784 cv
110.158 96.264 110.263 96.1611 110.355 96.0695 cv
111.561 98.2276 113.017 101.509 113.276 105.117 cv
112.725 106.175 112.323 106.955 112.323 106.955 cv
112.323 106.955 111.826 107.613 110.984 108.574 cv
1 .611765 .670588 rgb
f
107.166 99.0128 mo
106.868 98.5213 106.616 98.1203 106.407 97.7974 cv
108.276 96.6979 109.501 96.0953 110.194 95.785 cv
110.247 95.8762 110.299 95.9694 110.353 96.0651 cv
110.26 96.1584 110.155 96.2627 110.039 96.3774 cv
109.865 96.5477 109.666 96.741 109.439 96.9564 cv
108.86 97.5053 108.106 98.1971 107.166 99.0128 cv
1 .654902 .721569 rgb
f
110.875 113.42 mo
110.875 113.42 111.252 111.303 110.984 108.574 cv
111.826 107.613 112.323 106.955 112.323 106.955 cv
112.323 106.955 112.725 106.175 113.276 105.117 cv
113.303 105.487 113.317 105.86 113.317 106.236 cv
113.317 113.053 110.875 113.42 110.875 113.42 cv
.980392 .572549 .643137 rgb
f
108.097 134.948 mo
108.097 134.948 li
108.091 134.747 108.088 134.547 108.088 134.349 cv
108.09 130.92 109.021 127.959 110.399 125.632 cv
110.401 125.586 110.401 125.54 110.401 125.495 cv
110.401 124.482 110.076 123.562 109.616 122.786 cv
110.187 122.595 110.825 122.384 111.511 122.162 cv
111.746 122.347 111.945 122.506 112.089 122.624 cv
112.382 122.865 112.66 122.988 112.893 122.988 cv
112.911 122.988 112.928 122.988 112.945 122.986 cv
112.945 122.986 li
112.951 122.986 112.956 122.985 112.962 122.985 cv
113.502 123.997 115.012 126.181 116.848 128.712 cv
115.621 129.241 114.48 129.852 113.42 130.522 cv
113.11 128.881 113.015 127.824 113.015 127.824 cv
111.838 127.708 li
111.785 127.81 111.587 129.536 111.54 131.829 cv
110.254 132.81 109.11 133.868 108.097 134.948 cv
117.14 128.588 mo
115.291 126.038 113.777 123.85 113.247 122.859 cv
113.342 122.774 113.416 122.648 113.464 122.478 cv
113.48 122.425 113.484 122.352 113.482 122.261 cv
113.478 122.086 113.442 121.849 113.385 121.57 cv
114.337 121.275 115.339 120.974 116.352 120.686 cv
116.547 120.722 116.736 120.738 116.916 120.738 cv
117.3 120.738 117.639 120.664 117.892 120.554 cv
118.423 120.453 119.046 120.403 119.691 120.403 cv
120.494 120.403 121.332 120.481 122.074 120.639 cv
126.904 121.664 130.56 124.07 133.345 126.618 cv
132.345 126.48 131.111 126.378 129.642 126.374 cv
127.091 124.814 124.929 123.91 124.929 123.91 cv
123.541 126.266 li
123.541 126.266 123.773 126.45 124.171 126.771 cv
123.566 126.855 122.94 126.956 122.291 127.073 cv
120.429 127.411 118.715 127.932 117.14 128.588 cv
.992157 .803922 .803922 rgb
f
112.945 122.986 mo
112.949 122.982 112.953 122.978 112.956 122.974 cv
112.958 122.978 112.96 122.981 112.962 122.985 cv
112.956 122.985 112.951 122.986 112.945 122.986 cv
113.247 122.859 mo
113.22 122.809 113.196 122.762 113.174 122.718 cv
113.292 122.568 113.395 122.416 113.482 122.261 cv
113.478 122.086 113.442 121.849 113.385 121.57 cv
113.385 121.57 li
113.442 121.849 113.478 122.086 113.482 122.261 cv
113.484 122.352 113.48 122.425 113.464 122.478 cv
113.416 122.648 113.342 122.774 113.247 122.859 cv
1 .247059 .345098 rgb
f
116.848 128.712 mo
115.012 126.181 113.502 123.997 112.962 122.985 cv
112.96 122.981 112.958 122.978 112.956 122.974 cv
113.034 122.89 113.107 122.804 113.174 122.718 cv
113.196 122.762 113.22 122.809 113.247 122.859 cv
113.777 123.85 115.291 126.038 117.14 128.588 cv
117.042 128.629 116.945 128.67 116.848 128.712 cv
.956863 .172549 .294118 rgb
f
112.893 122.988 mo
112.66 122.988 112.382 122.865 112.089 122.624 cv
111.945 122.506 111.746 122.347 111.511 122.162 cv
112.104 121.971 112.733 121.772 113.385 121.57 cv
113.442 121.849 113.478 122.086 113.482 122.261 cv
113.395 122.416 113.292 122.568 113.174 122.718 cv
113.107 122.804 113.034 122.89 112.956 122.974 cv
112.953 122.978 112.949 122.982 112.945 122.986 cv
112.945 122.986 li
112.928 122.988 112.911 122.988 112.893 122.988 cv
f
111.54 131.829 mo
111.587 129.536 111.785 127.81 111.838 127.708 cv
113.015 127.824 li
113.015 127.824 113.11 128.881 113.42 130.522 cv
112.762 130.937 112.136 131.375 111.54 131.829 cv
.996078 .870588 .870588 rgb
f
124.171 126.771 mo
123.773 126.45 123.541 126.266 123.541 126.266 cv
124.929 123.91 li
124.929 123.91 127.091 124.814 129.642 126.374 cv
129.616 126.374 129.589 126.374 129.563 126.374 cv
128.022 126.374 126.225 126.482 124.171 126.771 cv
f
105.516 120.388 mo
101.587 120.389 95.0938 118.672 91.1157 115.964 cv
88.8082 114.393 87.207 112.138 86.1664 110.215 cv
86.8384 109.314 87.6333 108.335 88.563 107.311 cv
88.563 107.311 li
88.9113 108.12 89.3425 108.978 89.8745 109.837 cv
88.6492 111.081 88.5049 111.558 88.5049 111.558 cv
88.5049 111.558 88.505 111.558 88.5054 111.558 cv
88.7382 112.413 91.6691 115.126 95.0205 116.914 cv
95.5518 117.197 96.1313 117.457 96.7417 117.691 cv
96.7417 117.691 li
96.7417 117.691 li
98.5188 118.376 100.552 118.844 102.371 119.032 cv
103.759 119.637 104.951 120.089 105.784 120.386 cv
105.696 120.388 105.606 120.388 105.516 120.388 cv
.992157 .803922 .803922 rgb
f
96.7417 117.691 mo
96.7417 117.691 li
96.1313 117.457 95.5518 117.197 95.0205 116.914 cv
91.6691 115.126 88.7382 112.413 88.5054 111.558 cv
88.5272 111.548 89.2171 111.237 90.3918 110.625 cv
91.3017 111.933 92.4597 113.21 93.9292 114.291 cv
95.4097 115.38 96.9783 116.335 98.4961 117.153 cv
97.8919 117.361 97.3035 117.541 96.7417 117.691 cv
1 .247059 .345098 rgb
f
88.5049 111.558 mo
88.5049 111.558 88.6492 111.081 89.8745 109.837 cv
90.0373 110.1 90.2096 110.363 90.3918 110.625 cv
89.2171 111.237 88.5272 111.548 88.5054 111.558 cv
88.505 111.558 88.5049 111.558 88.5049 111.558 cv
1 .321569 .439216 rgb
f
102.371 119.032 mo
100.552 118.844 98.5188 118.376 96.7417 117.691 cv
96.7417 117.691 li
97.3035 117.541 97.8919 117.361 98.4961 117.153 cv
99.8624 117.89 101.188 118.517 102.371 119.032 cv
.956863 .172549 .294118 rgb
f
108.68 90.734 mo
108.128 90.5328 107.557 90.3605 106.972 90.2157 cv
107.604 89.7588 li
107.604 89.7588 108.034 90.1014 108.68 90.734 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 500 ]ct
[3.36 0 0 2.88 106.08 408.32 ]ct
snap_to_device
<<
/T 1
/W 7 
/H 6 
/M[7 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 ]
/DS 
[
<~q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"O~>
<~b0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLb/s~>
<~c-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-6~>
]
/O 2
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
88.563 107.311 mo
88.563 107.311 li
88.0654 106.156 87.7358 105.099 87.5239 104.275 cv
84.5586 106.418 li
106.972 90.2157 li
107.557 90.3605 108.128 90.5328 108.68 90.734 cv
109.483 91.5185 110.619 92.7492 111.685 94.3252 cv
111.047 94.4048 110.328 94.5237 109.535 94.6972 cv
109.024 93.8984 108.672 93.4453 108.672 93.4453 cv
106.743 95.4578 li
104.216 96.277 101.188 97.6001 97.7456 99.7182 cv
95.6884 100.984 93.8843 102.328 92.3119 103.673 cv
92.115 103.329 92.0142 103.136 92.0142 103.136 cv
88.7222 106.241 li
88.7222 106.241 88.856 106.421 89.0964 106.734 cv
88.9139 106.928 88.7361 107.12 88.563 107.311 cv
.992157 .803922 .803922 rgb
f
89.0964 106.734 mo
88.856 106.421 88.7222 106.241 88.7222 106.241 cv
92.0142 103.136 li
92.0142 103.136 92.115 103.329 92.3119 103.673 cv
91.1075 104.704 90.0391 105.735 89.0964 106.734 cv
.996078 .870588 .870588 rgb
f
106.743 95.4578 mo
108.672 93.4453 li
108.672 93.4453 109.024 93.8984 109.535 94.6972 cv
108.688 94.8823 107.756 95.1296 106.743 95.4578 cv
f
86.1664 110.215 mo
86.1664 110.215 li
85.0328 108.118 84.5586 106.418 84.5586 106.418 cv
84.5586 106.418 li
87.5239 104.275 li
87.7358 105.099 88.0654 106.156 88.563 107.311 cv
88.563 107.311 li
88.563 107.311 li
87.6333 108.335 86.8384 109.314 86.1664 110.215 cv
.992157 .756863 .756863 rgb
f
118.792 155.642 mo
118.792 155.642 120.387 155.801 121.915 155.187 cv
124.422 158.654 li
124.422 158.654 121.966 159.018 121.254 159.047 cv
118.792 155.642 li
cp
1 .780392 .780392 rgb
f
113.664 225.216 mo
113.555 225.192 li
113.399 225.132 113.324 224.958 113.385 224.798 cv
114.346 222.37 115.802 218.604 115.869 218.183 cv
115.902 218.019 116.058 217.903 116.221 217.933 cv
116.386 217.959 116.497 218.116 116.471 218.28 cv
116.367 218.904 114.195 224.398 113.949 225.022 cv
113.9 225.143 113.789 225.216 113.664 225.216 cv
cp
.835294 .862745 1 rgb
f
111.845 217.094 mo
111.955 217.618 120.876 220.661 121.79 219.902 cv
122.7 219.145 119.432 216.108 119.432 216.108 cv
120.952 208.063 li
120.952 208.063 123.155 208.363 123.386 207.606 cv
123.608 206.847 118.828 204.871 118.146 204.72 cv
117.46 204.567 115.946 206.237 118.222 207.227 cv
114.878 214.435 li
114.878 214.435 111.388 214.892 111.845 217.094 cv
cp
.0470588 .0784314 .596078 rgb
f
163.251 97.7129 mo
163.197 97.6514 163.168 97.5723 163.181 97.4819 cv
163.691 91.9097 li
163.705 91.7451 163.854 91.6201 164.021 91.6343 cv
164.185 91.6479 164.311 91.7954 164.292 91.9668 cv
163.781 97.541 li
163.767 97.7046 163.622 97.8315 163.454 97.812 cv
163.251 97.7129 li
cp
.835294 .862745 1 rgb
f
164.394 82.7959 mo
164.543 82.7739 161.845 89.374 161.845 89.374 cv
161.845 89.374 159.119 90.7568 158.878 91.9775 cv
158.639 93.1978 162.723 93.249 165.821 92.7539 cv
168.921 92.2583 170.125 91.9072 170.08 90.9336 cv
170.038 89.9668 166.027 88.7314 166.027 88.7314 cv
167.469 82.3213 li
167.469 82.3213 169.363 82.1743 169.325 81.0972 cv
169.289 80.0156 165.843 80.0063 164.027 80.6963 cv
162.204 81.3828 161.321 83.2744 164.394 82.7959 cv
cp
.0470588 .0784314 .596078 rgb
f
302.528 389.121 mo
302.426 389.104 li
297.794 387.434 li
297.638 387.375 297.555 387.201 297.614 387.043 cv
297.671 386.887 297.842 386.805 298.002 386.86 cv
302.634 388.531 li
302.789 388.591 302.869 388.763 302.813 388.92 cv
302.771 389.045 302.654 389.121 302.528 389.121 cv
cp
.835294 .862745 1 rgb
f
300.404 382.898 mo
300.404 382.898 297.619 390.79 297.266 392.462 cv
296.912 394.133 294.786 390.868 294.864 388.515 cv
289.32 384.945 li
289.32 384.945 289.094 386.692 288.333 386.391 cv
287.574 386.086 287.042 380.091 288.333 380.091 cv
289.627 380.091 289.245 381.985 289.245 381.985 cv
295.85 384.49 li
295.85 384.49 299.262 381.225 300.404 382.898 cv
cp
.137255 .247059 .890196 rgb
f
284.841 132.251 mo
284.685 132.251 284.555 132.134 284.539 131.975 cv
284.076 127.195 li
284.059 127.027 284.18 126.88 284.351 126.863 cv
284.504 126.846 284.664 126.967 284.68 127.135 cv
285.139 131.916 li
285.162 132.084 285.033 132.233 284.87 132.251 cv
284.841 132.251 li
cp
.835294 .862745 1 rgb
f
279.971 133.161 mo
280.507 133.914 282.859 134.832 283.463 134.604 cv
285.971 140.981 li
285.971 140.981 284.68 141.132 284.756 141.967 cv
284.831 142.801 289.916 141.283 289.612 140.674 cv
289.313 140.069 287.945 140.448 287.945 140.448 cv
287.492 133.998 li
287.492 133.998 290.249 131.668 289.627 130.657 cv
289.007 129.643 279.593 132.626 279.971 133.161 cv
cp
1 .262745 .368627 rgb
f
245.135 298.856 mo
245.11 298.819 li
245.035 298.671 245.093 298.484 245.237 298.406 cv
251.83 294.952 li
251.977 294.878 252.159 294.932 252.235 295.08 cv
252.315 295.231 252.258 295.417 252.107 295.494 cv
245.517 298.944 li
245.385 299.016 245.219 298.973 245.135 298.856 cv
cp
.835294 .862745 1 rgb
f
255.687 299.605 mo
256.169 298.724 255.963 295.991 255.452 295.501 cv
260.516 290.045 li
260.516 290.045 261.271 291.233 262.056 290.767 cv
262.835 290.298 258.95 286.035 258.501 286.619 cv
258.045 287.201 259.064 288.36 259.064 288.36 cv
252.96 291.846 li
252.96 291.846 249.38 290.242 248.678 291.33 cv
247.98 292.417 255.341 300.229 255.687 299.605 cv
cp
.137255 .247059 .890196 rgb
f
123.131 397.722 mo
114.011 396.639 106.525 395.146 101.294 393.086 cv
100.788 392.892 100.309 392.651 99.8472 392.367 cv
99.6606 392.27 99.4829 392.154 99.314 392.029 cv
96.9072 390.404 95.0957 387.74 93.7017 384.294 cv
93.4795 379.713 93.2842 374.232 93.062 370.503 cv
93.0532 370.361 93.0444 370.219 93.0444 370.076 cv
92.9375 368.514 92.8315 367.306 92.7158 366.658 cv
92.5112 365.494 90.9395 363.904 89.1987 362.396 cv
88.604 361.889 87.9912 361.383 87.4048 360.912 cv
87.2456 360.779 87.0942 360.646 86.9346 360.521 cv
86.9346 360.513 li
85.5669 359.42 84.439 358.523 84.2349 358.132 cv
83.853 357.404 79.4038 335.522 76.5708 321.447 cv
76.5356 321.313 76.5176 321.171 76.4819 321.029 cv
75.168 314.529 74.2266 309.796 74.2266 309.796 cv
74.2266 309.796 68.7827 305.542 68.6226 304.84 cv
68.543 304.458 68.3208 298.188 68.1255 292.576 cv
67.9746 287.896 67.8501 283.66 67.8501 283.66 cv
63.3833 281.333 li
62.2285 264.362 li
83.9063 259.532 li
86.3481 267.462 li
86.748 268.767 li
86.748 268.775 li
86.8721 269.185 li
90.8774 282.213 li
90.8599 282.239 li
89.4565 283.233 88.8081 283.936 88.9414 284.3 cv
89.0659 284.655 90.0693 285.667 90.5757 286.155 cv
90.1138 286.351 89.3145 286.715 89.1279 286.893 cv
89.0303 287.008 li
89.0039 287.052 li
88.8794 287.229 88.7549 287.487 88.6753 287.799 cv
88.6484 287.896 li
88.6396 287.949 li
88.6216 288.011 li
88.5952 288.136 88.5864 288.26 88.5864 288.384 cv
88.5776 288.499 li
88.5864 288.739 88.6304 288.997 88.7285 289.236 cv
89.0659 290.071 91.2148 294.761 91.5791 295.329 cv
91.792 295.666 92.396 295.756 93.0977 295.853 cv
93.7017 295.951 94.394 296.048 94.6694 296.324 cv
95.1133 296.768 96.3745 301.376 96.9873 303.588 cv
97.1914 304.369 97.3599 304.991 97.458 305.303 cv
97.7158 306.137 98.6924 307.522 99.9268 309.271 cv
100.344 309.866 100.797 310.506 101.25 311.163 cv
101.33 311.278 101.401 311.385 101.481 311.5 cv
101.561 311.624 101.641 311.731 101.721 311.847 cv
101.836 312.033 li
101.916 312.14 101.987 312.255 102.058 312.361 cv
102.173 312.548 102.289 312.726 102.404 312.912 cv
102.831 313.587 103.266 314.324 103.701 315.08 cv
103.745 315.15 li
104.145 315.861 104.545 316.598 104.917 317.281 cv
104.989 317.406 105.051 317.521 105.113 317.637 cv
105.237 317.886 li
105.468 318.312 105.673 318.721 105.868 319.093 cv
105.913 319.191 105.965 319.279 106.01 319.369 cv
106.054 319.476 106.099 319.572 106.152 319.671 cv
106.268 319.901 106.365 320.106 106.454 320.293 cv
106.525 320.461 106.596 320.604 106.649 320.727 cv
106.658 320.745 li
106.729 320.923 li
106.792 321.101 li
106.907 321.482 106.356 325.114 105.939 327.77 cv
105.628 329.83 105.335 331.774 105.291 332.494 cv
105.22 333.578 105.602 334.359 106.179 335.54 cv
106.561 336.322 107.031 337.29 107.528 338.657 cv
107.741 339.226 107.928 339.82 108.105 340.406 cv
108.186 340.655 108.248 340.895 108.319 341.135 cv
108.408 341.455 108.488 341.766 108.559 342.059 cv
108.594 342.201 108.629 342.334 108.656 342.476 cv
108.692 342.618 108.728 342.752 108.754 342.884 cv
108.79 343.035 108.825 343.178 108.852 343.319 cv
108.887 343.471 108.923 343.63 108.958 343.772 cv
108.994 343.914 109.029 344.057 109.056 344.199 cv
109.091 344.35 109.118 344.492 109.145 344.635 cv
109.18 344.838 109.225 345.024 109.251 345.193 cv
109.287 345.38 li
109.305 345.478 109.322 345.575 109.34 345.655 cv
109.349 345.718 li
109.367 345.814 109.376 345.896 109.394 345.967 cv
109.411 346.055 li
109.154 346.232 108.577 346.677 108.284 347.191 cv
107.893 347.884 108.363 349.438 109.127 351.729 cv
109.695 353.417 110.681 356.17 110.957 356.951 cv
110.627 357.076 109.988 357.395 109.491 358.115 cv
108.878 358.994 108.79 360.086 108.771 360.37 cv
108.665 360.539 li
108.497 360.823 108.203 361.355 107.955 362.049 cv
107.911 362.164 107.875 362.289 107.839 362.422 cv
107.804 362.547 107.769 362.688 107.733 362.821 cv
107.679 363.034 li
107.679 363.043 li
107.671 363.079 li
107.635 363.248 107.608 363.416 107.59 363.594 cv
107.582 363.639 li
107.564 363.843 li
107.564 363.869 li
107.555 363.984 107.546 364.109 107.546 364.233 cv
107.546 364.446 li
107.573 365.69 107.848 366.285 108.23 366.765 cv
108.354 366.916 108.488 367.066 108.629 367.218 cv
108.843 367.457 109.074 367.706 109.313 368.043 cv
109.438 368.221 109.571 368.496 109.722 368.843 cv
109.767 368.931 109.802 369.021 109.846 369.117 cv
109.909 369.26 109.971 369.419 110.042 369.588 cv
110.042 369.597 li
110.104 369.739 li
110.104 369.748 li
110.353 370.37 110.627 371.099 110.912 371.871 cv
111.685 373.94 112.635 376.507 113.683 378.521 cv
115.459 381.959 li
116.054 383.123 116.702 384.365 117.351 385.626 cv
117.732 386.382 118.123 387.136 118.514 387.882 cv
118.576 387.997 118.629 388.104 118.691 388.22 cv
118.754 388.344 118.816 388.469 118.887 388.593 cv
119.073 388.966 119.269 389.339 119.455 389.703 cv
119.588 389.942 119.704 390.173 119.819 390.404 cv
119.908 390.573 119.997 390.742 120.086 390.91 cv
120.352 391.417 120.601 391.896 120.822 392.341 cv
120.982 392.643 121.133 392.927 121.276 393.201 cv
122.226 395.031 122.794 396.595 123.131 397.722 cv
cp
.835294 .862745 1 rgb
f
138.01 395.195 mo
123.759 398.373 li
123.47 397.218 122.872 395.339 121.653 393.004 cv
121.606 392.914 121.559 392.82 121.505 392.727 cv
121.384 392.49 121.254 392.242 121.124 391.993 cv
120.94 391.633 120.746 391.259 120.544 390.87 cv
120.371 390.54 120.2 390.203 120.015 389.855 cv
119.776 389.391 119.529 388.909 119.275 388.42 cv
118.806 387.518 118.322 386.581 117.835 385.644 cv
117.54 385.069 117.244 384.49 116.952 383.926 cv
116.568 383.182 116.194 382.452 115.833 381.758 cv
114.065 378.33 li
113.034 376.328 112.079 373.777 111.314 371.727 cv
110.625 369.879 110.082 368.416 109.665 367.807 cv
109.411 367.435 109.16 367.166 108.935 366.924 cv
108.822 366.798 108.707 366.678 108.609 366.556 cv
108.478 366.381 li
108.422 366.304 108.368 366.219 108.322 366.127 cv
108.25 365.99 li
108.249 365.98 li
108.202 365.869 li
108.155 365.745 li
108.123 365.634 li
108.036 365.328 107.987 364.939 107.974 364.435 cv
107.971 364.308 107.972 364.186 107.98 364.065 cv
107.983 364.024 li
107.989 363.904 107.996 363.788 108.014 363.67 cv
108.026 363.549 108.046 363.432 108.063 363.313 cv
108.13 362.934 108.231 362.573 108.342 362.249 cv
108.418 362.05 li
108.454 361.942 108.497 361.839 108.54 361.742 cv
108.604 361.59 li
108.704 361.376 li
108.783 361.218 li
108.822 361.138 li
108.917 360.96 li
108.981 360.85 109.035 360.758 109.079 360.689 cv
109.106 360.644 li
109.163 360.558 li
109.202 360.439 li
109.198 360.426 109.225 359.246 109.839 358.363 cv
110.445 357.496 111.276 357.293 111.286 357.292 cv
111.423 357.186 li
111.438 357.01 li
111.428 356.979 110.189 353.558 109.535 351.592 cv
108.999 349.983 108.331 347.982 108.657 347.405 cv
108.981 346.835 109.748 346.348 109.756 346.346 cv
109.854 346.13 li
109.849 346.092 109.368 343.085 108.457 340.078 cv
108.406 339.913 108.357 339.753 108.304 339.594 cv
108.187 339.228 108.068 338.866 107.934 338.509 cv
107.424 337.118 106.947 336.142 106.562 335.354 cv
105.994 334.191 105.65 333.491 105.713 332.515 cv
105.754 331.82 106.051 329.885 106.366 327.831 cv
106.959 323.975 107.337 321.412 107.206 320.973 cv
107.169 320.876 li
107.125 320.75 li
106.919 320.253 106.432 319.242 105.793 318.02 cv
105.745 317.927 105.69 317.824 105.639 317.725 cv
104.806 316.14 103.75 314.251 102.767 312.68 cv
102.299 311.934 101.788 311.18 101.287 310.458 cv
101.045 310.112 100.81 309.775 100.578 309.449 cv
100.476 309.306 100.378 309.161 100.275 309.021 cv
99.1099 307.369 98.1021 305.942 97.8716 305.181 cv
97.7744 304.872 97.6069 304.251 97.3931 303.475 cv
96.395 299.819 95.458 296.502 94.9731 296.019 cv
94.5967 295.649 93.8662 295.541 93.1597 295.436 cv
92.6641 295.361 92.0488 295.271 91.9336 295.096 cv
91.6177 294.599 89.498 290.002 89.1211 289.072 cv
88.7988 288.271 89.2383 287.374 89.4233 287.202 cv
89.5464 287.082 90.3413 286.717 91.0391 286.425 cv
91.166 286.265 li
91.1665 286.212 li
91.106 286.072 li
90.8984 285.869 li
90.73 285.703 li
90.5044 285.478 li
90.2275 285.199 89.9653 284.931 89.7617 284.71 cv
89.6255 284.554 li
89.5146 284.422 li
89.4531 284.346 li
89.3472 284.186 li
89.3975 284.08 li
89.4346 284.029 li
89.459 283.997 li
89.5176 283.92 89.5952 283.838 89.6919 283.742 cv
90.0293 283.414 90.5688 282.973 91.1001 282.585 cv
91.2476 282.479 li
91.3315 282.24 li
91.3042 282.162 li
84.3276 259.435 li
102.452 255.394 li
102.452 255.394 102.674 260.811 102.631 264.562 cv
102.603 267.107 102.475 271.474 103.092 276.82 cv
103.108 276.968 103.124 277.121 103.146 277.275 cv
103.436 279.683 103.885 282.28 104.553 284.989 cv
106.776 293.961 110.164 301.78 110.164 301.78 cv
110.554 301.565 112.152 302.343 113.718 305.915 cv
114.978 308.797 116.07 312.833 116.495 315.003 cv
116.52 315.167 116.55 315.318 116.574 315.457 cv
116.625 315.77 116.659 316.022 116.669 316.206 cv
116.752 317.567 114.263 324.755 114.458 328.912 cv
114.604 332.066 115.835 334.791 117.751 338.181 cv
117.824 338.305 117.896 338.43 117.968 338.554 cv
118.521 339.522 119.131 340.547 119.787 341.652 cv
122.838 346.818 124.782 350.956 124.782 350.956 cv
124.782 350.956 121.758 355.104 121.647 357.224 cv
121.537 359.339 121.92 361.06 123.705 367.096 cv
125.491 373.134 128.432 377.154 131.161 382.828 cv
133.887 388.5 138.01 395.195 138.01 395.195 cv
cp
.721569 .780392 1 rgb
f
123.762 398.37 mo
123.336 398.468 li
123.282 398.245 123.212 397.997 123.131 397.722 cv
122.794 396.595 122.226 395.031 121.276 393.201 cv
121.133 392.927 120.982 392.643 120.822 392.341 cv
120.601 391.896 120.352 391.417 120.086 390.91 cv
119.997 390.742 119.908 390.573 119.819 390.404 cv
119.704 390.173 119.588 389.942 119.455 389.703 cv
119.269 389.339 119.073 388.966 118.887 388.593 cv
118.816 388.469 118.754 388.344 118.691 388.22 cv
118.629 388.104 118.576 387.997 118.514 387.882 cv
118.123 387.136 117.732 386.382 117.351 385.626 cv
116.702 384.365 116.054 383.123 115.459 381.959 cv
113.683 378.521 li
112.635 376.507 111.685 373.94 110.912 371.871 cv
110.627 371.099 110.353 370.37 110.104 369.748 cv
110.104 369.739 li
110.042 369.597 li
110.042 369.588 li
109.971 369.419 109.909 369.26 109.846 369.117 cv
109.802 369.021 109.767 368.931 109.722 368.843 cv
109.571 368.496 109.438 368.221 109.313 368.043 cv
109.074 367.706 108.843 367.457 108.629 367.218 cv
108.488 367.066 108.354 366.916 108.23 366.765 cv
107.848 366.285 107.573 365.69 107.546 364.446 cv
107.546 364.233 li
107.546 364.109 107.555 363.984 107.564 363.869 cv
107.564 363.843 li
107.582 363.639 li
107.59 363.594 li
107.608 363.435 107.635 363.274 107.671 363.123 cv
107.671 363.079 li
107.679 363.07 li
107.679 363.043 li
107.679 363.034 li
107.733 362.821 li
107.769 362.688 107.804 362.547 107.839 362.422 cv
107.875 362.289 107.911 362.164 107.955 362.049 cv
108.203 361.355 108.497 360.823 108.665 360.539 cv
108.771 360.37 li
108.79 360.086 108.878 358.994 109.491 358.115 cv
109.988 357.395 110.627 357.076 110.957 356.951 cv
110.681 356.17 109.695 353.417 109.127 351.729 cv
108.363 349.438 107.893 347.884 108.284 347.191 cv
108.577 346.677 109.154 346.232 109.411 346.055 cv
109.394 345.967 li
109.384 345.896 109.367 345.814 109.349 345.718 cv
109.34 345.655 li
109.322 345.575 109.305 345.478 109.287 345.38 cv
109.251 345.193 li
109.225 345.024 109.18 344.838 109.145 344.635 cv
109.118 344.492 109.091 344.35 109.056 344.199 cv
108.994 343.923 108.932 343.63 108.869 343.319 cv
108.861 343.319 li
108.833 343.178 108.799 343.035 108.763 342.884 cv
108.701 342.618 108.639 342.343 108.559 342.059 cv
108.488 341.766 108.408 341.455 108.319 341.135 cv
108.248 340.895 108.186 340.655 108.105 340.406 cv
107.928 339.82 107.741 339.226 107.528 338.657 cv
107.031 337.29 106.561 336.322 106.179 335.54 cv
105.602 334.359 105.22 333.578 105.291 332.494 cv
105.335 331.774 105.628 329.83 105.939 327.77 cv
106.356 325.114 106.907 321.482 106.792 321.101 cv
106.729 320.923 li
106.658 320.745 li
106.649 320.727 li
106.596 320.604 106.525 320.461 106.454 320.293 cv
106.365 320.106 106.268 319.901 106.152 319.671 cv
106.063 319.493 105.965 319.298 105.868 319.093 cv
105.673 318.721 105.468 318.312 105.237 317.886 cv
105.13 317.689 105.024 317.486 104.917 317.281 cv
104.536 316.571 104.119 315.816 103.701 315.08 cv
103.266 314.324 102.831 313.587 102.404 312.912 cv
102.032 312.326 101.641 311.74 101.25 311.163 cv
100.797 310.506 100.344 309.866 99.9268 309.271 cv
98.6924 307.522 97.7158 306.137 97.458 305.303 cv
97.3599 304.991 97.1914 304.369 96.9873 303.588 cv
96.3745 301.376 95.1133 296.768 94.6694 296.324 cv
94.394 296.048 93.7017 295.951 93.0977 295.853 cv
92.396 295.756 91.792 295.666 91.5791 295.329 cv
91.2148 294.761 89.0659 290.071 88.7285 289.236 cv
88.6304 288.997 88.5864 288.739 88.5776 288.499 cv
88.5864 288.384 li
88.5864 288.26 88.5952 288.136 88.6216 288.011 cv
88.6304 287.949 li
88.6753 287.799 li
88.7549 287.487 88.8794 287.229 89.0039 287.052 cv
89.0303 287.008 li
89.1279 286.893 li
89.3145 286.715 90.1138 286.351 90.5757 286.155 cv
90.0693 285.667 89.0659 284.655 88.9414 284.3 cv
88.8081 283.936 89.4565 283.233 90.8682 282.23 cv
90.8774 282.213 li
86.8721 269.185 li
86.748 268.775 li
86.3481 267.462 li
83.9063 259.532 li
84.3237 259.434 li
86.6768 267.08 li
86.8013 267.497 li
87.2188 268.856 li
87.2188 268.865 li
91.3037 282.159 li
91.3301 282.239 li
91.2505 282.479 li
91.1079 282.586 li
91.0996 282.586 li
90.6997 282.879 90.291 283.198 89.9805 283.474 cv
89.8296 283.615 li
89.6963 283.74 li
89.563 283.873 li
89.4658 283.979 89.3945 284.068 89.3677 284.13 cv
89.3496 284.184 li
89.3765 284.264 89.5278 284.45 89.7583 284.708 cv
89.8564 284.806 89.9624 284.93 90.0869 285.054 cv
90.2114 285.188 li
90.3091 285.285 90.4067 285.383 90.5044 285.48 cv
90.6284 285.613 90.7622 285.747 90.895 285.871 cv
91.1079 286.075 li
91.1704 286.209 li
91.1616 286.262 li
91.0376 286.422 li
90.3447 286.715 89.5454 287.079 89.4209 287.203 cv
89.2344 287.372 88.7993 288.269 89.1191 289.068 cv
89.501 290.001 91.6147 294.601 91.9341 295.099 cv
92.0493 295.267 92.6621 295.364 93.1597 295.436 cv
93.8701 295.542 94.5981 295.649 94.9712 296.021 cv
95.46 296.502 96.3921 299.822 97.3955 303.473 cv
97.6089 304.254 97.7778 304.876 97.8755 305.178 cv
98.1064 305.941 99.1099 307.371 100.273 309.022 cv
100.602 309.485 100.939 309.965 101.285 310.462 cv
101.49 310.746 101.694 311.039 101.889 311.341 cv
102.032 311.555 102.173 311.767 102.307 311.98 cv
102.396 312.096 102.476 312.211 102.547 312.336 cv
102.626 312.451 102.698 312.566 102.769 312.682 cv
103.168 313.313 103.568 313.996 103.967 314.688 cv
104.047 314.822 104.119 314.946 104.189 315.071 cv
104.74 316.039 105.264 317.007 105.717 317.876 cv
105.797 318.027 105.868 318.17 105.939 318.303 cv
105.992 318.401 106.037 318.489 106.081 318.588 cv
106.205 318.836 106.33 319.067 106.445 319.289 cv
106.676 319.751 106.862 320.142 106.987 320.443 cv
107.049 320.559 107.093 320.665 107.12 320.745 cv
107.146 320.808 li
107.209 320.976 li
107.333 321.411 106.96 323.978 106.365 327.831 cv
106.054 329.884 105.752 331.819 105.717 332.512 cv
105.646 333.488 105.992 334.19 106.561 335.354 cv
106.951 336.145 107.422 337.12 107.937 338.507 cv
108.097 338.933 108.239 339.376 108.381 339.82 cv
108.443 340.033 108.514 340.256 108.577 340.478 cv
108.647 340.699 108.709 340.922 108.763 341.144 cv
108.79 341.233 li
108.94 341.774 109.074 342.308 109.18 342.805 cv
109.18 342.813 li
109.225 342.955 109.26 343.098 109.287 343.231 cv
109.438 343.914 109.562 344.51 109.651 344.989 cv
109.784 345.69 109.855 346.117 109.855 346.135 cv
109.757 346.348 li
109.749 346.348 108.985 346.836 108.656 347.404 cv
108.328 347.981 109.003 349.98 109.535 351.597 cv
110.193 353.56 111.427 356.978 111.436 357.014 cv
111.427 357.183 li
111.285 357.289 li
111.276 357.298 110.441 357.493 109.837 358.363 cv
109.225 359.242 109.198 360.424 109.198 360.441 cv
109.163 360.557 li
109.163 360.565 109.083 360.672 108.976 360.867 cv
108.887 361.019 li
108.781 361.223 li
108.674 361.445 li
108.567 361.685 li
108.443 361.96 108.328 362.271 108.23 362.608 cv
108.167 362.848 li
108.124 362.999 108.097 363.15 108.062 363.31 cv
108.043 363.435 108.026 363.55 108.017 363.674 cv
107.999 363.789 107.99 363.896 107.981 364.02 cv
107.973 364.153 107.973 364.296 107.973 364.438 cv
107.999 365.45 108.186 365.965 108.479 366.382 cv
108.612 366.56 li
108.745 366.729 li
108.932 366.924 li
109.163 367.164 109.411 367.431 109.669 367.804 cv
110.086 368.416 110.627 369.882 111.312 371.729 cv
112.076 373.779 113.035 376.328 114.064 378.327 cv
115.832 381.755 li
116.844 383.718 117.99 385.938 119.064 388.024 cv
119.073 388.024 li
119.135 388.158 119.198 388.282 119.269 388.406 cv
119.65 389.143 120.023 389.863 120.37 390.546 cv
120.485 390.769 120.601 390.99 120.716 391.203 cv
121.054 391.853 121.365 392.456 121.648 393.007 cv
122.679 394.978 123.265 396.62 123.593 397.775 cv
123.665 397.988 123.718 398.192 123.762 398.37 cv
cp
.603922 .686275 .988235 rgb
f
86.5898 267.584 mo
86.4893 267.606 86.3882 267.557 86.3467 267.461 cv
86.2998 267.35 86.3511 267.225 86.4604 267.179 cv
86.873 267.004 96.6021 262.879 98.2632 262.617 cv
98.3809 262.599 98.4912 262.679 98.5083 262.795 cv
98.5269 262.91 98.4521 263.017 98.3296 263.038 cv
96.7363 263.29 86.7275 267.528 86.6265 267.572 cv
86.5898 267.584 li
cp
f
87.0747 269.167 mo
87.0513 269.17 li
87 269.176 82.0693 269.681 79.5894 270.179 cv
77.0908 270.681 64.3022 272.176 64.1738 272.191 cv
64.0566 272.203 63.9497 272.121 63.936 272.003 cv
63.9233 271.886 64.0068 271.78 64.125 271.766 cv
64.251 271.75 77.0239 270.262 79.5049 269.759 cv
82.0044 269.257 86.9595 268.749 87.0078 268.744 cv
87.125 268.731 87.2295 268.818 87.2407 268.936 cv
87.2524 269.045 87.1802 269.144 87.0747 269.167 cv
cp
f
82.9204 278.702 mo
82.8281 278.702 li
78.4795 277.738 70.0918 280.62 69.5835 280.942 cv
69.292 280.929 li
69.3081 280.62 li
69.6602 280.284 78.4429 277.291 82.9199 278.287 cv
83.0356 278.311 83.1074 278.425 83.083 278.54 cv
82.9204 278.702 li
cp
f
88.0864 285.508 mo
88.0771 285.509 li
88.0049 285.523 80.7773 286.806 76.1987 288.097 cv
71.145 289.521 70.0703 288.895 69.9082 288.755 cv
69.8853 288.453 li
70.1846 288.429 li
70.1943 288.438 71.1323 289.079 76.085 287.686 cv
80.6816 286.386 87.9287 285.101 88.0034 285.088 cv
88.1187 285.066 88.23 285.146 88.2495 285.262 cv
88.271 285.376 88.1973 285.482 88.0864 285.508 cv
cp
f
103.092 276.82 mo
103.108 276.968 103.124 277.121 103.146 277.275 cv
101.502 278.188 97.9844 280.131 95.7925 281.319 cv
94.668 281.937 93.7202 282.255 92.9751 282.421 cv
92.0996 282.616 91.5034 282.596 91.2168 282.587 cv
91.1001 282.585 li
91.0835 282.587 li
90.8418 282.509 li
90.77 282.41 90.7935 282.275 90.8872 282.207 cv
90.9673 282.15 91.0513 282.153 91.228 282.158 cv
91.3042 282.162 li
91.8647 282.179 93.3447 282.169 95.5859 280.945 cv
97.8467 279.712 101.521 277.683 103.092 276.82 cv
cp
f
90.9038 286.341 mo
90.8125 286.36 90.7144 286.319 90.6689 286.23 cv
90.6133 286.127 90.6528 285.996 90.7593 285.941 cv
90.7808 285.931 92.9048 284.813 94.4404 283.936 cv
96.0117 283.039 101.274 281.144 102.281 280.802 cv
102.391 280.764 102.516 280.826 102.552 280.938 cv
102.591 281.05 102.53 281.17 102.419 281.208 cv
101.416 281.544 96.1943 283.428 94.6533 284.309 cv
93.1108 285.189 90.9775 286.308 90.958 286.322 cv
90.9038 286.341 li
cp
f
88.7256 288.375 mo
88.6929 288.379 li
88.6206 288.384 81.3535 288.868 78.6846 289.464 cv
78.0273 289.609 77.2632 289.804 76.4521 290.013 cv
73.897 290.669 70.9966 291.414 69.814 291.011 cv
69.7021 290.973 69.6411 290.851 69.6792 290.739 cv
69.7178 290.628 69.8413 290.567 69.9526 290.605 cv
71.0127 290.966 73.9712 290.209 76.3452 289.599 cv
77.1597 289.39 77.9272 289.191 78.5908 289.044 cv
81.292 288.441 88.3657 287.972 88.6641 287.952 cv
88.7827 287.945 88.8862 288.034 88.894 288.153 cv
88.8994 288.261 88.8271 288.352 88.7256 288.375 cv
cp
f
98.3257 312.955 mo
98.3105 312.958 li
98.2368 312.97 90.8799 314.042 85.6816 314.429 cv
80.4829 314.819 76.4043 314.704 76.3628 314.701 cv
76.2456 314.698 76.1528 314.599 76.1563 314.479 cv
76.1597 314.361 76.2568 314.27 76.3765 314.274 cv
76.4175 314.274 80.4722 314.391 85.6523 314.004 cv
90.8315 313.617 98.1738 312.545 98.2471 312.534 cv
98.3633 312.516 98.4736 312.597 98.4912 312.716 cv
98.5068 312.828 98.4331 312.931 98.3257 312.955 cv
cp
f
102.29 312.471 mo
102.199 312.491 102.102 312.449 102.056 312.363 cv
101.999 312.26 102.038 312.129 102.142 312.073 cv
102.222 312.033 110.05 307.789 111.207 306.888 cv
111.301 306.814 111.434 306.833 111.509 306.926 cv
111.58 307.017 111.564 307.151 111.47 307.226 cv
110.286 308.146 102.669 312.275 102.344 312.45 cv
102.29 312.471 li
cp
f
103.957 315.222 mo
103.741 315.148 li
103.668 315.056 103.682 314.921 103.773 314.848 cv
104.09 314.595 111.489 308.684 112.917 308.075 cv
113.026 308.036 113.151 308.083 113.198 308.191 cv
113.245 308.3 113.191 308.426 113.083 308.472 cv
111.708 309.055 104.119 315.121 104.044 315.182 cv
103.957 315.222 li
cp
f
99.9712 316.053 mo
99.8936 316.164 99.7876 316.318 96.6641 317.015 cv
94.8579 317.417 92.0449 318 87.647 318.859 cv
83.3062 319.705 78.5767 320.922 76.5708 321.45 cv
76.5396 321.31 76.5137 321.172 76.4863 321.033 cv
78.5112 320.497 83.231 319.286 87.5635 318.439 cv
97.5884 316.484 99.4326 315.937 99.6396 315.785 cv
99.7065 315.688 99.8252 315.675 99.9238 315.741 cv
100.021 315.806 100.035 315.953 99.9712 316.053 cv
cp
f
92.876 323.847 mo
91.8442 324.076 90.8691 324.164 89.6416 324.273 cv
88.8833 324.343 li
86.874 324.531 80.5615 324.936 80.1729 324.692 cv
80.0723 324.629 80.043 324.499 80.1055 324.398 cv
80.1626 324.307 80.2803 324.27 80.3774 324.316 cv
80.8315 324.432 85.9434 324.189 88.8428 323.916 cv
89.605 323.849 li
91.9063 323.643 93.2969 323.516 95.9155 322.342 cv
98.8042 321.049 105.598 320.144 106.822 320.313 cv
106.938 320.327 107.02 320.436 107.005 320.554 cv
106.99 320.669 106.881 320.752 106.765 320.735 cv
105.728 320.594 99.0649 321.399 96.0913 322.733 cv
94.8105 323.306 93.8198 323.636 92.876 323.847 cv
cp
f
116.495 315.003 mo
116.52 315.167 116.55 315.318 116.574 315.457 cv
115.67 316.054 114.288 316.933 112.624 317.984 cv
111.04 318.986 109.396 320.021 109.252 320.161 cv
109.149 320.216 li
108.95 320.156 li
108.949 319.86 li
109.083 319.716 110.1 319.068 112.392 317.622 cv
113.819 316.722 115.479 315.671 116.495 315.003 cv
cp
f
117.968 338.554 mo
115.219 340.032 109.925 342.887 109.282 343.231 cv
109.22 343.268 li
109.126 343.303 li
109.064 343.317 108.981 343.32 108.861 343.316 cv
108.726 343.313 108.54 343.299 108.28 343.279 cv
107.475 343.217 106.262 343.124 104.921 343.287 cv
104.168 343.375 li
101.632 343.669 96.3535 344.285 94.1924 345.105 cv
91.7451 346.03 85.3955 346.78 84.0933 346.541 cv
83.9746 346.524 83.8955 346.41 83.9194 346.296 cv
83.9414 346.176 84.0503 346.104 84.166 346.122 cv
85.2749 346.324 91.5601 345.647 94.043 344.704 cv
96.2515 343.866 101.565 343.247 104.118 342.948 cv
104.869 342.861 li
106.252 342.691 107.54 342.796 108.312 342.856 cv
108.469 342.866 108.63 342.882 108.762 342.888 cv
108.894 342.892 108.997 342.896 109.033 342.884 cv
109.183 342.803 li
110.106 342.302 115.097 339.612 117.751 338.181 cv
117.824 338.305 117.896 338.43 117.968 338.554 cv
cp
f
109.427 356.845 mo
109.457 356.962 109.391 357.079 109.275 357.107 cv
109.208 357.123 104.902 358.23 100.924 359.118 cv
98.9146 359.565 96.9922 359.962 95.7402 360.126 cv
93.2183 360.46 89.6572 360.735 87.4087 360.908 cv
87.248 360.774 87.0923 360.648 86.9326 360.52 cv
87.1353 360.5 li
89.356 360.33 93.0776 360.045 95.6807 359.7 cv
99.3911 359.21 109.07 356.72 109.167 356.692 cv
109.275 356.66 109.398 356.733 109.427 356.845 cv
cp
f
110.088 362.908 mo
108.87 363.18 108.013 363.32 107.916 363.339 cv
107.8 363.356 107.69 363.276 107.671 363.16 cv
107.652 363.042 107.727 362.928 107.849 362.913 cv
107.917 362.903 114.917 361.751 118.181 359.429 cv
118.275 359.359 118.41 359.384 118.479 359.477 cv
118.547 359.574 118.525 359.709 118.428 359.778 cv
116.217 361.354 112.461 362.379 110.088 362.908 cv
cp
f
108.465 366.867 mo
108.23 366.765 li
108.171 366.662 108.209 366.531 108.311 366.474 cv
111.276 364.778 118.298 363.186 118.367 363.17 cv
118.483 363.144 118.599 363.217 118.625 363.333 cv
118.651 363.447 118.577 363.561 118.46 363.587 cv
118.393 363.603 111.386 365.209 108.522 366.845 cv
108.465 366.867 li
cp
f
110.102 369.736 mo
110.103 369.739 li
110.104 369.744 li
110.063 369.866 li
109.938 369.948 li
109.767 369.912 li
108.694 369.123 105.429 369.054 101.99 369.746 cv
99.355 370.277 95.0322 370.451 93.0654 370.502 cv
93.0566 370.361 93.0464 370.217 93.0415 370.08 cv
94.9819 370.025 99.2959 369.855 101.906 369.325 cv
105.507 368.598 108.846 368.696 110.017 369.566 cv
110.041 369.592 li
110.102 369.736 li
cp
f
129.064 383.043 mo
128.487 383.699 121.418 387.314 119.269 388.406 cv
119.109 388.486 118.984 388.548 118.887 388.593 cv
118.745 388.663 li
118.691 388.682 li
118.683 388.69 li
118.629 388.699 113.354 389.578 107.235 390.946 cv
104.837 391.479 102.2 391.977 99.8472 392.367 cv
99.6606 392.27 99.4829 392.154 99.314 392.029 cv
101.774 391.621 104.598 391.097 107.146 390.529 cv
113.025 389.214 118.123 388.353 118.576 388.273 cv
118.691 388.22 li
118.816 388.158 118.94 388.096 119.064 388.024 cv
119.073 388.024 li
122.918 386.08 128.318 383.246 128.744 382.75 cv
129.046 382.731 li
129.064 383.043 li
cp
f
407.966 280.934 mo
407.949 281.058 407.922 281.183 407.904 281.325 cv
407.105 285.897 404.104 297.416 402.834 300.676 cv
401.573 303.925 402.611 304.662 401.963 306.386 cv
401.315 308.107 397.372 310.089 396.688 310.755 cv
396.058 311.385 397.212 311.509 397.763 312.486 cv
397.843 312.654 li
397.939 312.895 li
398.34 313.934 398.34 315.097 397.531 320.923 cv
397.079 324.227 396.218 329.173 395.462 333.23 cv
395.445 333.355 395.418 333.479 395.4 333.596 cv
394.752 337.059 394.211 339.803 394.104 340.203 cv
393.882 341.072 392.621 341.757 392.39 342.671 cv
392.15 343.595 391.84 344.989 391.572 345.478 cv
391.307 345.967 392.692 346.943 393.687 347.324 cv
394.229 347.538 394.121 350.131 393.695 353.701 cv
393.678 353.825 393.66 353.959 393.642 354.092 cv
393.277 356.961 392.728 360.415 392.142 363.728 cv
390.773 371.382 390.641 372.883 388.944 374.544 cv
387.932 375.538 387.497 376.826 387.337 378.31 cv
385.862 379.269 384.291 380.165 382.621 381.026 cv
380.499 382.119 378.412 383.167 376.36 384.152 cv
376.165 384.25 375.97 384.348 375.774 384.437 cv
373.377 385.601 371.023 386.684 368.688 387.705 cv
368.75 387.119 368.812 386.621 368.856 386.195 cv
369.088 384.232 369.141 383.814 369.008 382.714 cv
368.954 382.261 368.919 381.64 368.874 380.991 cv
368.768 379.18 368.679 377.971 368.395 377.59 cv
368.199 377.314 367.889 377.234 367.631 377.181 cv
367.463 377.137 367.302 377.102 367.24 377.021 cv
367.214 376.959 367.214 376.853 367.249 376.701 cv
367.444 375.956 368.199 373.673 368.457 372.892 cv
368.679 373.061 369.025 373.256 369.3 373.176 cv
369.407 373.132 369.558 373.043 369.62 372.785 cv
369.683 372.51 369.789 371.693 369.922 370.663 cv
370.136 369.091 370.393 367.128 370.562 366.587 cv
370.73 366.054 370.18 365.343 369.603 364.58 cv
369.078 363.904 368.493 363.142 368.688 362.794 cv
368.795 362.617 368.91 362.43 369.034 362.235 cv
369.531 361.445 370.082 360.548 370.118 359.828 cv
370.136 359.429 369.922 358.896 369.7 358.337 cv
369.434 357.652 369.132 356.871 369.221 356.285 cv
369.3 355.752 369.629 355.566 369.94 355.388 cv
370.215 355.229 370.526 355.042 370.526 354.643 cv
370.526 354.376 370.606 354.35 370.818 354.278 cv
370.987 354.216 371.201 354.146 371.379 353.932 cv
371.592 353.675 371.646 352.973 371.716 351.845 cv
371.761 351.09 371.805 350.309 371.938 349.829 cv
372.063 349.341 372.293 348.941 372.489 348.595 cv
372.755 348.133 372.986 347.742 372.941 347.289 cv
372.915 347.031 372.72 346.384 372.479 345.566 cv
372.418 345.371 372.355 345.167 372.284 344.945 cv
372.249 344.838 372.222 344.723 372.187 344.616 cv
372.16 344.501 li
372 343.977 371.849 343.426 371.733 342.92 cv
371.698 342.796 371.672 342.671 371.646 342.547 cv
371.637 342.503 li
371.609 342.36 371.583 342.227 371.565 342.103 cv
371.503 341.738 371.484 341.437 371.521 341.25 cv
371.583 340.957 371.84 340.603 372.169 340.238 cv
372.258 340.141 372.355 340.042 372.453 339.945 cv
372.462 339.945 li
372.711 339.696 li
372.809 339.599 li
372.969 339.457 373.119 339.314 373.271 339.181 cv
373.945 338.56 374.326 338.196 374.381 337.92 cv
374.442 337.564 374.096 337.051 373.696 336.464 cv
373.43 336.064 373.021 335.478 373.065 335.291 cv
373.155 335.168 373.883 335.052 374.362 334.981 cv
375.411 334.82 376.591 334.634 376.902 334.004 cv
377.399 332.991 378.723 325.515 378.58 321.411 cv
378.483 318.667 377.941 317.629 377.586 316.944 cv
377.418 316.615 377.293 316.385 377.284 316.083 cv
377.275 315.763 377.293 315.506 377.311 315.274 cv
377.347 314.786 377.363 314.431 377.026 314.022 cv
376.92 313.89 376.796 313.783 376.672 313.677 cv
376.28 313.33 375.996 313.081 376.316 312.38 cv
376.369 312.265 376.432 312.158 376.512 312.051 cv
376.538 312.007 li
376.636 311.9 li
376.769 311.767 li
376.858 311.678 li
376.92 311.634 li
376.965 311.589 li
377.08 311.509 li
377.187 311.43 377.302 311.358 377.426 311.287 cv
377.55 311.216 li
377.56 311.216 li
377.746 311.128 li
377.861 311.065 377.985 311.012 378.11 310.968 cv
378.119 310.968 li
378.402 310.853 378.688 310.764 378.953 310.692 cv
379.167 310.64 379.362 310.675 379.549 310.71 cv
379.78 310.755 380.028 310.799 380.25 310.64 cv
380.33 310.568 li
380.339 310.568 li
380.384 310.515 li
380.49 310.346 li
380.553 310.213 li
380.562 310.195 li
380.587 310.098 li
380.623 309.982 li
380.658 309.84 380.694 309.68 380.721 309.494 cv
380.942 308.037 381.84 301.82 381.822 300.231 cv
381.804 299.032 381.875 298.233 381.911 297.958 cv
382.399 297.754 383.848 297.105 384.016 296.581 cv
384.051 296.466 384.042 296.359 383.979 296.253 cv
383.855 296.066 383.527 295.711 383.11 295.276 cv
382.612 294.734 381.663 293.722 381.663 293.49 cv
381.688 293.357 381.866 293.251 382.098 293.117 cv
382.382 292.949 382.728 292.744 383.004 292.354 cv
383.074 292.256 383.163 292.133 383.278 291.999 cv
383.447 291.795 li
383.509 291.714 li
383.67 291.527 li
383.74 291.448 li
383.972 291.19 li
384.166 290.969 li
384.397 290.702 li
384.478 290.622 li
384.61 290.472 li
384.735 290.338 li
384.779 290.285 li
384.903 290.151 384.983 290.063 384.983 290.063 cv
385.027 289.956 li
385.027 289.947 li
385.037 289.938 li
385.027 289.886 li
385.002 289.841 li
384.975 289.797 li
384.291 289.131 383.563 288.251 383.563 287.994 cv
383.563 287.94 383.599 287.843 383.661 287.709 cv
383.74 287.55 li
383.767 287.487 li
383.873 287.292 li
383.944 287.15 384.024 287.008 384.113 286.865 cv
384.193 286.715 384.281 286.563 384.371 286.404 cv
384.442 286.279 384.514 286.155 384.584 286.04 cv
384.654 285.925 384.726 285.801 384.797 285.676 cv
384.922 285.462 385.046 285.25 385.161 285.036 cv
385.215 284.93 li
385.356 284.681 li
385.472 284.459 385.588 284.246 385.693 284.042 cv
385.783 283.873 li
385.836 283.758 385.89 283.65 385.925 283.554 cv
385.97 283.447 386.014 283.349 386.049 283.261 cv
386.6 281.849 387.701 279.947 387.94 279.708 cv
388.136 279.69 388.944 279.752 389.602 279.797 cv
389.877 279.814 390.125 279.832 390.348 279.841 cv
390.445 279.851 390.543 279.851 390.623 279.859 cv
390.667 279.859 li
390.898 279.868 li
391.129 279.876 li
391.155 279.876 li
391.227 279.886 li
391.254 279.895 li
391.254 279.886 li
391.262 279.886 li
391.262 279.895 li
391.271 279.886 li
391.333 279.886 li
391.484 279.895 li
391.653 279.895 li
391.893 279.895 392.017 279.886 392.098 279.859 cv
392.159 279.823 li
392.194 279.797 li
392.274 279.69 li
392.408 279.495 392.665 279.06 392.888 278.669 cv
393.021 278.447 li
393.118 278.278 li
393.181 278.154 li
393.216 278.101 li
393.252 278.048 li
393.34 277.888 li
393.34 277.71 li
392.914 276.84 392.487 275.774 392.559 275.553 cv
392.559 275.525 li
392.586 275.49 li
392.656 275.356 392.834 275.126 393.082 274.833 cv
393.261 274.619 li
393.385 274.478 393.526 274.317 393.669 274.158 cv
393.775 274.043 393.882 273.927 393.979 273.812 cv
394.086 273.695 394.192 273.59 394.308 273.474 cv
394.415 273.358 394.521 273.243 394.619 273.137 cv
394.663 272.95 li
394.53 272.826 li
394.521 272.826 393.819 272.648 393.687 272.223 cv
393.669 272.16 393.651 272.053 393.651 271.911 cv
393.642 271.831 li
393.642 271.68 li
393.633 271.378 393.642 270.987 393.651 270.597 cv
393.651 270.481 393.66 270.365 393.66 270.25 cv
393.66 270.206 li
393.678 269.558 393.695 269.043 393.678 268.679 cv
393.669 268.474 li
393.651 268.314 li
393.651 268.306 li
393.642 268.226 li
393.633 268.19 li
393.598 268.101 li
393.474 267.826 393.101 267.799 392.621 267.764 cv
392.088 267.729 391.422 267.684 390.836 267.293 cv
390.632 267.16 390.454 267.054 390.294 266.964 cv
389.637 266.574 389.521 266.512 390.037 265.286 cv
390.1 265.1 li
390.134 264.976 li
390.179 264.807 390.215 264.62 390.24 264.416 cv
390.25 264.381 li
390.268 264.22 li
390.276 264.088 li
390.286 264.061 li
390.276 264.033 li
390.276 264.017 li
390.286 263.855 li
390.294 263.768 li
390.303 263.644 390.303 263.519 390.312 263.403 cv
390.303 263.279 390.312 263.155 390.303 263.021 cv
390.303 262.853 390.303 262.693 390.294 262.515 cv
390.286 262.408 390.286 262.302 390.268 262.187 cv
390.25 261.902 390.231 261.618 390.196 261.325 cv
390.188 261.191 li
390.17 261.051 390.152 260.899 390.134 260.748 cv
390.116 260.65 li
389.975 259.496 389.743 258.368 389.495 257.516 cv
402.239 259.47 li
406.217 268.545 li
406.288 268.714 li
406.164 268.937 li
405.72 269.771 405.355 270.677 405.071 271.511 cv
405.019 271.636 404.982 271.76 404.947 271.884 cv
404.618 272.896 404.414 273.776 404.309 274.256 cv
404.254 274.486 404.228 274.629 404.228 274.629 cv
404.281 274.638 li
405.729 274.859 li
405.312 277.576 401.244 279.726 401.617 280.454 cv
401.866 280.951 401.527 281.457 401.297 281.715 cv
401.19 281.839 401.102 281.91 401.102 281.91 cv
401.102 281.91 401.52 281.973 402.114 282.061 cv
404.378 282.417 li
405.88 282.639 407.957 280.951 407.957 280.951 cv
407.966 280.934 li
cp
.835294 .862745 1 rgb
f
394.14 273.092 mo
393.979 273.27 393.749 273.509 393.518 273.767 cv
393.438 273.847 li
393.358 273.936 li
393.198 274.113 li
392.896 274.451 392.611 274.806 392.416 275.073 cv
392.328 275.197 li
392.266 275.304 li
392.248 275.33 li
392.23 275.356 li
392.194 275.445 li
392.177 275.588 li
392.177 275.668 li
392.177 275.677 li
392.203 275.818 li
392.248 276.066 392.354 276.387 392.479 276.707 cv
392.576 276.929 li
392.611 277.018 li
392.647 277.124 li
392.665 277.142 li
392.745 277.319 li
392.825 277.506 392.904 277.666 392.967 277.79 cv
392.541 278.527 392.07 279.317 391.937 279.504 cv
391.884 279.513 li
391.805 279.513 li
391.68 279.521 391.511 279.521 391.324 279.513 cv
391.279 279.513 li
391.271 279.504 li
391.076 279.504 li
390.987 279.495 li
390.552 279.478 390.037 279.442 389.628 279.415 cv
388.171 279.317 387.896 279.309 387.781 279.362 cv
387.772 279.371 li
387.763 279.371 li
387.728 279.396 li
387.647 279.486 li
387.595 279.539 li
387.435 279.744 387.203 280.108 386.955 280.552 cv
386.857 280.729 386.751 280.925 386.645 281.12 cv
386.458 281.466 386.271 281.83 386.111 282.178 cv
386.049 282.318 385.979 282.461 385.916 282.604 cv
385.827 282.789 385.756 282.967 385.693 283.127 cv
385.623 283.305 385.534 283.5 385.437 283.713 cv
385.366 283.864 385.285 284.015 385.196 284.176 cv
385.108 284.353 385.002 284.539 384.895 284.726 cv
384.895 284.734 li
384.877 284.752 li
384.815 284.877 384.744 285.001 384.673 285.125 cv
384.539 285.365 384.397 285.604 384.256 285.845 cv
384.122 286.075 li
384.051 286.19 383.988 286.307 383.936 286.404 cv
383.873 286.501 383.82 286.591 383.776 286.679 cv
383.67 286.856 383.59 287.017 383.509 287.158 cv
383.465 287.238 li
383.412 287.363 li
383.322 287.541 li
383.261 287.665 383.226 287.763 383.207 287.843 cv
383.189 287.923 li
383.182 287.976 li
383.172 288.474 384.131 289.485 384.584 289.938 cv
384.584 289.947 li
384.566 289.956 li
384.549 289.974 li
384.549 289.983 li
384.53 289.992 li
384.486 290.045 li
384.415 290.125 li
384.185 290.373 li
384.024 290.552 383.838 290.755 383.651 290.969 cv
383.412 291.244 li
383.376 291.288 li
383.234 291.448 li
383.11 291.607 li
382.977 291.768 li
382.905 291.865 382.834 291.946 382.781 292.025 cv
382.692 292.141 li
382.47 292.461 382.168 292.638 381.902 292.789 cv
381.627 292.958 381.369 293.108 381.289 293.394 cv
381.209 293.739 381.716 294.334 382.843 295.533 cv
383.207 295.924 383.554 296.297 383.651 296.447 cv
383.651 296.652 382.71 297.229 381.671 297.647 cv
381.556 297.798 li
381.547 297.834 381.423 298.703 381.44 300.249 cv
381.458 301.803 380.57 307.992 380.348 309.432 cv
380.276 309.938 380.161 310.239 380.037 310.338 cv
379.948 310.391 379.824 310.382 379.61 310.338 cv
379.407 310.292 379.14 310.248 378.856 310.328 cv
378.741 310.354 378.625 310.391 378.501 310.426 cv
378.332 310.488 li
378.146 310.55 li
377.994 310.612 li
377.879 310.648 377.772 310.701 377.657 310.755 cv
377.506 310.826 li
377.488 310.834 li
377.462 310.843 li
377.418 310.87 li
377.319 310.914 377.231 310.958 377.151 311.012 cv
377.054 311.065 376.965 311.128 376.875 311.19 cv
376.76 311.278 li
376.565 311.438 li
376.423 311.58 li
376.228 311.803 li
376.174 311.873 li
376.165 311.892 li
376.121 311.953 li
376.05 312.068 li
375.97 312.229 li
375.535 313.179 376.031 313.614 376.423 313.961 cv
376.538 314.066 376.645 314.156 376.733 314.263 cv
376.982 314.556 376.965 314.786 376.93 315.248 cv
376.911 315.47 376.894 315.754 376.902 316.101 cv
376.92 316.491 377.062 316.767 377.248 317.122 cv
377.373 317.361 377.524 317.654 377.675 318.063 cv
377.72 318.224 li
377.772 318.383 377.826 318.561 377.879 318.756 cv
377.923 318.961 377.968 319.173 378.013 319.413 cv
378.048 319.671 li
378.084 319.938 li
378.101 320.053 li
378.128 320.266 li
378.137 320.408 378.154 320.559 378.163 320.719 cv
378.163 320.727 li
378.172 320.834 378.181 320.94 378.181 321.056 cv
378.19 321.171 378.199 321.296 378.199 321.42 cv
378.341 325.381 377.035 332.876 376.565 333.844 cv
376.343 334.288 375.171 334.475 374.31 334.608 cv
373.323 334.759 372.8 334.856 372.701 335.185 cv
372.613 335.549 372.969 336.073 373.386 336.677 cv
373.66 337.086 374.043 337.646 374.008 337.849 cv
373.98 338.019 373.438 338.507 373.013 338.896 cv
372.213 339.634 371.298 340.469 371.147 341.171 cv
371.13 341.25 371.121 341.339 371.121 341.445 cv
371.13 341.659 li
371.147 341.863 li
371.166 341.996 371.183 342.139 371.21 342.298 cv
371.236 342.449 371.272 342.609 371.308 342.777 cv
371.308 342.787 li
371.325 342.84 li
371.396 343.186 371.494 343.559 371.601 343.941 cv
371.733 344.395 li
371.77 344.527 li
371.813 344.669 371.849 344.812 371.895 344.953 cv
371.964 345.202 372.035 345.441 372.106 345.673 cv
372.338 346.445 372.542 347.103 372.561 347.324 cv
372.595 347.653 372.399 347.981 372.169 348.408 cv
371.956 348.771 371.716 349.198 371.565 349.723 cv
371.423 350.246 371.379 351.046 371.334 351.827 cv
371.29 352.573 371.236 353.506 371.086 353.691 cv
370.979 353.825 370.837 353.869 370.703 353.914 cv
370.473 353.993 370.152 354.101 370.144 354.634 cv
370.144 354.812 370.037 354.892 369.744 355.06 cv
369.416 355.256 368.954 355.521 368.848 356.232 cv
368.741 356.915 369.069 357.742 369.354 358.47 cv
369.558 359.003 369.754 359.491 369.735 359.819 cv
369.718 360.432 369.185 361.285 368.715 362.04 cv
368.59 362.235 368.475 362.422 368.368 362.6 cv
368.03 363.177 368.644 363.967 369.3 364.811 cv
369.779 365.433 370.313 366.125 370.206 366.472 cv
370.02 367.048 369.763 369.021 369.549 370.61 cv
369.416 371.595 369.31 372.439 369.247 372.696 cv
369.185 372.812 li
369.061 372.856 368.715 372.643 368.493 372.439 cv
368.314 372.395 li
368.182 372.519 li
368.137 372.643 367.115 375.689 366.885 376.613 cv
366.813 376.861 366.832 377.065 366.92 377.217 cv
367.054 377.43 367.302 377.492 367.542 377.545 cv
367.765 377.599 367.978 377.652 368.102 377.812 cv
368.332 378.132 368.431 379.801 368.501 381.009 cv
368.537 381.675 368.572 382.296 368.634 382.759 cv
368.75 383.814 368.705 384.223 368.483 386.151 cv
368.466 386.275 368.457 386.399 368.438 386.523 cv
368.431 386.64 368.412 386.764 368.403 386.888 cv
368.395 386.941 li
368.377 387.119 368.351 387.322 368.332 387.527 cv
368.323 387.643 368.307 387.758 368.297 387.882 cv
364.256 389.641 360.287 391.203 356.299 392.59 cv
356.415 389.329 356.708 381.497 357.063 376.275 cv
357.17 374.677 357.329 372.572 357.533 370.236 cv
357.543 370.112 357.552 369.979 357.561 369.854 cv
358.19 362.36 359.114 352.688 359.496 349.723 cv
359.674 348.319 359.78 347.387 359.834 346.721 cv
359.843 346.562 359.852 346.428 359.852 346.304 cv
359.878 345.433 359.771 345.068 359.567 344.43 cv
359.55 344.358 li
359.514 344.271 359.496 344.154 359.479 344.021 cv
359.204 342.245 359.55 336.481 360.66 332.698 cv
361.61 329.475 362.516 328.054 362.854 327.601 cv
362.951 327.485 362.995 327.433 362.995 327.433 cv
362.995 327.433 362.915 327.299 362.773 327.096 cv
362.773 327.086 li
362.498 326.651 362.036 325.843 361.814 325.158 cv
361.485 324.155 361.894 320.86 362.897 314.929 cv
362.933 314.76 li
362.951 314.636 362.969 314.511 362.995 314.387 cv
364.114 308.082 367.587 293.216 368.67 291.607 cv
369.779 289.965 373.377 285.906 373.482 285.16 cv
373.501 285.072 373.51 284.912 373.501 284.699 cv
373.501 284.584 373.492 284.459 373.492 284.316 cv
373.421 282.479 373.065 278.42 373.164 277.258 cv
373.199 277.009 li
373.234 276.885 373.279 276.76 373.323 276.645 cv
373.856 275.454 375.411 274.433 375.411 274.433 cv
375.411 274.433 375.233 273.306 375.002 271.68 cv
374.984 271.538 374.957 271.387 374.939 271.245 cv
374.886 270.863 374.833 270.481 374.78 270.072 cv
374.753 269.921 374.735 269.771 374.709 269.611 cv
374.549 268.395 374.381 267.08 374.238 265.828 cv
374.043 264.043 373.759 261.707 373.51 259.647 cv
373.492 259.505 373.475 259.371 373.457 259.229 cv
373.457 259.221 li
373.342 258.297 373.234 257.444 373.146 256.752 cv
373.137 256.601 373.11 256.459 373.093 256.326 cv
372.994 255.5 372.924 254.984 372.924 254.984 cv
374.566 256.894 li
375.091 257.498 li
375.206 257.631 li
375.197 257.542 li
375.162 257.115 li
374.984 255.305 li
389.086 257.453 li
389.131 257.604 389.185 257.765 389.229 257.942 cv
389.246 258.03 389.272 258.129 389.3 258.226 cv
389.335 258.377 389.379 258.546 389.406 258.705 cv
389.434 258.804 389.45 258.91 389.478 259.007 cv
389.486 259.069 li
389.521 259.292 li
389.558 259.442 389.584 259.603 389.61 259.771 cv
389.619 259.807 li
389.673 260.117 389.717 260.429 389.752 260.739 cv
389.752 260.757 li
389.788 260.996 li
389.806 261.157 389.823 261.316 389.842 261.468 cv
389.842 261.503 li
389.859 261.752 li
389.867 261.857 li
389.877 261.876 li
389.895 262.08 li
389.895 262.15 li
389.912 262.329 389.912 262.498 389.922 262.666 cv
389.93 262.835 389.93 263.003 389.93 263.164 cv
389.93 263.386 389.93 263.607 389.912 263.803 cv
389.912 263.918 389.903 264.017 389.895 264.123 cv
389.895 264.176 li
389.859 264.434 li
389.823 264.664 li
389.779 264.815 li
389.752 264.932 389.726 265.037 389.682 265.135 cv
389.069 266.591 389.317 266.822 390.107 267.284 cv
390.259 267.373 390.427 267.479 390.623 267.612 cv
391.289 268.057 392.044 268.109 392.603 268.146 cv
392.86 268.163 393.225 268.181 393.261 268.262 cv
393.277 268.358 li
393.287 268.386 li
393.287 268.438 li
393.296 268.448 li
393.296 268.483 li
393.287 268.492 li
393.287 268.501 li
393.296 268.501 li
393.296 268.51 li
393.305 268.679 li
393.313 268.759 393.313 268.865 393.305 268.972 cv
393.305 269.54 li
393.296 269.655 393.296 269.78 393.296 269.896 cv
393.296 270.02 393.287 270.135 393.287 270.241 cv
393.277 270.33 li
393.277 270.428 li
393.277 270.614 393.269 270.783 393.269 270.935 cv
393.261 271.103 li
393.261 271.787 li
393.269 271.911 li
393.277 272.026 393.277 272.124 393.296 272.204 cv
393.331 272.346 li
393.446 272.746 393.855 272.977 394.14 273.092 cv
cp
.721569 .780392 1 rgb
f
394.619 273.137 mo
394.521 273.243 394.415 273.358 394.308 273.474 cv
394.201 273.58 394.096 273.695 393.989 273.812 cv
393.979 273.812 li
393.882 273.927 393.775 274.043 393.669 274.158 cv
393.526 274.317 393.385 274.478 393.261 274.619 cv
393.082 274.833 li
392.834 275.126 392.656 275.356 392.586 275.49 cv
392.559 275.553 li
392.487 275.774 392.914 276.84 393.34 277.71 cv
393.34 277.888 li
393.252 278.048 li
393.216 278.101 li
393.118 278.278 li
393.021 278.447 li
392.888 278.669 li
392.665 279.06 392.408 279.495 392.274 279.69 cv
392.194 279.797 li
392.159 279.823 li
392.098 279.859 li
392.017 279.886 391.893 279.895 391.653 279.895 cv
391.564 279.895 391.457 279.895 391.333 279.886 cv
391.227 279.886 li
391.129 279.876 li
390.898 279.868 li
390.667 279.859 li
390.623 279.859 li
390.543 279.851 390.445 279.851 390.348 279.841 cv
390.125 279.832 389.877 279.814 389.602 279.797 cv
388.944 279.752 388.136 279.69 387.94 279.708 cv
387.701 279.947 386.6 281.849 386.049 283.261 cv
386.014 283.349 385.97 283.447 385.925 283.554 cv
385.862 283.704 385.783 283.864 385.693 284.042 cv
385.588 284.246 385.472 284.459 385.356 284.681 cv
385.215 284.93 li
385.152 285.036 li
385.037 285.25 384.912 285.462 384.797 285.676 cv
384.726 285.801 384.654 285.925 384.584 286.04 cv
384.514 286.155 384.442 286.279 384.371 286.404 cv
384.281 286.563 384.193 286.715 384.113 286.865 cv
384.024 287.017 383.944 287.158 383.873 287.292 cv
383.767 287.487 li
383.74 287.55 li
383.661 287.709 li
383.599 287.843 383.563 287.94 383.563 287.994 cv
383.563 288.251 384.291 289.131 384.975 289.797 cv
385.002 289.841 li
385.027 289.886 li
385.037 289.938 li
385.037 289.956 li
385.027 289.956 li
384.983 290.063 li
384.983 290.063 384.903 290.151 384.779 290.285 cv
384.735 290.338 li
384.61 290.472 li
384.478 290.622 li
384.38 290.729 384.273 290.845 384.166 290.969 cv
383.972 291.19 li
383.74 291.448 li
383.67 291.527 li
383.509 291.714 li
383.447 291.795 li
383.278 291.999 li
383.163 292.133 383.074 292.256 383.004 292.354 cv
382.728 292.744 382.382 292.949 382.098 293.117 cv
381.866 293.251 381.688 293.357 381.663 293.49 cv
381.663 293.722 382.612 294.734 383.11 295.276 cv
383.527 295.711 383.855 296.066 383.979 296.253 cv
384.042 296.359 384.051 296.466 384.016 296.581 cv
383.848 297.105 382.399 297.754 381.911 297.958 cv
381.875 298.233 381.804 299.032 381.822 300.231 cv
381.84 301.82 380.942 308.037 380.721 309.494 cv
380.694 309.68 380.658 309.84 380.623 309.982 cv
380.587 310.098 li
380.553 310.213 li
380.49 310.346 li
380.384 310.515 li
380.33 310.568 li
380.25 310.64 li
380.028 310.799 379.78 310.755 379.549 310.71 cv
379.362 310.675 379.167 310.64 378.953 310.692 cv
378.688 310.764 378.412 310.853 378.128 310.968 cv
378.11 310.968 li
377.985 311.012 377.861 311.065 377.746 311.128 cv
377.568 311.216 li
377.55 311.216 li
377.426 311.287 li
377.302 311.358 377.187 311.43 377.08 311.509 cv
376.92 311.634 li
376.769 311.767 li
376.636 311.9 li
376.521 312.033 li
376.512 312.051 li
376.432 312.158 376.369 312.265 376.316 312.38 cv
375.996 313.081 376.28 313.33 376.672 313.677 cv
376.796 313.783 376.92 313.89 377.026 314.022 cv
377.363 314.431 377.347 314.786 377.311 315.274 cv
377.293 315.506 377.275 315.763 377.284 316.083 cv
377.293 316.385 377.418 316.615 377.586 316.944 cv
377.941 317.629 378.483 318.667 378.58 321.411 cv
378.723 325.515 377.399 332.991 376.902 334.004 cv
376.591 334.634 375.411 334.82 374.362 334.981 cv
373.883 335.052 373.155 335.168 373.065 335.291 cv
373.021 335.478 373.43 336.064 373.696 336.464 cv
374.096 337.051 374.442 337.564 374.381 337.92 cv
374.326 338.196 373.945 338.56 373.271 339.181 cv
373.084 339.351 372.897 339.519 372.711 339.696 cv
372.462 339.945 li
372.453 339.945 li
372.355 340.042 372.258 340.141 372.169 340.238 cv
371.84 340.603 371.583 340.957 371.521 341.25 cv
371.484 341.437 371.503 341.738 371.565 342.103 cv
371.583 342.227 371.609 342.36 371.637 342.503 cv
371.646 342.547 li
371.672 342.671 371.698 342.796 371.733 342.92 cv
371.849 343.426 372 343.977 372.16 344.501 cv
372.204 344.651 372.249 344.803 372.284 344.945 cv
372.355 345.167 372.418 345.371 372.479 345.566 cv
372.72 346.384 372.915 347.031 372.941 347.289 cv
372.986 347.742 372.755 348.133 372.489 348.595 cv
372.293 348.941 372.063 349.341 371.938 349.829 cv
371.805 350.309 371.761 351.09 371.716 351.845 cv
371.646 352.973 371.592 353.675 371.379 353.932 cv
371.201 354.146 370.987 354.216 370.818 354.278 cv
370.606 354.35 370.526 354.376 370.526 354.643 cv
370.526 355.042 370.215 355.229 369.94 355.388 cv
369.629 355.566 369.3 355.752 369.221 356.285 cv
369.132 356.871 369.434 357.652 369.7 358.337 cv
369.922 358.896 370.136 359.429 370.118 359.828 cv
370.082 360.548 369.531 361.445 369.034 362.235 cv
368.91 362.43 368.795 362.617 368.688 362.794 cv
368.493 363.142 369.078 363.904 369.603 364.58 cv
370.18 365.343 370.73 366.054 370.562 366.587 cv
370.393 367.128 370.136 369.091 369.922 370.663 cv
369.789 371.693 369.683 372.51 369.62 372.785 cv
369.558 373.043 369.407 373.132 369.3 373.176 cv
369.025 373.256 368.679 373.061 368.457 372.892 cv
368.199 373.673 367.444 375.956 367.249 376.701 cv
367.214 376.853 367.214 376.959 367.24 377.021 cv
367.302 377.102 367.463 377.137 367.631 377.181 cv
367.889 377.234 368.199 377.314 368.395 377.59 cv
368.679 377.971 368.768 379.18 368.874 380.991 cv
368.919 381.64 368.954 382.261 369.008 382.714 cv
369.141 383.814 369.088 384.232 368.856 386.195 cv
368.812 386.621 368.75 387.119 368.688 387.705 cv
368.555 387.767 368.422 387.82 368.297 387.882 cv
368.307 387.758 368.323 387.643 368.332 387.527 cv
368.359 387.322 368.377 387.128 368.395 386.941 cv
368.403 386.888 li
368.412 386.764 368.431 386.64 368.438 386.523 cv
368.457 386.399 368.466 386.275 368.483 386.151 cv
368.705 384.223 368.75 383.814 368.634 382.759 cv
368.572 382.296 368.537 381.675 368.501 381.009 cv
368.431 379.801 368.332 378.132 368.102 377.812 cv
367.978 377.652 367.765 377.599 367.542 377.545 cv
367.302 377.492 367.054 377.43 366.92 377.217 cv
366.832 377.065 366.813 376.861 366.885 376.613 cv
367.115 375.689 368.137 372.643 368.182 372.519 cv
368.314 372.395 li
368.493 372.439 li
368.715 372.643 369.061 372.856 369.185 372.812 cv
369.247 372.696 li
369.31 372.439 369.416 371.595 369.549 370.61 cv
369.763 369.021 370.02 367.048 370.206 366.472 cv
370.313 366.125 369.779 365.433 369.3 364.811 cv
368.644 363.967 368.03 363.177 368.368 362.6 cv
368.475 362.422 368.59 362.235 368.715 362.04 cv
369.185 361.285 369.718 360.432 369.735 359.819 cv
369.754 359.491 369.558 359.003 369.354 358.47 cv
369.069 357.742 368.741 356.915 368.848 356.232 cv
368.954 355.521 369.416 355.256 369.744 355.06 cv
370.037 354.892 370.144 354.812 370.144 354.634 cv
370.152 354.101 370.473 353.993 370.703 353.914 cv
370.837 353.869 370.979 353.825 371.086 353.691 cv
371.236 353.506 371.29 352.573 371.334 351.827 cv
371.379 351.046 371.423 350.246 371.565 349.723 cv
371.716 349.198 371.956 348.771 372.169 348.408 cv
372.399 347.981 372.595 347.653 372.561 347.324 cv
372.542 347.103 372.338 346.445 372.106 345.673 cv
372.035 345.441 371.964 345.202 371.895 344.953 cv
371.849 344.812 371.813 344.669 371.77 344.527 cv
371.733 344.395 li
371.601 343.941 li
371.494 343.559 371.396 343.186 371.325 342.84 cv
371.308 342.787 li
371.308 342.777 li
371.272 342.609 371.236 342.449 371.21 342.298 cv
371.183 342.139 371.166 341.996 371.147 341.863 cv
371.13 341.659 li
371.121 341.445 li
371.121 341.349 371.13 341.25 371.147 341.171 cv
371.298 340.469 372.213 339.634 373.013 338.896 cv
373.438 338.507 373.98 338.019 374.008 337.849 cv
374.043 337.646 373.66 337.086 373.386 336.677 cv
372.969 336.073 372.613 335.549 372.701 335.185 cv
372.8 334.856 373.323 334.759 374.31 334.608 cv
375.171 334.475 376.343 334.288 376.565 333.844 cv
377.035 332.876 378.341 325.381 378.199 321.42 cv
378.199 321.296 378.19 321.171 378.181 321.056 cv
378.181 320.94 378.172 320.834 378.163 320.727 cv
378.163 320.719 li
378.154 320.559 378.137 320.408 378.128 320.266 cv
378.101 320.053 li
378.084 319.92 378.075 319.786 378.048 319.671 cv
378.013 319.413 li
377.977 319.173 377.933 318.961 377.879 318.756 cv
377.817 318.498 377.746 318.268 377.675 318.063 cv
377.524 317.654 377.373 317.361 377.248 317.122 cv
377.062 316.767 376.92 316.491 376.902 316.101 cv
376.894 315.754 376.911 315.47 376.93 315.248 cv
376.965 314.786 376.982 314.556 376.733 314.263 cv
376.645 314.156 376.538 314.066 376.423 313.961 cv
376.031 313.614 375.535 313.179 375.97 312.229 cv
376.023 312.104 376.085 311.998 376.165 311.892 cv
376.174 311.873 li
376.245 311.767 376.334 311.67 376.423 311.58 cv
376.565 311.438 li
376.76 311.278 li
376.875 311.19 li
376.965 311.128 377.054 311.065 377.151 311.012 cv
377.231 310.958 377.319 310.914 377.418 310.87 cv
377.462 310.843 li
377.488 310.834 li
377.506 310.826 li
377.657 310.755 li
377.772 310.701 377.879 310.648 377.994 310.612 cv
378.11 310.56 378.216 310.523 378.332 310.488 cv
378.51 310.426 378.688 310.373 378.856 310.328 cv
379.14 310.248 379.407 310.292 379.61 310.338 cv
379.824 310.382 379.948 310.391 380.037 310.338 cv
380.161 310.239 380.276 309.938 380.348 309.432 cv
380.57 307.992 381.458 301.803 381.44 300.249 cv
381.423 298.703 381.547 297.834 381.556 297.798 cv
381.671 297.647 li
382.71 297.229 383.651 296.652 383.651 296.447 cv
383.554 296.297 383.207 295.924 382.843 295.533 cv
381.716 294.334 381.209 293.739 381.289 293.394 cv
381.369 293.108 381.627 292.958 381.902 292.789 cv
382.168 292.638 382.47 292.461 382.692 292.141 cv
382.781 292.025 li
382.834 291.946 382.905 291.865 382.977 291.768 cv
383.11 291.607 li
383.198 291.502 383.287 291.396 383.376 291.288 cv
383.412 291.244 li
383.651 290.969 li
383.838 290.755 384.024 290.552 384.185 290.373 cv
384.309 290.241 li
384.415 290.125 li
384.486 290.045 li
384.549 289.983 li
384.584 289.947 li
384.584 289.938 li
384.131 289.485 383.172 288.474 383.182 287.976 cv
383.189 287.923 li
383.207 287.843 li
383.226 287.763 383.261 287.665 383.322 287.541 cv
383.358 287.452 383.403 287.354 383.465 287.238 cv
383.509 287.158 li
383.59 287.017 383.67 286.856 383.776 286.679 cv
383.82 286.591 383.873 286.501 383.936 286.404 cv
383.988 286.307 384.051 286.19 384.122 286.075 cv
384.256 285.845 li
384.397 285.604 384.539 285.365 384.673 285.125 cv
384.744 285.001 384.815 284.877 384.886 284.752 cv
384.895 284.734 li
384.895 284.726 li
385.002 284.539 385.108 284.353 385.196 284.176 cv
385.285 284.015 385.366 283.864 385.437 283.713 cv
385.534 283.5 385.623 283.305 385.693 283.127 cv
385.756 282.967 385.827 282.789 385.916 282.604 cv
385.979 282.461 386.049 282.318 386.111 282.178 cv
386.271 281.83 386.458 281.466 386.645 281.12 cv
386.751 280.916 386.857 280.729 386.955 280.552 cv
387.203 280.108 387.435 279.744 387.595 279.539 cv
387.647 279.486 li
387.728 279.396 li
387.763 279.371 li
387.772 279.371 li
387.781 279.362 li
387.896 279.309 388.171 279.317 389.628 279.415 cv
390.037 279.442 390.552 279.478 390.987 279.495 cv
391.2 279.504 li
391.271 279.504 li
391.484 279.513 391.671 279.521 391.805 279.513 cv
391.937 279.504 li
392.07 279.317 392.541 278.527 392.967 277.79 cv
392.904 277.666 392.825 277.506 392.745 277.319 cv
392.665 277.142 li
392.611 277.018 li
392.576 276.929 li
392.479 276.707 li
392.354 276.387 392.248 276.066 392.203 275.818 cv
392.186 275.677 li
392.177 275.588 li
392.194 275.445 li
392.23 275.356 li
392.248 275.33 li
392.257 275.304 li
392.266 275.304 li
392.416 275.073 li
392.611 274.806 392.896 274.451 393.198 274.113 cv
393.207 274.113 li
393.358 273.936 li
393.438 273.847 li
393.464 273.82 li
393.509 273.767 li
393.518 273.767 li
393.749 273.509 393.979 273.27 394.14 273.092 cv
393.855 272.977 393.446 272.746 393.331 272.346 cv
393.296 272.204 li
393.277 272.124 393.277 272.026 393.269 271.911 cv
393.261 271.662 li
393.261 271.404 li
393.261 271.263 393.261 271.103 393.269 270.935 cv
393.269 270.783 393.277 270.614 393.277 270.428 cv
393.277 270.419 li
393.287 270.313 li
393.287 270.241 li
393.287 270.135 393.296 270.02 393.296 269.896 cv
393.296 269.603 393.305 269.301 393.305 269.024 cv
393.305 268.972 li
393.305 268.794 393.305 268.625 393.287 268.501 cv
393.287 268.492 li
393.287 268.465 li
393.287 268.438 li
393.277 268.358 li
393.261 268.262 li
393.225 268.181 392.86 268.163 392.603 268.146 cv
392.044 268.109 391.289 268.057 390.623 267.612 cv
390.427 267.479 390.259 267.373 390.107 267.284 cv
389.317 266.822 389.069 266.591 389.682 265.135 cv
389.726 265.037 389.752 264.932 389.779 264.815 cv
389.823 264.638 li
389.859 264.434 li
389.886 264.176 li
389.895 264.123 li
389.903 264.017 389.912 263.918 389.912 263.803 cv
389.93 263.607 389.93 263.386 389.93 263.164 cv
389.93 263.003 389.93 262.835 389.922 262.666 cv
389.912 262.498 389.912 262.329 389.895 262.15 cv
389.895 262.08 li
389.867 261.876 li
389.867 261.857 li
389.859 261.752 li
389.851 261.627 li
389.832 261.503 li
389.814 261.299 389.797 261.086 389.771 260.881 cv
389.752 260.757 li
389.752 260.739 li
389.717 260.429 389.673 260.117 389.619 259.807 cv
389.61 259.771 li
389.574 259.54 389.539 259.3 389.486 259.069 cv
389.478 259.007 li
389.45 258.91 389.434 258.804 389.406 258.705 cv
389.379 258.546 389.335 258.377 389.3 258.226 cv
389.272 258.129 389.246 258.03 389.229 257.942 cv
389.185 257.765 389.131 257.604 389.086 257.453 cv
389.495 257.516 li
389.743 258.368 389.975 259.496 390.116 260.65 cv
390.144 260.872 390.17 261.104 390.196 261.325 cv
390.231 261.618 390.25 261.902 390.268 262.187 cv
390.276 262.355 390.294 262.533 390.294 262.701 cv
390.303 262.809 390.303 262.915 390.303 263.021 cv
390.312 263.314 390.303 263.6 390.286 263.855 cv
390.276 264.017 li
390.276 264.033 li
390.268 264.096 li
390.268 264.104 li
390.25 264.381 li
390.24 264.416 li
390.215 264.62 390.179 264.807 390.134 264.976 cv
390.1 265.1 li
390.037 265.286 li
389.521 266.512 389.637 266.574 390.294 266.964 cv
390.454 267.054 390.632 267.16 390.836 267.293 cv
391.422 267.684 392.088 267.729 392.621 267.764 cv
393.101 267.799 393.474 267.826 393.598 268.101 cv
393.642 268.226 li
393.651 268.306 li
393.651 268.314 li
393.669 268.474 li
393.678 268.679 li
393.695 269.043 393.678 269.558 393.66 270.206 cv
393.66 270.25 li
393.66 270.365 393.651 270.481 393.651 270.597 cv
393.642 270.987 393.633 271.378 393.642 271.68 cv
393.642 271.733 li
393.651 271.911 li
393.651 272.053 393.669 272.16 393.687 272.223 cv
393.819 272.648 394.521 272.826 394.53 272.826 cv
394.663 272.95 li
394.619 273.137 li
cp
.603922 .686275 .988235 rgb
f
390.042 261.714 mo
389.873 261.879 li
389.835 261.886 li
389.82 261.883 389.245 261.829 388.335 261.689 cv
386.809 261.457 384.344 260.984 381.978 260.104 cv
379.832 259.309 377.134 258.283 375.198 257.541 cv
375.09 257.498 li
374.256 257.178 373.575 256.918 373.147 256.752 cv
373.133 256.6 373.112 256.459 373.095 256.328 cv
373.393 256.441 373.907 256.643 374.568 256.894 cv
374.752 256.964 374.947 257.039 375.157 257.119 cv
377.103 257.863 379.896 258.927 382.108 259.748 cv
385.672 261.073 389.467 261.468 389.841 261.502 cv
389.87 261.506 li
389.983 261.521 390.051 261.607 390.042 261.714 cv
cp
f
390.283 264.061 mo
390.279 264.083 li
390.253 264.179 390.161 264.236 390.067 264.222 cv
390.049 264.219 li
390.045 264.219 389.989 264.207 389.891 264.181 cv
388.862 263.936 383.139 262.545 379.595 261.593 cv
377.03 260.912 374.85 260.133 373.507 259.648 cv
373.489 259.507 373.473 259.37 373.455 259.23 cv
373.521 259.252 li
374.847 259.729 377.069 260.531 379.694 261.229 cv
383.17 262.158 388.742 263.514 389.915 263.802 cv
390.053 263.833 390.13 263.854 390.139 263.855 cv
390.279 264.036 li
390.283 264.061 li
cp
f
406.285 268.712 mo
406.163 268.937 li
404.51 269.131 401.817 269.354 399.108 269.178 cv
396.184 268.987 394.734 268.852 394.011 268.74 cv
393.879 268.721 393.77 268.698 393.678 268.682 cv
393.39 268.619 393.314 268.565 393.3 268.513 cv
393.293 268.504 li
393.29 268.499 li
393.29 268.469 li
393.292 268.449 li
393.291 268.441 li
393.301 268.354 393.37 268.271 393.467 268.265 cv
393.572 268.294 li
393.652 268.31 li
393.655 268.31 li
394.038 268.383 395.493 268.563 399.132 268.803 cv
401.871 268.979 404.59 268.745 406.217 268.55 cv
406.285 268.712 li
cp
f
405.068 271.51 mo
405.021 271.639 404.982 271.765 404.943 271.883 cv
403.326 271.759 400.39 271.521 398.642 271.339 cv
397.686 271.238 396.733 271.106 395.949 270.986 cv
395.635 270.938 395.341 270.89 395.093 270.85 cv
394.346 270.727 393.909 270.653 393.648 270.595 cv
393.351 270.532 393.292 270.49 393.278 270.416 cv
393.276 270.35 li
393.28 270.326 li
393.294 270.233 393.378 270.165 393.478 270.166 cv
393.542 270.184 li
393.662 270.208 li
394.234 270.327 396.51 270.733 398.68 270.962 cv
400.457 271.147 403.474 271.391 405.068 271.51 cv
cp
f
392.563 275.525 mo
392.556 275.551 li
392.367 275.688 li
392.355 275.686 392.294 275.686 392.181 275.678 cv
391.776 275.657 390.723 275.578 388.822 275.288 cv
387.568 275.096 385.952 274.813 383.91 274.395 cv
379.876 273.562 376.68 272.377 375.003 271.68 cv
374.98 271.536 374.96 271.392 374.942 271.241 cv
376.54 271.918 379.807 273.165 383.985 274.023 cv
389.233 275.104 391.718 275.274 392.262 275.305 cv
392.379 275.311 li
392.485 275.306 392.569 275.396 392.563 275.499 cv
392.563 275.525 li
cp
f
404.279 274.633 mo
400.884 274.975 394.587 274.268 393.672 274.158 cv
393.576 274.146 li
393.563 274.144 393.437 274.133 393.201 274.112 cv
391.967 273.997 387.888 273.604 384.387 273.069 cv
383.344 272.91 382.356 272.74 381.508 272.56 cv
378.681 271.957 376.208 270.805 374.775 270.072 cv
374.757 269.921 374.734 269.767 374.712 269.611 cv
376.084 270.325 378.642 271.563 381.584 272.188 cv
385.543 273.031 392.618 273.682 393.52 273.764 cv
393.613 273.771 li
393.624 273.771 393.757 273.787 393.981 273.815 cv
395.492 273.977 401.254 274.57 404.308 274.252 cv
404.256 274.489 404.229 274.625 404.229 274.625 cv
404.279 274.633 li
cp
f
391.159 285.968 mo
388.034 285.489 385.07 285.022 385.027 285.016 cv
384.925 284.998 384.854 284.899 384.872 284.797 cv
384.888 284.693 384.982 284.624 385.085 284.64 cv
385.089 284.641 li
385.155 284.649 391.818 285.704 395.709 286.265 cv
398.328 286.643 399.733 286.537 400.488 286.481 cv
400.9 286.45 401.126 286.435 401.288 286.52 cv
401.384 286.566 401.421 286.683 401.372 286.774 cv
401.324 286.866 401.211 286.902 401.119 286.856 cv
401.051 286.819 400.804 286.837 400.518 286.859 cv
399.746 286.917 398.315 287.024 395.654 286.641 cv
394.35 286.452 392.734 286.207 391.159 285.968 cv
cp
f
402.113 282.065 mo
401.93 282.225 li
401.837 282.216 li
401.558 282.173 400.624 281.963 397.662 281.285 cv
395.724 280.838 393.518 280.333 392.424 280.104 cv
392.1 280.039 391.708 279.964 391.265 279.893 cv
391.262 279.892 li
391.255 279.892 li
391.252 279.891 li
390.292 279.724 389.089 279.544 387.766 279.372 cv
385.272 279.039 382.354 278.713 379.853 278.499 cv
377.343 278.289 375.063 277.775 373.199 277.006 cv
373.233 276.887 373.279 276.763 373.325 276.643 cv
375.154 277.406 377.4 277.915 379.885 278.125 cv
383.683 278.446 388.441 279.026 391.233 279.502 cv
391.27 279.507 li
391.643 279.571 391.979 279.63 392.275 279.688 cv
392.502 279.733 li
393.601 279.963 395.801 280.468 397.746 280.915 cv
399.112 281.228 400.512 281.549 401.294 281.718 cv
401.643 281.793 401.868 281.839 401.921 281.843 cv
402.025 281.836 402.106 281.918 402.116 282.02 cv
402.113 282.065 li
cp
f
384.369 286.405 mo
384.245 286.5 li
384.158 286.524 384.094 286.499 383.934 286.407 cv
383.8 286.329 li
383.187 285.966 381.753 285.116 379.333 284.745 cv
377.433 284.455 375.151 284.594 373.645 284.688 cv
373.502 284.696 li
373.497 284.586 373.493 284.459 373.49 284.318 cv
373.621 284.31 li
375.146 284.216 377.45 284.074 379.391 284.37 cv
381.885 284.752 383.359 285.628 383.99 286.003 cv
384.119 286.075 li
384.201 286.122 li
384.299 286.148 li
384.369 286.405 li
cp
f
379.596 300.567 mo
379.531 300.543 li
379.49 300.521 379.335 300.436 379.084 300.302 cv
374.27 297.7 371.313 295.922 370.303 295.027 cv
370.287 294.758 li
370.555 294.743 li
371.542 295.622 374.474 297.379 379.262 299.967 cv
379.519 300.105 379.682 300.194 379.72 300.217 cv
379.813 300.269 379.84 300.385 379.789 300.477 cv
379.596 300.567 li
cp
f
393.998 292.757 mo
393.678 292.708 393.352 292.651 393.012 292.589 cv
390.716 292.16 388.194 291.347 386.527 290.811 cv
385.711 290.547 384.939 290.296 384.751 290.285 cv
384.557 290.245 li
384.547 289.979 li
384.682 289.831 384.817 289.863 386.643 290.448 cv
388.303 290.984 390.813 291.794 393.082 292.217 cv
396.801 292.909 399.512 292.69 399.54 292.689 cv
399.643 292.679 399.735 292.757 399.744 292.862 cv
399.75 292.965 399.676 293.057 399.57 293.067 cv
399.547 293.069 397.255 293.255 393.998 292.757 cv
cp
f
387.853 306.142 mo
386.133 305.88 384.734 305.545 384.247 305.294 cv
384.156 305.245 384.119 305.132 384.164 305.039 cv
384.212 304.945 384.327 304.908 384.421 304.955 cv
385.277 305.397 389.214 306.121 392.449 306.177 cv
395.709 306.235 399.347 305.777 399.385 305.772 cv
399.489 305.76 399.582 305.833 399.594 305.938 cv
399.608 306.041 399.536 306.135 399.433 306.148 cv
399.395 306.152 395.73 306.613 392.439 306.555 cv
390.911 306.526 389.271 306.36 387.853 306.142 cv
cp
f
391.416 312.133 mo
390.29 311.961 389.186 311.762 388.249 311.538 cv
384.674 310.676 380.584 310.36 380.539 310.358 cv
380.449 310.352 380.359 310.26 380.368 310.155 cv
380.372 310.051 380.468 309.972 380.57 309.98 cv
380.61 309.983 384.73 310.301 388.341 311.168 cv
391.921 312.032 398.072 312.518 398.133 312.524 cv
398.235 312.531 398.315 312.623 398.308 312.728 cv
398.299 312.833 398.209 312.911 398.104 312.902 cv
398.058 312.899 394.647 312.627 391.416 312.133 cv
cp
f
386.451 312.986 mo
381.439 312.22 377.523 311.212 377.484 311.201 cv
377.384 311.177 377.319 311.074 377.348 310.971 cv
377.372 310.87 377.48 310.808 377.578 310.837 cv
377.617 310.846 381.518 311.849 386.508 312.611 cv
391.487 313.373 393.69 313.307 393.71 313.304 cv
393.818 313.302 393.905 313.382 393.908 313.487 cv
393.911 313.592 393.831 313.68 393.726 313.682 cv
393.636 313.687 391.468 313.754 386.451 312.986 cv
cp
f
376.671 317.898 mo
376.644 317.993 376.55 318.056 376.457 318.042 cv
376.439 318.035 li
376.038 317.937 375.355 317.749 374.488 317.51 cv
371.522 316.696 366.37 315.288 362.931 314.757 cv
362.948 314.638 362.971 314.511 362.994 314.383 cv
366.459 314.922 371.618 316.335 374.588 317.146 cv
375.453 317.381 376.134 317.57 376.533 317.671 cv
376.635 317.691 376.695 317.798 376.671 317.898 cv
cp
f
378.312 320.777 mo
378.273 320.767 li
378.194 320.735 378.081 320.673 377.916 320.581 cv
377.185 320.179 375.453 319.235 372.777 318.851 cv
369.479 318.387 365.902 316.974 365.867 316.958 cv
365.767 316.92 365.72 316.811 365.759 316.712 cv
365.798 316.614 365.907 316.564 366.006 316.605 cv
366.042 316.62 369.45 317.959 372.653 318.448 cv
372.832 318.476 li
372.985 318.498 li
375.662 318.907 377.361 319.844 378.095 320.25 cv
378.241 320.33 378.35 320.387 378.41 320.413 cv
378.51 320.453 378.556 320.559 378.519 320.657 cv
378.312 320.777 li
cp
f
373.64 332.423 mo
373.63 332.525 373.536 332.604 373.436 332.596 cv
373.312 332.58 li
372.868 332.513 371.21 332.166 367.806 330.504 cv
365.694 329.471 363.991 328.394 362.857 327.604 cv
362.946 327.482 363 327.429 363 327.429 cv
363 327.429 362.911 327.301 362.775 327.093 cv
363.889 327.877 365.688 329.044 367.974 330.161 cv
371.859 332.057 373.45 332.218 373.468 332.217 cv
373.572 332.225 373.648 332.315 373.64 332.423 cv
cp
f
395.463 333.234 mo
395.44 333.355 395.419 333.476 395.396 333.599 cv
394.105 333.549 391.973 333.386 390.151 333.106 cv
389.05 332.938 388.063 332.728 387.45 332.477 cv
385.41 331.635 384.862 331.41 383.995 331.656 cv
383.893 331.686 383.79 331.628 383.757 331.527 cv
383.729 331.424 383.789 331.321 383.888 331.29 cv
384.886 331.009 385.514 331.27 387.593 332.121 cv
389.163 332.773 393.49 333.153 395.463 333.234 cv
cp
f
376.938 341.288 mo
374.217 340.871 372.243 340.27 372.22 340.263 cv
372.12 340.229 372.065 340.124 372.096 340.023 cv
372.127 339.924 372.233 339.869 372.333 339.9 cv
372.359 339.909 375.233 340.786 378.815 341.146 cv
382.425 341.508 386.679 342.091 386.723 342.098 cv
386.728 342.1 li
386.827 342.113 386.9 342.209 386.885 342.311 cv
386.869 342.413 386.773 342.488 386.67 342.474 cv
386.626 342.467 382.377 341.885 378.777 341.521 cv
378.138 341.456 377.52 341.376 376.938 341.288 cv
cp
f
371.468 342.94 mo
371.309 342.784 li
371.291 342.683 371.36 342.585 371.466 342.566 cv
372.613 342.373 377.185 343.09 381.215 343.723 cv
383.085 344.016 384.698 344.268 385.667 344.38 cv
388.031 344.656 388.446 344.368 388.494 344.319 cv
388.684 344.189 li
388.791 344.193 388.869 344.279 388.867 344.384 cv
388.864 344.422 388.851 344.516 388.741 344.607 cv
388.39 344.907 387.343 344.96 385.623 344.759 cv
384.647 344.644 383.03 344.391 381.155 344.096 cv
377.35 343.503 372.613 342.759 371.526 342.938 cv
371.468 342.94 li
cp
f
370.505 347.803 mo
370.314 347.895 li
370.244 347.868 li
370.229 347.857 368.609 346.916 364.385 345.707 cv
362.196 345.081 360.602 344.677 359.569 344.431 cv
359.545 344.363 li
359.519 344.272 359.493 344.158 359.475 344.021 cv
360.506 344.257 362.164 344.677 364.489 345.345 cv
368.771 346.569 370.375 347.504 370.437 347.542 cv
370.53 347.598 370.555 347.711 370.505 347.803 cv
cp
f
370.76 348.826 mo
370.736 348.927 370.637 348.999 370.533 348.97 cv
370.5 348.961 366.971 348.214 364.079 347.96 cv
363.854 347.943 363.636 347.915 363.425 347.882 cv
361.939 347.655 360.669 347.14 359.83 346.72 cv
359.842 346.564 359.848 346.429 359.854 346.302 cv
360.776 346.772 362.329 347.424 364.11 347.582 cv
367.028 347.841 370.576 348.588 370.614 348.599 cv
370.716 348.617 370.781 348.72 370.76 348.826 cv
cp
f
393.645 354.09 mo
391.928 354.279 388.552 354.598 386.322 354.463 cv
385.289 354.4 383.978 354.23 382.693 354.034 cv
380.145 353.645 377.685 353.143 377.645 353.136 cv
377.547 353.113 377.48 353.017 377.5 352.912 cv
377.519 352.81 377.611 352.735 377.727 352.763 cv
377.778 352.778 383.289 353.899 386.344 354.081 cv
388.586 354.22 392.014 353.887 393.694 353.699 cv
393.678 353.828 393.662 353.956 393.645 354.09 cv
cp
f
382.037 357.004 mo
379.474 356.611 375.525 355.527 375.481 355.518 cv
375.381 355.489 375.323 355.386 375.35 355.287 cv
375.379 355.185 375.481 355.125 375.582 355.153 cv
375.624 355.165 379.797 356.313 382.324 356.662 cv
384.852 357.016 389.822 357.333 389.873 357.339 cv
389.967 357.344 390.055 357.434 390.049 357.538 cv
390.043 357.644 389.952 357.722 389.848 357.715 cv
389.799 357.712 384.811 357.395 382.271 357.037 cv
382.037 357.004 li
cp
f
368.038 372.107 mo
367.771 372.091 li
367.2 371.468 362.534 369.738 357.53 370.234 cv
357.543 370.107 357.548 369.981 357.562 369.852 cv
362.65 369.362 367.383 371.102 368.052 371.839 cv
368.038 372.107 li
cp
f
366.311 373.278 mo
363.681 372.876 359.376 371.43 359.153 371.355 cv
359.056 371.32 359.002 371.213 359.035 371.115 cv
359.07 371.017 359.181 370.961 359.275 370.998 cv
359.341 371.019 365.818 373.197 367.703 372.99 cv
367.809 372.979 367.902 373.057 367.913 373.159 cv
367.926 373.263 367.85 373.356 367.747 373.369 cv
367.393 373.408 366.894 373.369 366.311 373.278 cv
cp
f
376.36 384.152 mo
376.165 384.25 375.97 384.348 375.774 384.437 cv
373.972 384.082 373.004 383.575 372.941 383.549 cv
372.853 383.504 372.816 383.389 372.87 383.291 cv
373.119 383.211 li
373.137 383.22 374.273 383.806 376.36 384.152 cv
cp
f
209.764 112.744 mo
209.764 112.744 219.833 123.015 222.004 128.727 cv
222.004 128.727 249.494 116.389 252.572 114.639 cv
252.572 114.639 249.975 110.563 245.217 105.96 cv
240.45 101.356 237.336 97.9614 237.336 97.9614 cv
237.336 97.9614 229.779 102.786 222.973 106.422 cv
216.165 110.049 209.764 112.744 209.764 112.744 cv
cp
.835294 .862745 1 rgb
f
411.376 226.084 mo
411.376 226.084 413.884 238.177 412.558 241.151 cv
412.558 241.151 419.756 241.308 423.88 238.947 cv
428.006 236.589 436.083 237.275 435.93 236.805 cv
435.773 236.339 439.911 217.335 439.911 217.335 cv
439.911 217.335 423.605 224.769 411.376 226.084 cv
cp
f
64.959 247.416 mo
65.4492 247.79 74.4385 235.474 77.9468 233.587 cv
77.9468 233.587 66 215.452 62.7485 205.312 cv
62.7485 205.312 50.6772 212.186 43.0928 222.597 cv
43.0928 222.597 59.9058 243.541 64.959 247.416 cv
cp
f
107.423 178.464 mo
107.423 178.464 108.295 186.056 108.559 188.809 cv
108.559 188.809 98.3745 191.959 85.3691 188.36 cv
73.6167 185.108 64.1763 176.403 64.1763 176.403 cv
69.23 163.1 li
69.23 163.1 75.7827 170.454 85.5122 173.127 cv
95.2388 175.798 107.423 178.464 107.423 178.464 cv
cp
f
120.771 244.222 mo
121.083 244.328 129.776 246.632 129.776 246.632 cv
127.157 256.315 li
118.155 254.138 li
120.771 244.222 li
cp
.980392 .682353 .690196 rgb
f
234.838 326.225 mo
238.893 336.005 li
249.963 332.004 li
245.525 322.592 li
234.838 326.225 li
cp
f
373.399 259.961 mo
379.218 270.933 li
369.646 276.837 li
363.395 265.961 li
373.399 259.961 li
cp
1 .262745 .368627 rgb
f
191.288 151.775 mo
203.903 147.662 li
207.525 160.787 li
195.073 164.842 li
191.288 151.775 li
cp
.988235 .815686 .815686 rgb
f
70.0088 315.341 mo
80.9097 308.533 li
85.8857 319.959 li
75.8867 326.69 li
70.0088 315.341 li
cp
1 .262745 .368627 rgb
f
61.2573 269.331 mo
60.52 278.707 li
68.7607 278.328 li
68.9263 269.985 li
61.2573 269.331 li
cp
.988235 .815686 .815686 rgb
f
160.86 197.942 mo
160.971 197.895 170.235 200.44 170.235 200.44 cv
167.358 210.17 li
157.718 207.681 li
160.86 197.942 li
cp
1 .262745 .368627 rgb
f
207.059 283.386 mo
216.165 288.709 li
210.833 297.58 li
201.696 292.641 li
207.059 283.386 li
cp
1 .870588 .870588 rgb
f
444.244 258.217 mo
442.787 261.689 441.242 265.117 439.635 268.519 cv
340.82 376.391 li
340.287 376.968 339.444 377.128 338.743 376.791 cv
301.462 358.905 li
215.312 388.931 li
215.108 389.011 214.886 389.037 214.664 389.027 cv
168.938 387.35 li
129.943 398.432 li
128.416 398.291 126.923 398.148 125.476 397.988 cv
125.467 397.988 li
124.836 397.918 124.215 397.847 123.603 397.775 cv
123.593 397.775 li
123.434 397.758 123.282 397.74 123.131 397.722 cv
114.011 396.639 106.525 395.146 101.294 393.086 cv
100.788 392.892 100.309 392.651 99.8472 392.367 cv
99.6606 392.27 99.4829 392.154 99.314 392.029 cv
98.4082 391.417 97.5913 390.661 96.8447 389.773 cv
123.318 396.63 li
168.236 383.859 li
168.414 383.806 168.6 383.779 168.787 383.789 cv
214.459 385.467 li
300.991 355.309 li
301.435 355.157 301.914 355.185 302.341 355.388 cv
339.089 373.017 li
444.244 258.217 li
cp
level3{
gsave
clp
[-359.163 55.6951 -55.6951 -359.163 452.007 308.277 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-359.163 55.6951 -55.6951 -359.163 452.007 308.277 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
312.585 100.78 mo
305.296 110.198 325.24 119.791 346.668 116.601 cv
368.097 113.41 388.102 116.222 401.235 114.914 cv
414.37 113.605 421.895 93.0835 411.621 98.7456 cv
401.35 104.408 401.767 98.8755 391.183 88.4707 cv
380.6 78.0659 368.238 85.8481 363.511 93.9702 cv
358.781 102.092 357.512 92.5674 349.443 85.4238 cv
341.374 78.2803 344.825 96.5078 338.514 98.3916 cv
332.202 100.275 321.698 89.0059 312.585 100.78 cv
cp
1 1 1 rgb
f
177.915 456.318 mo
178.664 456.455 179.753 456.489 180.912 456.489 cv
187.246 456.489 190.686 452.947 190.686 446.749 cv
190.72 441.334 187.655 437.894 181.388 437.894 cv
179.856 437.894 178.698 438.03 177.915 438.2 cv
177.915 456.318 li
cp
174.952 436.021 mo
176.756 435.748 178.902 435.544 181.251 435.544 cv
185.509 435.544 188.541 436.531 190.549 438.404 cv
192.593 440.277 193.785 442.935 193.785 446.646 cv
193.785 450.393 192.627 453.458 190.481 455.57 cv
188.335 457.715 184.793 458.873 180.333 458.873 cv
178.221 458.873 176.45 458.771 174.952 458.601 cv
174.952 436.021 li
cp
0 .227451 .647059 rgb
f
209.519 447.906 mo
200.596 447.906 li
200.596 456.183 li
210.541 456.183 li
210.541 458.669 li
197.633 458.669 li
197.633 435.714 li
210.03 435.714 li
210.03 438.2 li
200.596 438.2 li
200.596 445.455 li
209.519 445.455 li
209.519 447.906 li
cp
f
225.627 449.133 mo
223.379 442.525 li
222.869 441.027 222.529 439.665 222.188 438.336 cv
222.12 438.336 li
221.779 439.699 221.405 441.096 220.961 442.492 cv
218.714 449.133 li
225.627 449.133 li
cp
218.101 451.449 mo
215.717 458.669 li
212.652 458.669 li
220.451 435.714 li
224.027 435.714 li
231.86 458.669 li
228.693 458.669 li
226.241 451.449 li
218.101 451.449 li
cp
f
238.196 456.318 mo
238.945 456.455 240.035 456.489 241.193 456.489 cv
247.527 456.489 250.967 452.947 250.967 446.749 cv
251.002 441.334 247.936 437.894 241.669 437.894 cv
240.137 437.894 238.979 438.03 238.196 438.2 cv
238.196 456.318 li
cp
235.233 436.021 mo
237.038 435.748 239.183 435.544 241.533 435.544 cv
245.791 435.544 248.822 436.531 250.831 438.404 cv
252.875 440.277 254.066 442.935 254.066 446.646 cv
254.066 450.393 252.908 453.458 250.762 455.57 cv
248.617 457.715 245.075 458.873 240.614 458.873 cv
238.502 458.873 236.731 458.771 235.233 458.601 cv
235.233 436.021 li
cp
f
257.914 435.714 mo
260.877 435.714 li
260.877 456.183 li
270.686 456.183 li
270.686 458.669 li
257.914 458.669 li
257.914 435.714 li
cp
f
276.953 435.714 mo
276.953 458.669 li
273.988 458.669 li
273.988 435.714 li
276.953 435.714 li
cp
f
282.129 458.669 mo
282.129 435.714 li
285.365 435.714 li
292.721 447.328 li
294.424 450.019 295.752 452.437 296.842 454.786 cv
296.91 454.752 li
296.637 451.688 296.568 448.895 296.568 445.318 cv
296.568 435.714 li
299.361 435.714 li
299.361 458.669 li
296.365 458.669 li
289.076 447.021 li
287.477 444.467 285.943 441.845 284.785 439.358 cv
284.684 439.393 li
284.854 442.287 284.922 445.046 284.922 448.86 cv
284.922 458.669 li
282.129 458.669 li
cp
f
316.424 447.906 mo
307.502 447.906 li
307.502 456.183 li
317.445 456.183 li
317.445 458.669 li
304.537 458.669 li
304.537 435.714 li
316.936 435.714 li
316.936 438.2 li
307.502 438.2 li
307.502 445.455 li
316.424 445.455 li
316.424 447.906 li
cp
f
207.322 468.268 mo
207.271 468.471 li
204.765 473.488 li
204.659 473.697 204.52 473.801 204.346 473.801 cv
204.173 473.801 204.035 473.697 203.933 473.488 cv
201.421 468.471 li
201.37 468.268 li
201.37 468.15 201.416 468.051 201.507 467.969 cv
201.598 467.889 201.702 467.848 201.819 467.848 cv
201.982 467.848 202.104 467.926 202.183 468.084 cv
204.346 472.416 li
206.515 468.086 li
206.594 467.928 206.716 467.848 206.882 467.848 cv
206.995 467.848 207.096 467.889 207.187 467.969 cv
207.277 468.051 207.322 468.15 207.322 468.268 cv
cp
.721569 .780392 1 rgb
f
212.448 469.416 mo
212.026 468.934 211.496 468.691 210.858 468.691 cv
210.274 468.691 209.774 468.9 209.359 469.316 cv
208.944 469.732 208.736 470.234 208.736 470.822 cv
208.736 471.053 208.772 471.277 208.844 471.498 cv
212.448 469.416 li
cp
213.495 472.088 mo
213.433 472.314 li
213.195 472.76 212.835 473.119 212.354 473.393 cv
211.874 473.664 211.375 473.801 210.858 473.801 cv
210.04 473.801 209.34 473.51 208.759 472.928 cv
208.178 472.346 207.888 471.645 207.888 470.824 cv
207.888 470.004 208.178 469.303 208.759 468.721 cv
209.34 468.139 210.04 467.848 210.858 467.848 cv
211.148 467.848 211.454 467.902 211.775 468.012 cv
212.137 468.137 212.491 468.338 212.838 468.613 cv
213.269 468.949 213.483 469.268 213.483 469.57 cv
213.483 469.721 213.414 469.836 213.274 469.916 cv
209.269 472.232 li
209.691 472.715 210.221 472.957 210.858 472.957 cv
211.526 472.957 212.06 472.711 212.459 472.221 cv
212.508 472.148 212.588 472.039 212.7 471.891 cv
212.811 471.742 212.927 471.668 213.048 471.668 cv
213.165 471.668 213.269 471.709 213.359 471.791 cv
213.45 471.875 213.495 471.973 213.495 472.088 cv
cp
f
219.26 469.018 mo
219.26 469.131 219.216 469.232 219.13 469.322 cv
219.043 469.41 218.941 469.455 218.824 469.455 cv
218.786 469.455 218.576 469.328 218.193 469.072 cv
217.811 468.818 217.423 468.691 217.031 468.691 cv
216.446 468.691 215.946 468.9 215.531 469.316 cv
215.116 469.734 214.909 470.236 214.909 470.824 cv
214.909 471.412 215.116 471.914 215.531 472.332 cv
215.946 472.748 216.446 472.957 217.031 472.957 cv
217.423 472.957 217.811 472.83 218.193 472.578 cv
218.576 472.326 218.786 472.199 218.824 472.199 cv
218.938 472.199 219.038 472.242 219.127 472.33 cv
219.215 472.416 219.26 472.52 219.26 472.637 cv
219.26 472.73 219.214 472.83 219.124 472.932 cv
218.901 473.197 218.583 473.41 218.168 473.572 cv
217.783 473.725 217.404 473.801 217.031 473.801 cv
216.212 473.801 215.512 473.51 214.932 472.928 cv
214.351 472.346 214.06 471.645 214.06 470.824 cv
214.06 470.004 214.351 469.303 214.932 468.721 cv
215.512 468.139 216.212 467.848 217.031 467.848 cv
217.404 467.848 217.783 467.924 218.168 468.074 cv
218.583 468.238 218.903 468.453 219.13 468.723 cv
219.216 468.824 219.26 468.924 219.26 469.018 cv
cp
f
224.069 472.971 mo
224.069 473.258 223.92 473.477 223.622 473.623 cv
223.388 473.742 223.113 473.801 222.796 473.801 cv
222.328 473.801 221.928 473.633 221.596 473.301 cv
221.264 472.967 221.098 472.566 221.098 472.098 cv
221.098 468.691 li
220.25 468.691 li
219.967 468.691 219.825 468.551 219.825 468.27 cv
219.825 467.988 219.967 467.848 220.25 467.848 cv
221.098 467.848 li
221.098 465.727 li
221.098 465.443 221.24 465.303 221.523 465.303 cv
221.806 465.303 221.947 465.443 221.947 465.727 cv
221.947 467.848 li
222.796 467.848 li
223.079 467.848 223.22 467.988 223.22 468.27 cv
223.22 468.551 223.079 468.691 222.796 468.691 cv
221.947 468.691 li
221.947 472.104 li
221.947 472.34 222.03 472.539 222.196 472.707 cv
222.362 472.873 222.562 472.957 222.796 472.957 cv
222.984 472.957 223.167 472.885 223.345 472.742 cv
223.522 472.6 223.65 472.527 223.729 472.527 cv
223.956 472.527 224.069 472.676 224.069 472.971 cv
cp
f
229.727 470.824 mo
229.727 470.236 229.519 469.734 229.104 469.316 cv
228.689 468.9 228.189 468.691 227.605 468.691 cv
227.02 468.691 226.521 468.9 226.105 469.316 cv
225.69 469.734 225.483 470.236 225.483 470.824 cv
225.483 471.412 225.69 471.914 226.105 472.332 cv
226.521 472.748 227.02 472.957 227.605 472.957 cv
228.189 472.957 228.689 472.748 229.104 472.332 cv
229.519 471.914 229.727 471.412 229.727 470.824 cv
cp
230.575 470.824 mo
230.575 471.645 230.285 472.346 229.704 472.928 cv
229.123 473.51 228.423 473.801 227.605 473.801 cv
226.786 473.801 226.086 473.51 225.506 472.928 cv
224.925 472.346 224.634 471.645 224.634 470.824 cv
224.634 470.004 224.925 469.303 225.506 468.721 cv
226.086 468.139 226.786 467.848 227.605 467.848 cv
228.423 467.848 229.123 468.139 229.704 468.721 cv
230.285 469.303 230.575 470.004 230.575 470.824 cv
cp
f
234.937 468.928 mo
234.937 469.041 234.892 469.139 234.801 469.223 cv
234.711 469.307 234.609 469.348 234.496 469.348 cv
234.383 469.348 234.235 469.238 234.052 469.02 cv
233.869 468.801 233.653 468.691 233.404 468.691 cv
233.17 468.691 232.97 468.773 232.804 468.941 cv
232.638 469.107 232.555 469.309 232.555 469.543 cv
232.555 473.375 li
232.555 473.658 232.414 473.801 232.131 473.801 cv
231.848 473.801 231.707 473.658 231.707 473.375 cv
231.707 468.273 li
231.707 467.99 231.848 467.848 232.131 467.848 cv
232.323 467.848 232.454 467.934 232.521 468.104 cv
232.793 467.934 233.087 467.848 233.404 467.848 cv
233.698 467.848 233.984 467.926 234.261 468.084 cv
234.538 468.24 234.743 468.447 234.875 468.699 cv
234.937 468.928 li
cp
f
239.741 468.273 mo
239.741 473.375 li
239.741 473.658 239.599 473.801 239.316 473.801 cv
239.034 473.801 238.892 473.658 238.892 473.375 cv
238.892 468.273 li
238.892 467.99 239.034 467.848 239.316 467.848 cv
239.599 467.848 239.741 467.99 239.741 468.273 cv
cp
239.956 465.947 mo
239.956 466.125 239.893 466.273 239.767 466.395 cv
239.641 466.516 239.49 466.574 239.313 466.574 cv
239.137 466.574 238.986 466.516 238.86 466.395 cv
238.734 466.273 238.671 466.125 238.671 465.947 cv
238.671 465.77 238.734 465.617 238.86 465.492 cv
238.986 465.365 239.137 465.303 239.313 465.303 cv
239.49 465.303 239.641 465.365 239.767 465.492 cv
239.893 465.617 239.956 465.77 239.956 465.947 cv
cp
f
243.277 473.379 mo
243.277 473.66 243.135 473.801 242.853 473.801 cv
242.385 473.801 241.985 473.635 241.653 473.303 cv
241.321 472.971 241.155 472.57 241.155 472.102 cv
241.155 464.459 li
241.155 464.176 241.296 464.035 241.58 464.035 cv
241.862 464.035 242.004 464.176 242.004 464.459 cv
242.004 472.107 li
242.004 472.342 242.087 472.541 242.253 472.707 cv
242.418 472.875 242.619 472.957 242.853 472.957 cv
243.135 472.957 243.277 473.098 243.277 473.379 cv
cp
f
246.247 473.379 mo
246.247 473.66 246.105 473.801 245.823 473.801 cv
245.355 473.801 244.955 473.635 244.623 473.303 cv
244.292 472.971 244.125 472.57 244.125 472.102 cv
244.125 464.459 li
244.125 464.176 244.267 464.035 244.55 464.035 cv
244.833 464.035 244.974 464.176 244.974 464.459 cv
244.974 472.107 li
244.974 472.342 245.057 472.541 245.223 472.707 cv
245.389 472.875 245.589 472.957 245.823 472.957 cv
246.105 472.957 246.247 473.098 246.247 473.379 cv
cp
f
251.339 471.674 mo
251.339 472.26 251.131 472.762 250.717 473.176 cv
250.302 473.592 249.802 473.801 249.217 473.801 cv
248.632 473.801 248.133 473.592 247.718 473.176 cv
247.303 472.762 247.096 472.26 247.096 471.674 cv
247.096 468.273 li
247.096 467.99 247.237 467.848 247.52 467.848 cv
247.803 467.848 247.944 467.99 247.944 468.273 cv
247.944 471.68 li
247.944 472.031 248.069 472.332 248.318 472.582 cv
248.566 472.832 248.867 472.957 249.217 472.957 cv
249.568 472.957 249.868 472.832 250.117 472.582 cv
250.366 472.332 250.49 472.031 250.49 471.68 cv
250.49 468.273 li
250.49 467.99 250.632 467.848 250.915 467.848 cv
251.197 467.848 251.339 467.99 251.339 468.273 cv
251.339 471.674 li
cp
f
255.916 471.885 mo
255.916 472.414 255.729 472.865 255.354 473.238 cv
254.979 473.613 254.527 473.801 254.004 473.801 cv
253.611 473.801 253.25 473.688 252.918 473.459 cv
252.586 473.232 252.354 472.936 252.222 472.568 cv
252.188 472.398 li
252.188 472.285 252.232 472.188 252.32 472.105 cv
252.409 472.025 252.512 471.984 252.629 471.984 cv
252.765 471.984 252.887 472.068 252.996 472.236 cv
253.17 472.508 253.279 472.664 253.324 472.705 cv
253.494 472.873 253.721 472.957 254.004 472.957 cv
254.298 472.957 254.549 472.854 254.756 472.643 cv
254.964 472.434 255.067 472.182 255.067 471.885 cv
255.067 471.234 254.703 470.879 253.976 470.818 cv
253.542 470.781 253.189 470.635 252.918 470.383 cv
252.635 470.115 252.493 469.764 252.493 469.33 cv
252.493 468.924 252.639 468.574 252.929 468.283 cv
253.219 467.994 253.568 467.848 253.976 467.848 cv
254.568 467.848 254.996 468.094 255.26 468.586 cv
255.322 468.814 li
255.322 468.928 255.277 469.025 255.187 469.109 cv
255.096 469.193 254.994 469.234 254.881 469.234 cv
254.76 469.234 254.628 469.145 254.484 468.963 cv
254.342 468.781 254.172 468.691 253.976 468.691 cv
253.803 468.691 253.652 468.754 253.529 468.879 cv
253.404 469.006 253.342 469.156 253.342 469.33 cv
253.342 469.719 253.563 469.934 254.004 469.975 cv
254.57 470.027 255.023 470.215 255.367 470.537 cv
255.733 470.881 255.916 471.33 255.916 471.885 cv
cp
f
260.725 472.971 mo
260.725 473.258 260.576 473.477 260.277 473.623 cv
260.044 473.742 259.77 473.801 259.452 473.801 cv
258.984 473.801 258.584 473.633 258.252 473.301 cv
257.92 472.967 257.754 472.566 257.754 472.098 cv
257.754 468.691 li
256.906 468.691 li
256.623 468.691 256.481 468.551 256.481 468.27 cv
256.481 467.988 256.623 467.848 256.906 467.848 cv
257.754 467.848 li
257.754 465.727 li
257.754 465.443 257.896 465.303 258.18 465.303 cv
258.462 465.303 258.604 465.443 258.604 465.727 cv
258.604 467.848 li
259.452 467.848 li
259.734 467.848 259.877 467.988 259.877 468.27 cv
259.877 468.551 259.734 468.691 259.452 468.691 cv
258.604 468.691 li
258.604 472.104 li
258.604 472.34 258.686 472.539 258.852 472.707 cv
259.018 472.873 259.219 472.957 259.452 472.957 cv
259.641 472.957 259.823 472.885 260.001 472.742 cv
260.178 472.6 260.307 472.527 260.387 472.527 cv
260.611 472.527 260.725 472.676 260.725 472.971 cv
cp
f
265.086 468.928 mo
265.086 469.041 265.041 469.139 264.951 469.223 cv
264.859 469.307 264.758 469.348 264.645 469.348 cv
264.531 469.348 264.385 469.238 264.201 469.02 cv
264.018 468.801 263.803 468.691 263.553 468.691 cv
263.32 468.691 263.119 468.773 262.953 468.941 cv
262.787 469.107 262.705 469.309 262.705 469.543 cv
262.705 473.375 li
262.705 473.658 262.563 473.801 262.281 473.801 cv
261.998 473.801 261.855 473.658 261.855 473.375 cv
261.855 468.273 li
261.855 467.99 261.998 467.848 262.281 467.848 cv
262.473 467.848 262.604 467.934 262.67 468.104 cv
262.941 467.934 263.236 467.848 263.553 467.848 cv
263.848 467.848 264.133 467.926 264.41 468.084 cv
264.688 468.24 264.893 468.447 265.023 468.699 cv
265.086 468.928 li
cp
f
269.053 471.676 mo
269.053 471.322 268.928 471.021 268.68 470.77 cv
268.43 470.52 268.131 470.395 267.779 470.395 cv
267.43 470.395 267.129 470.52 266.881 470.77 cv
266.631 471.021 266.508 471.322 266.508 471.676 cv
266.508 472.029 266.631 472.33 266.881 472.582 cv
267.129 472.832 267.43 472.957 267.779 472.957 cv
268.131 472.957 268.43 472.832 268.68 472.582 cv
268.928 472.33 269.053 472.029 269.053 471.676 cv
cp
269.902 473.375 mo
269.902 473.658 269.76 473.801 269.477 473.801 cv
269.191 473.801 269.049 473.656 269.053 473.369 cv
268.676 473.656 268.252 473.801 267.779 473.801 cv
267.195 473.801 266.695 473.592 266.281 473.178 cv
265.865 472.762 265.658 472.262 265.658 471.676 cv
265.658 471.09 265.865 470.59 266.281 470.174 cv
266.695 469.76 267.195 469.551 267.779 469.551 cv
268.252 469.551 268.676 469.693 269.053 469.975 cv
269.053 469.621 268.928 469.318 268.68 469.068 cv
268.43 468.816 268.131 468.691 267.779 468.691 cv
267.535 468.691 267.289 468.777 267.041 468.949 cv
266.795 469.121 266.641 469.205 266.58 469.205 cv
266.467 469.205 266.367 469.162 266.277 469.076 cv
266.189 468.988 266.145 468.887 266.145 468.768 cv
266.145 468.678 266.189 468.578 266.281 468.473 cv
266.627 468.057 267.127 467.848 267.779 467.848 cv
268.365 467.848 268.863 468.057 269.279 468.471 cv
269.693 468.887 269.902 469.389 269.902 469.975 cv
269.902 473.375 li
cp
f
274.988 472.971 mo
274.988 473.258 274.838 473.477 274.541 473.623 cv
274.307 473.742 274.031 473.801 273.715 473.801 cv
273.246 473.801 272.848 473.633 272.516 473.301 cv
272.184 472.967 272.018 472.566 272.018 472.098 cv
272.018 468.691 li
271.168 468.691 li
270.887 468.691 270.744 468.551 270.744 468.27 cv
270.744 467.988 270.887 467.848 271.168 467.848 cv
272.018 467.848 li
272.018 465.727 li
272.018 465.443 272.158 465.303 272.441 465.303 cv
272.725 465.303 272.865 465.443 272.865 465.727 cv
272.865 467.848 li
273.715 467.848 li
273.998 467.848 274.139 467.988 274.139 468.27 cv
274.139 468.551 273.998 468.691 273.715 468.691 cv
272.865 468.691 li
272.865 472.104 li
272.865 472.34 272.949 472.539 273.115 472.707 cv
273.281 472.873 273.48 472.957 273.715 472.957 cv
273.902 472.957 274.086 472.885 274.264 472.742 cv
274.441 472.6 274.568 472.527 274.648 472.527 cv
274.875 472.527 274.988 472.676 274.988 472.971 cv
cp
f
276.967 468.273 mo
276.967 473.375 li
276.967 473.658 276.826 473.801 276.543 473.801 cv
276.26 473.801 276.119 473.658 276.119 473.375 cv
276.119 468.273 li
276.119 467.99 276.26 467.848 276.543 467.848 cv
276.826 467.848 276.967 467.99 276.967 468.273 cv
cp
277.182 465.947 mo
277.182 466.125 277.119 466.273 276.994 466.395 cv
276.867 466.516 276.717 466.574 276.541 466.574 cv
276.363 466.574 276.213 466.516 276.086 466.395 cv
275.961 466.273 275.898 466.125 275.898 465.947 cv
275.898 465.77 275.961 465.617 276.086 465.492 cv
276.213 465.365 276.363 465.303 276.541 465.303 cv
276.717 465.303 276.867 465.365 276.994 465.492 cv
277.119 465.617 277.182 465.77 277.182 465.947 cv
cp
f
283.191 470.824 mo
283.191 470.236 282.982 469.734 282.568 469.316 cv
282.154 468.9 281.654 468.691 281.068 468.691 cv
280.484 468.691 279.984 468.9 279.57 469.316 cv
279.154 469.734 278.947 470.236 278.947 470.824 cv
278.947 471.412 279.154 471.914 279.57 472.332 cv
279.984 472.748 280.484 472.957 281.068 472.957 cv
281.654 472.957 282.154 472.748 282.568 472.332 cv
282.982 471.914 283.191 471.412 283.191 470.824 cv
cp
284.039 470.824 mo
284.039 471.645 283.75 472.346 283.168 472.928 cv
282.588 473.51 281.887 473.801 281.068 473.801 cv
280.25 473.801 279.551 473.51 278.971 472.928 cv
278.389 472.346 278.1 471.645 278.1 470.824 cv
278.1 470.004 278.389 469.303 278.971 468.721 cv
279.551 468.139 280.25 467.848 281.068 467.848 cv
281.887 467.848 282.588 468.139 283.168 468.721 cv
283.75 469.303 284.039 470.004 284.039 470.824 cv
cp
f
289.414 473.375 mo
289.414 473.658 289.271 473.801 288.99 473.801 cv
288.707 473.801 288.564 473.658 288.564 473.375 cv
288.564 469.969 li
288.564 469.617 288.441 469.316 288.191 469.066 cv
287.943 468.816 287.643 468.691 287.293 468.691 cv
286.941 468.691 286.641 468.816 286.393 469.066 cv
286.145 469.316 286.02 469.617 286.02 469.969 cv
286.02 473.375 li
286.02 473.658 285.877 473.801 285.596 473.801 cv
285.313 473.801 285.17 473.658 285.17 473.375 cv
285.17 468.273 li
285.17 467.99 285.313 467.848 285.596 467.848 cv
285.877 467.848 286.02 467.992 286.02 468.277 cv
286.396 467.992 286.82 467.848 287.293 467.848 cv
287.877 467.848 288.377 468.057 288.791 468.471 cv
289.207 468.887 289.414 469.389 289.414 469.975 cv
289.414 473.375 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 16.0.0%%For: (\600\755\750\762\740) ()%%Title: (Untitled-5-01.eps)%%CreationDate: 19.02.2019 11:36%%Canvassize: 16383%AI9_DataStream%Gb",KGs`7gdeEVBp^U.3$3FZ0"]3<u+=[H\$\i2B82df!Nq\UtZbQ16l:E<GbK*NdS6R\<;!IE4Y.^j9HfjM?ohMVgY+;HUs/[NR%`/:[2$2eOZoCGc$qa#"&K5A6RW<Td(?F*rH>-1K3;K'"p&t,AG>2jhdPeJRlh?T<<rU3.c;CJ-_c)8#;UO9TbjQk'*Tq-.c)IV\>%GCA;A51CUF!HsO4WrtEgg238Y%?+rfDl'4i_jp5&n8UZP/[sHY6G$L+I9r_8WGP/F4U;r0J^[G2$(ZM\kfZ@P3%8r!D0]N`f8;c#%(DAXB;W;6iJ/3?LkV5-uB^/+ed_.7Ur)qG;s'E$iTCCN)QjJZmZaZ:?,7OD)d1Va>h\rN.5%=En9Tl[4X>d/5k':a(6MU+*W&?,Z%G/+5;Cb9?K<ocKm5?(i2%C]QHS]$Cq3=20=ka!H#pZNXq-jP7*-(Y<p;U?,`VOHn)o)FMplM1M;mo4o$lWUhnF5p,FTulnP.B(U^%]7':9!g>UL@fBFI*#>!@6(?N3?KltaCC)YA_M_03\*u0Rj6?,bQ]7Y]=F\4E>g[sU5tar;G!bp\0;7^?)3W38=Q,I2X>1p0UN8Dp%9-i495()$7T9a8.+_lZt\!lDVO$R%riQ4;HDUOI@qVeVOP1JB*#;nAQh)NP>O"e/2I"">Ac.,FSH5.iHd9gVIn/=$2V1'oOF[,IV%e@j=m-1Ke^0C%&u>f2qM0DHLTBWojXYI9nm:1LnZ;P./aQ0QCUi_<6cf:,1B;W?g.2u7#=Z,"5C3,B@f1][L1D3HN8)iJ3]UW#*C%KR??Sq9SQFPC&KuP'Z>7(MKuF,H0*2O^Yk`6EQJs>A,oA&%u$ne-aG'_n./^Q@I7?"i=5WllI^tTYr/d64S4u-3Fbqdie53j9H_'%X<,tDj]8cNEYPf\BXZ+'8oX:+eIJT6V@<`Gem?qk_c\2>m'P%NL\5ti2f39%^?UiUfk(ND:<QS7p#mdMQd\(n6'3lUD!_/)]&P=1%PW^6iW)Up;bsLHl>TEI1+l@L9-K"b?>7i_B6*8Z%5!],6QXPHaB%'/N<$inM6B&sn3V^55/tVHrO.1i83>hWa9`Chm,L`&?k`jgf%%n6/+"9)?\i2k92=JjhcH#@oS*RHtoeK7fZ.k>[1,$g,*riKe+<$nZNQ<8B;WthY1ek[#/i@`Cb"-U?l5tZ2?k;MJ0N0`"7>$fg&%>rQk([rbhuFBA3Y?Vfp#4elZ_S=VYrqU#bi0]sLPRnGu;k%cCt9g@#kHGf@a7GTfsfpKtEEnO\EQd2FJIa6-I3@AJ&XIP\7E`tAn%c"4679K&G9Ac8]sFgFiojsT;N]Um_qH1!k2!$eE9#,,r2S<]I+8iLI`>#I:"cS`fql^DPa[eLq9ca4/=_?\,#aVTT5Anq_199Ne[%UGl?=UJ(;U\*1Ak76Sbf9PT<A[bT7hnNVE*I*DroBt`^.;D3>k3nn55O<n@VM*Hqlr!8X>C4oPPCQpl;5$9COdZ9O@ZW\]Ja^qcG%9I?<%Ac.LREALA0c<(r?@q>4jQHlCLl"iCDQVOB*qJjtZg.kjd1TdR_<'HRAAQ#LlTCPltb":881M*@=5OW7`N1]Zhht8#Ip.aEe%#;>Q-]Sr3N;P*'^F.VFFT&gi]mV-Rqc+4cOjn^SQdC!9/2-eDJ4#n\SUn*b140IV*B.)L$RFFt&FRGGq*F7sm\/%-:3d8iIc5q+/%h<Dt!F@WZYG+O.=FrJ,:[VsW*CtH+4b;T1JY]]fmCsC+,=Y!"WBe)V:^?&OYAb3*:RJ^i&R\a5WR5]2?=SeRE1M3)*;l4JZr9MeK%n`uQ#s'!>Y#60k]n\6!c*/Vu1s5d_iAG^l="p'-:RFjagn7SouEPtXffFQGk;$Q['Q:K"i&R$uLi&i/%-jTStZlrn'7$\Nc-jt>]%)H"d&"Bpg[e9$PM^6>!1&qeOk-P+'-q+Y<"Y_#MAO^e%*\iD\[L*<u[M<A^74dVP_-WWnS94j#8o=jAQ`2;Z:af8'?lhV[mDi0oG%6en4'o-l8f'6fqa"ZGn^90DYVn#&_YZDefs:/*O7BQ'ncZLfBJmEIS[EB%U"R$otYI#b,]Rs[3oh?(P?oG4-d5sMZ8hF_H5F1dms%El&!69Bn*$/W5)KBeX-p0p=XS4dmrH-Cq$mpnI(:NPq>N31`G&N=Wb#qi9+/ISqC"(okc/1Bs(#1q3pEV@R4I/DHA]1hhbPVr8Yp%pd$e9X8O@plG6"dO)OEF@=$_mZhCI*or]XcFOcf(b)B;fW%h^EBX8DR1;YS6&<n'^(fV=d=GCA2[le@UboESM#+Ip)H-gQj4dbkO%7"4dBTC2`hEL63i!]3;mV"#!f)^]4GGaL`+&][(Q9d2MQbX!(rZg"q&(,>,\a>cr)kk'iDolX!C3d@ur03?55SQkK19WZL@^3dTk%U0\2r0j?7SVc%4-*;@Eu@c<qoV++goO<<7/+*ZE>q;0;9X/T^;0[QP=<j%[U5n2]jM:HHP]'ae;Vu7:smIK$6&U&UXZ$JY;ekZ+s%r$YN*dc`51T:WG\1]qZk'g4]r[lfqVpq'dGT1rXFC3J]SLp;P]-I;[`l(%RqaYWsB%5Uds+/LHHZbhhgE<YIPj<^JDQ*6n,q8132%_8N1?YS,rknDlJ"2-u<JL2#%Om8!8_;[I3X?m7q5cQl2;,@@j#,rL&/$B>Lr+Q!UAGA+ZEA8S"8Q*1M$RCK,+d-=S>=Il\PQ*6o_%5A6D<`DJOi[uqLc_ra]&Ja7*!j_HUu/uI4!^+?]#5N8ajg,=uZ(boNKb`!o!]ARXk,3VaG%(`X0%L;Z%ZP[LM[W\rrWl6Ye[:pBJ%EbuNBohF>RLA?luCiB%?7aN]nlcmOEkdA&]=l9F,Mc8IG7H%$9J=VORcX+j#-].M!^bcFdAc^AF##*T!@(L1Udn-l2^09Ve^"g3h%+k,LsIMOZ_,,X8'VTG9G(,=&XVHLhoMjXLE&X.>f,,R?#R.?&I`ONH5;lmN*Dq(!]IKYpgZU1YjpM\l(\iJ`'fOp3cDm"5Sm-M.6%V/5XrbQh;1\?=61=2(3b8nXB*q);0i24<a36Dr?`(M`3^X-uMuFYZaX@d(5JFXX[8;ib?^9%RKI@^5p^lCn'r8LnJ8@ItKe^+Xb+%2b7m<E(*V2<ofI+J"M^\&u,*YB-g%09JsG.2g=fo)F:W,.5WjR>,tr-`SdhU4g&5.,PJ]hs"s#Ki)eL[lZ)%PRTp`Yl829D`SdCk%LrFOcX_19%QY$bWGhEtR3.FsR:Q%udl0$0o2Q\\\QT<sQ.$Gk934&YBjOsS%)SL[7HF_V`NKjqK1C:PK5cOE^A_q?e7hSl*9s"d$%[3WS<0*sh=r,cFXN*j]h:Q&%F<pAeBip[6=dH9^Qi[7NM<59*:\iuC1d!6&mF+,.`-cXZ\(fNAs:&j,G:#,MeG\TrTTil9*<J,H'%1>E.6<[kNR3glBfqaG$kM])GHP\5BWE)!-T*]-Xpi9gf[+gD47<al$S9jh!tE`r/!G1;`>\"K>2T"K_j:%cJ6U+&h/V7)F?om.q?%%"eLRhJeq6iSUk#Hp'Lc&12:lkeo_QfP\hFGuGX$Q--VHole8<PK>NOV[$[MdVl4Vq_OgN^"GB_V6Q4YbOg&Y[mD7_eBh0nTj)Jl%.E:n:R2YoH0)NmFP`0[ZB1fSXn`9(jkni$R/\1m+14/'(,B(nRi]-9\Xl?D#E8GKb=m4l_mc_#nUt^,,H?(b*j\J3=+,`k,_75W*%\5STTZC/$cXVOkGJdT7(,t<pg6B<Y[Vu=__nm>_S`?&*pXANOS&bQmFmejX'c>TpuO/&JI\%^pJ1@IoM&Wa2OWOEMnEiW%d'Ec#/%l?T(CK1n_A5XS9&1n*^NUA%9j`.a7uhoCT>jA.N.Wj(;Y9$>`Lg<$n'l.8tNo?Od[dT5r,_Jt/lNLD=,k,4L9@iPcf;)]Oi%T933%O=.6j2I7MH'!L0RUg0n;WXc"5"6j:98oH$3kJ#l":Kl13o;hUs7QDQQ6t:0S8(";Jf8u5t:$/WGZ.Q%!`pCc98J5`ap$'!.oI.\g%-q,%[q<XROLF&/+;(@k$p=:)!kdJ/#ie,D2KqFRN5o-;&BZ;hkddS08;:L37j9kfoTi/fZVC+$nf5_5iea7[AaK[po?J.oV?B&@t%\^`RJo7^AY)FoedTdosZH<o$X2_0NjL8bu-5oE(L2,&E&?rdJOD99p[lnbd'HQ1k:<LhT*N(c!4B,sC!bJnEn+[c_[RsL8Q.tga?%T+s]jWF\ftaeuc_i[3FR3'(f#$R(D:TF`<e)Q)@`bR,MjWXqM3]nI#;Uh+:`m4B`>Lp;]6f2ai:&0_VHVj6jl=Wp3'()0*R=MrVr%o'b:d\2e[OEMsXW$!\.oDW1h+EQX#JGlR_es.)(Zg]4_]\HuNi_f,O6BrUKp/DhUjFL?,b[&cJ]L1T)B0=`AFj8RH,9Wh#KrlSdj%1BfXB5rns:"Z:SU1BfX7:br8tSI-ju,f%WTRd$_ceP?4UE2K4=l=mbSR^l3Moe]TC1\ESIl7'<hEHJVcYLA)W5Q1$FS$@N%PE7a:%ir1;OAFca5'(TCp&6hf[PA@pDU&/iP^EQCUgeAu4h^e^?<;%eqT1?Zf:t?AbA+g7jiHT&@eb[?3kr7\'MK5g5S<Rfah_,ct'P[c)%FuIWW!g0?]^7n3A@<V7^m,j;bF9$-#ou?@`NShF4<We\,9O,]!\9^M<kj*thcu&V\9@3,gIA[%Idhdj*:uQmUSq$\8/Z-L*\J9&M%qU8=&<L7RBH/n;AQYOQE`IFaeHRb.BXn)Cj>9d'ndW6[gs6\+Q<>Y.[0-62GMYmG)ldW+!n=,75o23+0&_*T#e]4bTV`lRb(7i$c%*R=!3WQ3@OkLZDZ@SD2LX\X'(k-Sop.5tjY4m].*AVFa,I9$g20b!W41MM?uU:6V.dr%q7rR[u-4*;9R!j`ojfoG10Nof`B'5Y*e%3>Kb!gT_`8`+M/t^H_Ram9![;a_]"<[UY`8<BHMUl=C"ck-/K4B^>1N]@egu<9-lQ1_DS!V4?pNc?:Z&^Qb3'^,UpmPAXaf/*E_#%6)@KZHfBo4jjUOoID8[uI=@@r2;!?b2\8UCPES`laOG"dG19tlqh5M]DqcZ*i_K)u*6aeOfACmH[Fhi)7`>irhjD>faDF&]1J9)i%@lc')[@--@AiZ^Fj!r8Z5Zs`@P^^@W]0//##nkfbRmBkT-a,+(-_"$uXfqaQf.0.6]c!'clchb5j<j4Eg%=Ir(7C]V$S(d=]IZdQ%l.,*0Dt6d5s!q/4m87f^MX%LOiO*5WZ=OL^GN%"U=+Nb?>l7mh=5>"-Nq&.8<[0#Un'I"8a^=CS%8KF[FliU:OMCH=lg"/Q#&e$O%P^&CU8[H@Y'I@'P0#+Qhrb55hZeWMNG;79Hb]4N+gr1gg1!<j]YqX6u8FAej1,stBb?[f$-SrqO9ZgXGLD+b#$V[E@ol?_"PoH*;%q3=3\C88aPEffh"SB8P6i;J_Xq!:QNPgsqOm?.;`=J+.hq(\a1X[hr#aee[8$alk`N8:r6pm#lHY>?:N2`%dOe"W;.eX"I_Q^M,4%o4Ko*e=*XL$S,kem"uZrG-/t_]iHID"_UoZ`1"J!4oFGL.?iIL3]JXSl@7,d)DQ8,2tdTE>B-`io$p"3A'M?4_7rHmaY-C>9n##C%\%-PYM)"[#l7Y3kJ#8M(VcF>Y:JP(Z)iWV^9(@#gN=k3;]XIipmsPL'hC9n#>3PIR;Z/P)"LC($lJ`rBeE/,6iE6_m5,I$%lEd<f%N)fd]0#af(;U)@l%4f"QGmuK5SEoZ`@a.&jB6bMXAM4]N]8Ulu$(+0mgmM^TVDj1<TpYoLk%4[(9RW35R$%aG`ea.9'Calc6`5VJ%ZV8.VR(t6dn1WdoFs0Vca=I\0@8YBCZVYHS.PL)K(q$p&CD&8:Z*/Bu`SXfYEn,l.aiTlk*#DdE^);=e"LV\Is*LF7eWXK`b%0cj%(Tl3ug?!Kt<+[g&A>@gd\J"(YD-u>(c\G7Jg9#Lt01dVjLpNI^gM,`RftFSQ/_B@WPi!+ha3`-kp?ImsFn*Q>hN7hJbjHL>h)j'R%O%t.F9"Q,h'W=g,1O[]Q=(BlPDDh)GU&:%3a^M)mgo6Ae]1H_C3"FoS`dkD-*\K&gHD9Vl;O>.=$tkkh*$0+VME7IkX-iH=U)5DJ%dOLt.1S<MBU7Nes)Kd`XQ9i9j)>*VJ8*PchcaBQll]TVfbq';eHo]fJL7VYLF87BZ20k'<11H+e+g[PM(,O3EVQ#J3AhhbV6lr\%%kr6r$5A$ANQ-Nj9)\t6cSuO"e3Vi=C/81IU9ilGa_(98g)@;f89s^L,(,T<2\7+9PTIJ/9VEANqd;NpT'Pm-c)`YO5f1W$d64E6@%MjeNce9"?$JtMDKcH`Lek:3A.SOkd4`;T&j^"J8>?T+'KET6t$eo^N6d(d=Mi2ZCR(%N:)V8$fdPsY"g4X$JEUJNMNJ$-a^F10de%A%b'2RU,l#Yun1dSpD92[u@:&OZ_:^#"_?Z[,3'CnR"ug9g;XT?9bjm_S"+[cr)gmI8Y&lJT=R<`%fklNN\kAr]Z6]6F`ar:V/AW%91RPif`(/W]T]*;H!OaR?K8Kp`sA@C4'_TU-J)t=3mEjT0o3qsrN0_ki@iG>mctXdhO_Z7Dr`L_keXemYEh*pCPSDMCAFpDFQAMX%2:M&4q5akq%=GS]AEt8M,r!(/^=_HaWc_gT/,)i7?423n?+h:8+*-L]h)]cG='c:2-SE-((=bD9=JjJUR5lh5@h&`9`c%NjnnW.q%Sl-RjX'<9IKPO7f?an.H-%*TT-kk!X5&0[IJpOel_E@&XW$]okldmi`(g)imK$LPe"3$Z(W-_.2;`Co)#2JtdaOj)/kqut)B"<=j%%H:V"Ij<0?q#:)W/XtG!5;i+J[:M):n?goT(fR&->8CH'9W]30[BO[`b,10'r`c8dk%%>%DrI,p3rB!fI06_Rk9b/#8:Pu(.(L)]%\\3]@;bk"$iW^-3h8[W=rof9'Y/q+-aP0aq"WD.H)=XV+_KnOI5Jo[-+VP[6T42bDfP[.cg=.%1/aD%.;`&P?"/ni*q0\\T9r$e,%$J4C*?$C6Lhsl+^0+M*PlkN=`blK=Rq!*AoPa]/B<P5u%j+l53co:@uIXJ'R2Y#61mg@j93\BF<6'K2NF04b&h@Z,e8kc@OlS2_L%Gb[CT-s?Pf9?Us#m=3=iJt_%l"O2>)Gs*U0Bq]+ME#aLj;k:ES&sLe[]Z`;h1NRu(YOD=Y:9D$UK=&KIi2!0<ck<gQQaUM=FJZXG%hd3^T^9/(P%Ol?dq64##[8(19L-@a_rC\c`e2g@>>2;Ed*F&VL#uRkMQ^q[u'J6hH.TNJGV^%(+AB7nZhX@Jfq\'M?V)OFYVm^a8%-s%pAh`Lt%%EQqTH>S^ti9N@'"IorsbI-OMF"\GulJTiEWFl#-(Y?+X<hIq-J(OH+ieiFhX^4X;[c>h'?I5La1'coUUCr5S[)C-J%/SS=YB3>NmWOnI/H;a9qF:FePie+.s^6-bUmg=-LdZAZ;l&Qk]n;T\_-Zgs14RqsJQ7*@?h**cF=.3@T,#uKWp['M!Vs#%/Vb#--%HCj*L4>BRZ/ApS1L>c;o^3(u.Zi**K6[&SE*S7/hR#:#cSk1#?drOY:VW6mKNQM$cmQ8f,VWN5ood=AMOe;kUTqBBO\m+TtLZI:3%;LI(NGU^!Hq-\M,Yb-#3hmU?8]'1-G.Qq;Uh68K*5Uub:oFYkIeg=P`1%n$"fIKpQG!"Usm2aXo>['"O0jJ(aiOG=b)"`B@moX=V%$Qo,BGH9Q\">:pVdJL\h6295AnKP7ShX^%sr8#-*=TR9cL#TW]9=#Va"b13?mAm35I1uXu#Kt_`1bS,Z1.Y`\*Z:9+83`ibeHi`X%,G;<ERIkSYKP0!C`_1UfjJFkjDIO#AlPnmAXsimtaA'G<l1`jU?.4&R]l]U.+jGI)a6aL:U>10J=1H(XPUU<crp&ESose>E0`Nf#%f_^4E#$5ljer-(K`G4'm].c0nZl8p<6AN=MT#ghlQ<;rR$C(`K5S00'K9Q"ucjEY1Sd0>Ak=E(4RYHj=T-*&ON'G1.cQA-f\)r_e%makW4575ZdqBTF+g&aGee^0jYX7*52MB+HV':hs7<iHn]K1T/2n1;GB^POZu]<:17%Bj*,=H?'KM)c&tp'Y3FjRkrGs!I=:92(<9%@-<S[XhThM=WGGR8Ca1Tk\EClM`R;51Ikr#`D3I>Y?nCZqf@.pegeK.KL$jqMp%-1>V6L5<af:q<,R>Q[SHgn@V^A9@aM->M`4oX%>DA^@>hoq(ekp4BodWn37IOfbf=NXKZ'$nW?#a1gb*2&'hXij1AXZ3J1[I\kRT.E\cbJneXB;WnoJFg^[%']fjZJ0ff=`0P-L#i)%bVG4ED/opo&\`(I:FE#tGp4(%9S*"P]dK4fIW=Y\gOHM,f0+h&cn:R(*W!8:nGhT4mZgal+qAfc)RI^gcVA?SM0t":/#]0AX%o?d%DZ<Ds#![]s[+%EK:MoDmi^DK)bs\8V/gmT?Tf!r+aLajoeN<.j\J?Gom:Q;ZA6j%=j*'ofBN>>u\u4[0Ki2VmZtc:W4trI,UY[&*%7?^d$0JuS`U!tJ<q_;$N=.3F]V7%&:::m+M0=9G!Zi%Sri\L-oLuH9tNP]O99&d3\mki$B/[t#Pp`Mk?,_sAU)Z,@\Tg>&[Q)gHJ%\!4:uT[9Em_Lb7NM%f(Eb]8PDs"ESKG-ibVgW/tRZ]s\1/O"Yp)j]HBCm-PdAg,&dCjOeD6Je<d[Mbqe*8<C=d4P%4"=?$d9OM>a%mK@XPoZV3r0]A?Ie:&*8#>mTQkdT.P>!_aMO>nLT:#nq.G2]q>am%5L%7b9I.7B%,3fV'qTm#-=S-Fh`H6Zs\;6nXV+&i1O1`OM;%:(XjCV;.^Y,%1;'<d77'U3a=4AG#P.1.SPG#`<IcbAj4Ri%qgC?p6ab9'&f*YoaODG#Xd@X(mA@0&I\91"8tj;DPi>9p^GQc\'eO%=.GY],EI[PB<TA!::ieI282kIh0%cAJ7N"^W7FW#RWL'Z-)3n(kGdirVc!g;ng8%YBJfQd0s]E%`#a?W+?Yp="C!-^7kiK(J(e2!%HGS)!Zd/kBj_:D_O.l@Qc0]>*^E$q.].J6m`Bj_FN4+^(3(3OuVbWcJ4rj7ZA@ml`<i&Pjh[^Wr8umlirld9ENhj,\^HJYW7Xg\9%T-j.%3kd5tS#)d"&SHsN(\Mt/f-*.uM<HB7_;!WN1>jNpoq%*fau,Ic<J_<KQ&Pq2pbD-iD['V\@/j-/IpKH&PtE)N"*)O5ESQV4%j+X?`Q/t(EAL@:X*Hpg[<3EcgaN*Qb&a4=9T_3l50*ejV*.cH'*Q1G])Ge/4N&V_QdIg)cnI$<RGUQbg_''$qToC%iL\PO%];Go.%b5VSZP.m-QfPC7t`ZV90Khu!u6E,oMKj%&^c>gEn3pgCj,W+;5mF2;Ng%Qapkc[0BH;/k>"@76Fc>(_V?C\@UBJbq7.Np4nlt%)%%njOM+g6H2?2AR6kdXWh4)tC:]SihaFWh5eT)AS<7U\<1-_MAYiA%?b\+7nP;7QV"87EpnCL,Wq7P'g4Tq.''H:290,WD`+%[UF%P%BdAW0)Y%uTSF=j@-ruP*Y>K51"jKW^q"pDDEAm[0]d`Y[raAHV9X%XtGs78(?'_IOI3+?D#'ks"5%rNA$>^@(oYqo/b"B!uFn.b#%j(?*eb4`YC\MAn'NE3?Z_kn0g4LnU0[ZW#/>&jK$H9=!HS%J.;*]Y0C@@K2)a%h@U:r8Y68(Sh3imBmJ,j?(r9iqBWq8\3O=R:O<%+"-pk5CBQH7>sW)($sUpTI-&S!>-/5$d=g$?"b7FgXSW#S90q@_%E[])PQjA1$)SX>(CrZ<]99';J2-u$3*K&mVk:or$^oBK+kO-%V8VoM7(,[NBTBk;R%oEVHPf9%K%\W=U>?b:_::mD][\[Om]\E[iQ&k6V?)D#';R@a/ZM?^HXl-"<cLGicrn'X^[<n5$qTq`^/p:R%D&cPXp4P!%'P4o5R&DAO,qQOr98^#:m\hG`RrC5/=Uct9bBRA2QS\\iYXiqd"Da34MN+K"X]D'ec+APG1"U\FdcVmYm;b;<TB:+Q%Lfp;a8jP8mP?r&O)I7XCXk&k.'.jFp5!gt^lXSJcTJdjnA=BEiJr(Xi;*W5FTkdDm""p?'>jS-`bI+VH@i(u&9h$eq/G::!m+b5Q%%P4;6\:fRfab+-`D/`1b9qb8gn'f.igR!8Z()&ok&Lri)SU/U&(ulK0Op'"C)6&<0NRk7h3EA`NEDkOD=1Y)q3Pnq`b9%8(/B.I!%mFn+,^!A>MDst[rL#XptNsTlB9eaJ]TN+1X'e\X</ip_c>&0('Jc"<h*04l%'1._mcke_RV$VBtF26i#eg`R-`A&3kOJ:,bWCQQ=%6X=jj<M?#u.97M4cLjdUi5dR7$68@U5h%isJ0JQ"+gke&kCA\cA=Y(#AC+QYX[/pmmq.-5D+]Lf'"puoKP5S:5DhF`.![iX;eX`C%0/prje]u32+36*g3O$mA%<LPa*\;bRAW1H#<KkA9fa=tAB"[ZN.C=h<Gc-#'9sJgD^QIU#6/b?'S/AKcW!'+!;-__6,[Ut=PBba\%?!<(kAq'laX<BC?h"J&LUZ_;R]m/,0=8CpD$36Z_CS`aJ)toP$NUkSeB)QqeH+r$U8q3u#@D+B6a'l/j_]hMZ^i?']>PK'ma2n%p%"_R(Mf;'&GZKp96q#J1\0c^kU?\kc"nTrrZP-+*8TnSQ^PtHh6A%e;?KH_A8A]!VbamlW<2UM#f?)X$ED+=t6f^c7LBJd`JU>a#a%K@B#1Mj%?d2TsWAdtP[q6;jQ)$khs6+JGOt"Q9ftnu]jfB0e,s.f99q$FL!J\;5#G(1FB[KbhBqQ0QCUJtCBGmS"s6[s20S\&I2"%LAb9D,T<K/'(oF[W/PY>&i/T`Tj16TCYUKR+l%*i*o$'h,GZ^@Fc96-&nTo.-mU8Gme.<`Z@p%d\L?3&X\SBpZe_cqfs:@lP3:!:%Lr*\a'(qIFCs&kJVfn)143>n:a!@F2Mp6:;*Sjp;8W8%jeL#5)9f_u1/r0,L`]-6oob323fZ"\&=de-V;b0]gUg597`bi>W,TSi"%DF/gCTY/+-m\Y:WcZXecY,NMRjj:pUp\Dkoa\c9+j4&.'X`GZdR6j9LQHOom(W2V7p.2I+=DR@s'EN'Y=!s%.3@<buIoFuR7eH-]%UPFG<U_cqLoe=SM9^4[gN/m)era)UTASg]RIku@`W#@i<2bK(,p38^mpDlY#A7&qfhD)I`a.Wme*JLU-rSj(Y`99=j&83%>/(u24%NlabYG[*2HpY3)"ajNGhnZ$ngoVb9?<<*7<bE:7?OjcLm')u[Q^(MeH[nHACnk$B]gE)Ia)mn@<,MAMod<O.Bd+"e$.UtIB1o&^^%n>oPOXqf*E(uF8&o_1A'EEP&gf_<QbYE**f<&&Xd_a1Y]CEt-eYJThM@3j_bdFON,/mN?.j,-<E&+#Wb-dLFsZ2US\PG-&aierjY%G5H@?dZqr7N?#1l@CPH?XD]BJ3fFcbNU8R*=OA%ffjW,QB]ll\0W:KjYbbA5Lh+(/7@,,0e.*8_*7VhgT@J$DN)NX[RI+k;c;L`I%_@c<`lcI?I+."nB5'jG>Gdk=qhLE)!hJ@(0cdkj,GBWP$Q5:TQb(XBl0B`#WS9&UcoC^\pkLPj)h+nQQD`0[G2kMmtHh4g[h:&`3%p0764=o2uUrCc_?k/MG:[Fok<XNo(/Y4(4]L5gB1l-lQ6FuM@]i#ksIoXL8_-6JaaGgpWq4[%-9k3(@O%pSGf\'JdS_od#">2O0o%!8ftEHL0GQjKmEEDq!Sn&)PUVB2>n*j.V,(jn^@mRo^[rV%,<'2kqH5D7B4aF5oC_H#p*QX=e(Nk<&KnXjY>H4<lBVQ,G+uo(fDW%Y&%.qXdu96g6jbkKAMBDYP5@lIJ<X$`fgXGAK7.Z/+_lp9:\9&s.8%!D;RpgGi/Km*N\%saW0.P8tEM<s4bCg0it_h/S*/.U\0Vr%]QnuUrF5TgdUqXXl[1&C4FI'=kMFm<Yuj!+Vt*aRAG8chXD=j?[or^rlWX,-:+9J:J+@!D\b)kbg-)tG*V3Xn>i.OtkN8?.2kN$-%[Gli(d\H!kX)@UZUU'3g[SG%GZad+jSZh;6&W>>5ef-rFq]Kk8RTaF-S67ETIJ)ca(06`RFN*(:apR"oc>R='2t"B(/c0^Lkd(07%\bFb$eA!PO]IA861QLpPk$]@`k%R,BSVQr)P)mmmk>_t9HCR0+FB0)k^+&GaqWE4OZ`Ae>qtW<H+.@G3K.jt..,8?N?9>m5D=Qec%a8$2;C#a'uR5E5@kJ#)H`d;3b=SJApo_<EDfuQ?;IAFl.qe0KQo^0U6VIXnf1u?E_Xe%k=dQ?7kI-s]o?[/r=7Y/N4qbB2!`2G#b%pr%2:38]Um_sFk/m)eP!n$tdD_-^p>q":\IVqIicWPc&O414fanTjEH0T#WTp[e9/e>Mp^p[7@2:)?@9[=)lfjh*O>=%P<BL'2j1%c^l-;8rQOa[]m:6ptkjOTb'\bS'N,>95i80]:Jk3Z[)8u>'p8B#uepOb>!bJpMbC,?2))BU9]:-;7q[/'#J+V\bYop8"G?][\B\-%*IEeFg!\"uc=?%I^:A^F^7.1=Bm22(Ee';b]SD/if=V4<+mH9#a`;,-:Runua=l=e/8!1tr=?GKD<#%_BJu3b@.2KhG9VX!/i%UZ%;F`f0F5+^Wf/t>O=YdVfbq4b<$UMIYn'u'MQXA1eo9kd_:XbpVQh$PBofXhO+Z.hD=.Dd!HXf/)h+&R8:ClnW)OSFt4O#'pRGBor%&*Qlo2P=JPm:>U$rShVugD/u%EdOj,pXo5,eu]_j(g5a6eP@s^<nW&4>ktmB/Df-1g0<*RY]dcRP.\O8p3OIFB]m9.ps@JcUrQ1*%G(02E<r8gp9c\W;af^pO/`^JnP6XmSeD^#ql/nJQm6X#"]m;Ur^TjTr5'>9#a=Z"N)#='Sg,l$Sa3PLH^Y]PD^]IC_Lgn*un\HiW%a%$Y<qj#1=BY.?"Vkj;5=RQ1A_dr&cqh*VXHpi[Dh]H\V](]QDG/#-aI4""5rTm,@_3[>)Yb05`/`&MJAWY3>"XI">n\DVkqY:'&%cdG4-59qJb<R36=(*=,(?bIc%IeVIBj%#-OhkgmL2f"h%q,I_o]7VGcfk8X&Y2hN^p*,!E[@BF^8b9j_S+GmeNg9gM55+'doq%Bi%>+9F3c*]dc?>Ik&W]BpRPh)GjV3HA]H2ks`:[]><XKWRrl)/7DQG#J^AO1Hd[W%ZA4+<r#MuFdl$%%F<@$pkud)].t-i<Q#>?72c%0qP*uEma-F;03e,8i8[i6tGlE*]rP]XI>,B$'V,]paJ<??7(_h58VcR!`OaAWq\%,4bt:>jbjZ*h-f$r.6QV,a![#+47/@ReEHQ=%qWD?<MFqU\AM_9a`iB@P"J6bW]Eh%'P3T3HO&0=Wq[8&o+9SgD9*jS'<er;qW+u>%EJUMVF@a%#T>E8*3I#T%*-a&@>5#-G%S:mK%ngRh/qDS0t4_5=;9O`njGBTa^lESK#T#FVt,"qFMQjD(O=Ygs,74RmuABg*]aN6f8.=K_;\jQ,9-JFfQqse[`6STWFPj-UbLHME*%We*<k.!$Y-$kjA0GBAH;7%%$*_A))"If\*ipk;TEmP/c</Pc!''#)sf`:,U).5k_.AuU_OJ=jO=]F7$pK!5Yd.EV4gHK,_hn8G20%H[_u\g-7TG7W.=o`dklr*PQf"bAZ\Bq:to!r72Ij-2)p(nP)'Jju;j$mDF^Kle:3dV;.Pa:IA'hnlNc#Lj0)U;,XdWgcPfGikCK\%?AaDJ\k`@MZaB=S>ee7=,GQ]3rPNM:AY/q0_f7sAJsJA]R%*j84.;XC=['*rc^oNnU/+?&"f_IS_<]T:Hb5_Ng0J"Js0e*Jo]I0%%:pIdf$bk[&gE-s@Vd<u`HgkI.G?+#t$q6iY_YR=PEAlVFip6Q-qe9\-]@20&Fk?[Cqs!;2e?cWfaA5hmHTckmeTr)iQ0YpFUrdG&%8p4^"jS7A9I,k:r,)dNrR-VKc*'DE9]P8IgQM3QU9BNs$`8<J4]-#&u6R+sl\bTnmeDj@V9d8qJWL*GI\$nkqni(3(rM2K(9)e3F%ST+/pX6]2?lBp@!cTb<Flp9`SD^aUU2:uc'/=_LOI)+e/l,r!!H,(s%nQ0b\?9ZH#/\TK3Q6/=p;mbi1;dV(r:2HQHpB"dO0MrbT%4_=976d9sK*pa6[/*;daA5lBFs0;'=:B:*[<[b9;q>^EMIq5;QH13@P$S!ai^E,Q3ZWlnS'+2d$L1Y7)cNf5RF_C6n5`d0PQ4"f3%oi:_Hp!T-A*9XZJ@OWZ;aH<L:]TDYPEIHNMIm-K-h#*Mb&+AV$[E_i`hQM6_qA[V-Xa]otipKS<e_VXTjaHfU$Lg.Gk>SQj*5'C+%(JE^'4_CnTfA,uCnXd2dm'tH$OU#q;`eSW09BPTiS[G<7>=V1,B73Mf"d@9\kKfL9[GO(1am9p$/RQrh`hPW/0=lu?D66d>BZ-_C%$Xij!0AAc)hiMLNmO,o0WFq!\gIT%^HLds&4ab&=]=Iq-rETaPcgLFdrA&N"<Vf1,H.4Z/?f1CA##'S<$QUGlbFS,=UrT's[5pul%rtQt_HHMQU%<:%C*B!KLc1T[!P*%#X@9;m"T60e@V%-iKhU;SX.U)i#VFe+>]$f-SK*dLIH,#NGT8_bH^"`*3PhtV30r<K\Ae`;/%Y@]bnqq5I031),-Obl>L:Pk;,MgL`^I+J:)/3SI^q;K:)@mp-T@<WsES)-:h@senp*]lHSCi[:tZFT\ggNhC=*BJE9[>[]e'(`4^%^=UQ]eT^>K+[-tNX(T88YJ=dD9l;KY886G[O)12/,@,`nR&jD^j70uY^[.=0#hAgSgsSRQ,\"$)Hj<\mrjqj[gK]+&]tAgbo_<NL%m9Mn:P\=lih>QBEH+)?EbO;""4EeYdX-VH@`Tcb6dI4u!2JBbYATu#%[qje%bfDt0I"&R!GkXpDpQ,g>PJ;-.>4$D)j=kp92kO<W%5OYE7c.'d=ENcZ-i%D"QjQZS&.9->MgKK$q-?Zi1#r2'R/l$k*@C*N(G>`ebX.S"d?b@&HptLQlQ\]u5k312BEQmi<E_ns5c6'0\%XU[PEGl56I6pA;jq>El>k^<J8F].(9j#!`"IC$"_6t5`-%fcC>P$b0bMZ[>Na1L(qDhtQE`KX`2UaoI4K_X[,KCa?Tjnm<qL9Frh%RVE)=:eTDe<I[!6&N<iCQ&`UdD";!\X8*hYj>2@.SiY(2oQ8'ak@qs,p[[J#b?#E*=@C&3i$.$MGZ9(bOb>(Y4LK[Kq>DLUghUKD%O.Ng=fCJM:kDAeJ/+XtVk"4/dFHh2n2p0+#g$Reu?J9^@ZnE!ibIouJ4LA2cKq0U'rmO[=[W6s7&X1.Hc^aZ@J#,oGVtWAZmTLj'%+a9m_YW!8CI2M;rW.X=uDCkcEIg#2ra;qI5B_6Z.1,JCgra,p+UO2_GBRNOGEaQPgMk#F4LsN2HmPt/a@;^P]q3(P.Fa/02:*6f)%g$T?^X0P]^/TsPhLOXak_&uPBjYNm^j<AJZ^EYn->s>X-3CB4:J"Fe'VHeWNe@3/hX0fsT2R3Vt5lm\-i_"(`Yj7lD1+>hAEk]*S%\FGl$AYl9[+#66G5(Cr98R(ZP^4,qBPP$'L8sPmt2p+JX':s6YrIVnI>WjQ\c=S*JE!NpK>-;`!UCcC:h]$$!p[5]80>?=ZVk1TR%99FunHM4(t/QMc2kaht&Ck8tkbOa2SrY6_as*A9I,dk72+UWGX7K$Ha`8@P)Nus\NrS=[%NI7a(]?BHc!Ic3W@k2Kb7:u3kp=Zd3%<H6QJ<sL8OS:7c*?VBeD%12lSJMdDcWq.X2HCT0@)g6D::mo(kIk#f'KU^<bd&"kNZgG@Bd['h5['AE>H_93Fg.+R&g2[,;_e#B*%f[o?I)^IH+<t`Cu?=[10iPM;lQgURE-/?,dSF>?`;b1$:05O]grn41cp[["Nk6LhYL.08HD/d(#VE\0G=]B8MIHigp]SDho&+4",%o_W`O@jSZFoI4HqIgaBX:Xge*?Bh^Ak:(0irAqF73rTOVU(8G@CFt$D$BX2K]H?s6KAEo>G]Gcc#lVS7#pJoH<;l1F_eA*f:/[MI%_h`4^j*-^U+*eY&Zneq@K<7pRo37hMig973UiC`?s-]h#q%pXe]LN8mg"CbE9tiaELiD`kB=XU`\@Cme)e@2l.'Zq6c,TFl0>::f%E6cbpkXqU!LaPZ@IJIb6JA8m0;7#(,S`CTYD>@$Q1U"OhF:V_X;?t7%'8[J6kO*&qHIr$0nWYr(2SOrEfs<@0PdfdE_-MQ`E\DR^%H#6eC.!@DY>qNP,Co+0h_hsZXqL%-Am/ak)gXmm44YQ3Z)c#hJVssW\C,'p;J%@D/h;S=AT6#^igNV,sV>Ci,*V*=Nqfq\k*DsBf%fs`%?/0]9S<XOJ"E^W<CqX?SWgtOJKMp1JX>P#\Cr;BA886_WA762,s7q-LV;I/c_K-kZ)oXAacS([2WX*/Z!@3L\Kcu%Gp8lZ3u%G)^P0qqH>3-gu/u)o(ULmLJhrPoJJj<s%82Vd;MK+q%PTl;;]:dqNUP+1F-4j?]o%*0fIAg5@W)Sc%(m7MS$tFuRl76s8bOOH-8h%aLU5;?9A0X`o5`?p>g\_T$r/>I[!'s,Zjl7;Z<tL9%7N;FP"5X*FM*FBojt0@a-0R^ac.]#7p+6rq>#[b1g[=;)UZLh0.c5Ao$qm%h<_J=cel(F`g=;#K!EZ%eKPZTdNJ5QC"6?JIX+.qDtN]O\9e!.J(4J1P2CWu*;4<j3@lSQ@D]ffO%f0-b*bcG>Me*1i#R9h*?V08%Al%gkjT4c!<Eu6Cl<7oL;i2h\VT%=QDaA!\5&PboVtN"fCX64UH@K\VEPCc<I^YUmS7`q0=,ZL$R1"$W::>6"oHZ@U+Gi>(__r6-%hFd>kEZnYg[MWM$+5Fc;:KR/@:5ZM,?]iD!?mV;GV4NnL4BtRPYA^Kj#A%;];c7Q>S\n@/E'q"+)YDS9[(Vi6,s>:4bFV21V>C2\%T#.eMh<WR>IJ9f6q"s&r1h6fNdgn?[F3C3)'^n+Q[?mCpA<H9X<$mPerr-jaHi,MK-Y[r*FR/m&j"'H:Y5!skI$ZfB:\]_[pe(OW%dsUi\$+W5q84>c?T&qJUfhpe[66#j0iOn"tXcfKo?I$m_$PYP7g0`.ngc<cV/!.a[h0JVj,fM)R5JQNe%?0+[9K\WUs5C>N4fNp;%imcB&r3]GqBb/nU_lZ\>nKmkp_kPbX5"YerjGKM??bD_$bsUAnhHA/H/\bF-=A*k._d%W*D"j"^204)0It1gCYA_S>!?06aWrB]>%MX$4gg!AdSpS,:M4U&'u;g@oH\,O)qqA&h@cgq[Uk4;BLh6;\:Upkh"ZTChSm-'W`mD!\\j5goR#i6Iq'XW2\4pZW@Ir1r6e,@tU%>lV+X8KDEu,DnNT'Oe2J'N4U'ORGn=7PP]Wl^R44?`2`6p7\)VI/;NhGlOGB\JbrIqI6WrnlO\@"o#R%\buE.h+"Rf.=(*js2K&%%b,<PDb52]=m`nFNorM1Dr8jQbD:2[]i[Un6SgiRmpjhF:l!a+/<r6[/`oc*kPBj**9MiDqmf)P4/S%W>Fn>VSG7T8t+5=s/]o.87%V0BR?b3<m7\h;53YBGe`0_DNBTng]eQ-)CC$GGlPq;Y8.%4_f;f?PnKG-Y6=KP)1>UM\bno)rAld=80U#8jQB9C^'98te.>\qu=6%JK':]e4?.U>L<9:0Q`<O]d&$?UN-[sOrKg.[84Ek]fRlP^kJ'J?Mi1Nreu-8IKS&V]Y9#ZT$?Nb<@m]=(+nMA$/P(`r'HR"%I!6M%g]FrZcn]c[F*pVaHcTd@YICi+%;C/WD$@c0&[d'.hA&Kn4IX_3Ge_M8^ZRZM,HoINq6Cs_ZBBrRl%p.mp6(0uG_mmNNMPmN!'5GS%nU*Da9rOUk!(8Q6mMZDToTP;LGlW+]>PFXUER$>1Ui0B_!F6T]DnE8J/#bOh"d#AKFGiUEFW/08BV(bO4i._PeM[1=m7bDk]"7#O%/=f6d>aI^aT<q;<:7.WB1el"<OR(k*7<g;1J[`[e!;]9UN^N3tnNJP@oX(F^TVIWk%%SPfP2'i24).@1a'ePAY#B\+C?Yp]1T@-B%&1;0Q)WjIul8Ce[3YE"!1<cE=>s%:4^+034Ea8m[Y,1t,@VkIF-;@eX:"doNR]).tR,#n/A=E]GHodkBUUs*!ZZYmCP&8BB5f]"1%QD+0WndNcROPr8EaO@gjL:UiS2?SeJ(7sf)8V9TNqF"K2Um9[EFnIkIN25k:+Gsm]8!aEdYr!X8Y=kW\&D[=15-]rU#an8NYQg2\%,k;&HL7u_q\1>PI?@jj8Q8,5,iu&?KL//4f?uA01`md:M&f;gED$pnce.$AKBaR8;4GuIJdW-@7Jt&QmS$Z-!3j'>$mLml=&md-n%,b+jDkdG6g;%E_r6kI6OOR(U9%qd5+h_ZRn>m=KNK*l;(*d9M)L^/P`]F"shGFNp2e^.SQ%$rg93k'2"js#,Sjs4f]@K_d'=i;XJ%+ij)?F*odCGsj[XWo9L]ShB*oHpSN46k)XON_R[@pH^&l+JqMu133S>*)3gr*0Ooc=J"H@f\Rs,&B*'M!GI2u<.Z*YB*a8p1jrP^%mE:*;Z4;^(Xhh>s-%3W?PFWKJkSgtP"6kW"I#D)tpOp@7RokYNj_D@>(4$nMLD<pW/`On#:QHh$ogI4Kh_tP_/OhkE(<[ur_n2g/%N(")odQQkcLgnXV=X-pY!MG84)FQUCQ>RsLJ2ofTm3a"pRL:)HQhlHV&DcNC*C?WAUE<ls=28q*3<Z$n$=]Hmc4Jf>LaJ!9K798$%q>t^h)N2u&HaY:5Ruko,]G?GL1`@&;_(8Yt%1!tEoH4Fu%S3f1*?YGU]&hV4\O?eT2%Uc^PLZ$hX78k;0(b'1!l_%'F?pfn+[\UI%d`Ajda<lLP-BjKY`$)3l%VF/`D-^PX5r/Y^p2,@7AcTYO^DLG4L?`E`4B$kHL$NeEh<-X7^_JGU/Ie0452LhpM?7B/!ck!X!FQW*%b2P[O4/OVA>LlH+lnN;>,g\HS40aoXZUQ8l6429F7!"a78.6N*-qsT4I0F)4n&Z^INoLG!(tN8S/e:mhZ8b?T`jQ`EA@1!h\>34`%"8t'CKZnHL`1iia$#.o6e\O@U8C%Nl8TGg^NUYXXTUV0(XdTM\$=&@m5S0l#a.Rl>[C0@PI*#RW#uZkV&&Ui)QmC<-c#4seSe<2+%l'$Y5U_6SX]]it^*LAHMbg,9QdE/'1"H8#o6=/'c!7P(Y3dqE,5WXF4#iU:ZQoU@`Kp3N2,<Z`!^dh>e2T+%;-4&aqNO.lSE%*UO%Wf9u5:/X]m_e+4s&=^5AbEgX9_"E?^&l&Ote&"L()KUTRlOd&@i2-3$'F(GZ>+HGl=JEE.8EabGKOO.6ha3AAA-^b?%<6?EF6R1T%dhZ9AE9C.KE>i-lkq4=X20V)QSjnnj08f`S)]j"^Zpab4DM;HlW9LC?=N'Hdn:qG,oFpL_EaKeVbn()HQN++f\sb=m*nc2l^G^"8%?]WEq\6eE/hh-bVL>g'sDYb!l>p5t:WeX!"SpNf\@QHZh;ghtcSb&b'O6E2GHgq^BF8fjOP6p`Th+[*]Gt4&Z?f'>'5J"5.M6<1e%2lZ*h*DZ7>XNQG^kqDFGU@Y5;::qk5dZ,]8-st^$,j)eIo811KgeWGRl[Y_u&/S<]QZPQnoB"e)4t_4S7s+aoP--3U]UUcM*A?Z;%;U7usUt#!V/h)"WPZ'VmFBQ);HX=iLV4O#q9r[:ekEMX+FAJn!,ootQGo7E`3aTftj_gE*;lSrV**(ePGpug[3aU6;SNj]e]8@D2%?-Zlt>;7bhZBD&oSC:+(l*>1W/b8Imlhh@*Y4/VI3j2"XkB6df?b!:JkK>ojr=Aoc(\SKfmW2k#O%qYPr!SPOCFJ;__IDN\>C`&Z%;nt`oVP.mrI@Dn/%L-:oK1p@Hik#51p!/9"flAT`))GoOrM/Q3\,L?8(X;d3jGFD*J&_a#'2Eb"e$[n:b$us?&6af3-$E\:-j^Ie%]hJh=VNDi`*POcr$8eGZ8Q"hDJX4;.UT'FqZ9:i'Skjb8U'[2!&4O@P`U"U6gQ?N!9K,"7(D8nf1D^'10\?k?9gh"Qaf:jfM@D';%THtX+"$O-q"pYG#mR-Tu[X^2uh)_q68M2f?:n!]lG/o:-9tG.b%djt!%l,*"0c^:We#3*df:YnB0jHUuJ<2>eKEInhKTgl!c2geO%'tKPI].G#IONN4uk.Bo(XpqSrU>*)&\NF7(1[oL03X>q^A![s*"'C@=9sRZWc'S[]2$=SG';&NZ+@d)U!sE6V+Oen.&:*U6#kCK!%:#Zq>4IWJ_H2F`u(JLQ`28K3;#1"05$ZVj?2.(_PU:rntaOFll)KUn3gc'aW9j/.*&?-7cBlIZDcngIu9^n2LB34W1B9QoGp`(h?%#W=WZCe5V>]HrVT4AQhlYW,:AfRJG,clGLK#YECq@j=(4b>sJfMc7kS$A&.D<3ebfZQGur/MekPj"DmYTF]0ug^DFOP2PdDV@R+A%7s?q<QoA/':G^+V6>5$'G/a,+Ga%,KWoe$^Al*m9nL!,FOjbOF##9<-3A`Lob,f9='p0gnb`Otr\T!4DKRX[@=6C]l81D@C+U_p0%-igK!GR27'6lGQT\h8FJJis>O;iUmj5RrMXR,BU\kF<$E24tV=7>^k/$QUi[=HfUJ['tj_5N['.D_r8ZN_YTHq0Y#jMpT;LA@`b7%l/]@Z7R2K:Z+$jQF0f9C4ZIp&+<A`MNPqD7iDCsSj1AD+40s[eRmFuX5!1oO]JLLs=G9uN"PA.C)BE-/4B%:s27cQ^]C3R;n<bR8%c+BFhJ!6A@!>.b""<]!u+lXrr+b,.>T#W",JWPTf<[IsCh]Y\0U#qH19:Fi[c/5rlSe4Jr2EYKe`kun=Z9=0edL-`mnTi"f.2\C"%97o2V&gkg18^hf5(Jl<a6WeqlZSbWX`#bEfEY14njDEZ47)LoKKmW`V&86)t"MP)]njAMALEL&@h?`47Glff/TA5I6TE4MH!["4.%U_T*M6=B('7D\dR*B5:C,op^*ddh59*Wp)l.7:U>?F)4+Eb\;QEIaff0aRjPKrkYpPJZ?RSBa,[J:)$6Br1@dCe6Eo(]ge7/$+hh%OJu%jKf#5Lc)$hKIZ/>M&O]niBSPaBRO+.[MpNnLqs0Rl)0/6Ec7"E`O<>+VO:QBmYmSPY+jEh+c1M5c`WC,l7CnRr!%l+^<3V%G%J:M/eA35VI\?!XN'F-NeVjJ`n^?[T!B%bn/6_[7G56<.:NX:4Ue*o[8&WCdNSut?Vg=tU,&o,!$;4Ed!Lgl3iO9H$:?!1tL_RTmo%`:c#nX\-esVrHWqaQboBU(=kGp>b?</q5gf86cUn);'](U9f@^:_QhI!g/2q<&9)e%3p9'OQ.:GJ2hSh*k^'h-<di)INtaXGru/n%5%/st/3\G#h-rQ%(rWBW5WH0%C&hP2cTk5c!b?#Z+Wq_B=9cii4^ALdN03'VGSH1[lr]D=1=5b)"XJ(4?:$`I(G[5rJ,pi+1dJdO%-:1m&"<Bb"1W8@334@4iV$koq6*H(DJn,S[gCEB\>aR9E+]S^rP8FA[R^jD@lgX^TgL61rHp!$do(ffh_,e*l!(gO"gl=^5"X9P&%XqiCWFB9ijlM7H\X0]ZpC%JSU5SLCb[Km#aM+It@UpE%G6.XK$mK:jlS-RMO7Y+S0TWZ?W44jr"8'i)@*@.Vl4qKlBS33"+fgn1p%A\nJR2:-q?VJiGjO:#PHNIV3`@Y.`0&K?au_0h&D,R#2N%?@b$6m>=0#c:8^I'j.h)O-P!k`N"p1.LWdRB2*/:m(]Jc8\=_\Iqan%82E@/=i-R`5-oo19gj)@7ut-97R2b][Z?g45l)96pDm1H9nTs+d7\-a_'.'3S$4M9)@DBfWlSQ]LmDeE<Wj[DAKNt]:.M#ZBmcK5%RseL&1e]g9LKp6$BhQcQMO=MKO5&?j8;X)S9a9&+*`#m.SlI7ZoS?3dm\b2qa=fQr0Z/3ehjDS(AD1L[9aIo!JF$!M"JM<"0GE\-%0TDr4IKTds+Eq-2BP2AFSKWYZ5\POP4jl$\T)g8P(l`9M,L]X2cJ]3bJoE&=Pb-&)<<dcN1J(N5/r^7#j)^Xt7c-[W@DU9!Di>Z)%r^:&V;&!IWili#AkRfLkT!T`=CcDJ?[T*l5Adc':Qir?tSQh4nYnY-3O('?Yc,LAZ>t9%ui0n)g%=\L'@7_Z(#*$\HN^*Wn4^GWc%K;`q`DAHm<4_7P3_\F-KdU3.I9O$0\O1/4.k/q#!B*u,0p,8Vt!"p(U+K=9#$jqCd+fp\,5D-maZa&J_*m'_*6#%d"J[VH0M<@8m%LdJP0e@c@qWMiQ/??]p]h\:c6JjCr=PWe6k8llXCqHs\%.0UgI9W72pPQX^VRFkfQ+K1USLq3d($^O0*>?\S3rkJg/f`c&?q^css%RSkQdWa^doOq)-mfb4CqMWGt/64ODd,4&D[f8KbI""@lY?ZaoiqM`N"UBA]:-aGRZJWrG[JE^Ls)aJF^49:W7@7g_Q/Dh-Q"]'eM%:3O7L/(n1I.<o/C5Qk0L)i.?']o#4\A]oaKNFO[[!MUQXFc`U/m?Rp]!G&N)E!De+)>9GcUGtR!W1LR[1OpX6$BR%*/p;'54sUD%%B'WShZk^$"9VFCc&!eo"6E"D9mZXB?b?R_+R\J0`dT@;FQ4Sk_6<"i6C0'!;$%(Z#ftq2:CE)UT6QPoR=Ha(".%.sW[r!7iA_N4d%9j'T2"?HS'-8tA3#k6DrBnoh1.!OMZK`F*+g43+\bu5;lBI_$-7,(#E1f7ot=N>%J*:78On/i,'D'T^@P62qr#[oG2\NE6D$ZB]f%&Yp=ef(^S8nNe^(gEn<JTLHg5+cn$%BW3"p-t#ts>8_,M\h!0d)I#c(\C-X`9+9fS%dD,Y"g%A+LJ<C9jr>5k4HZe;#shr3;N-@(%8)%G]Jka[TUe&<]2K,&Uib`5]1+]!-089WBL?g:N<UL`T87;M:),od9^lQG>E>@[NF$c#$3YJ^E-dP(8`>o(-DQ$>B_hRG\_`j&R%7I,9Q]^<7V!GIDrP(Df?1g=#OpH3UL$q!?HhA#T"jHuX,j[ceXEkp\FBJLX!.bT!pH*>fbG@hO[HpqDDE46k)D-]gDi]T\j"EHUp%7>7$T:B_urFpMWVa0N=.&[G,MW<)Q(`758C[q1?;Qa_p9O$kcsGsRl&;hX+8:W8@*-LRiBGL.%F,'j_J9'&sf)ak^(cJ+I*_H`HQ%:8ZHH-uj5<4R/GIEWj<!3pN=eOSC*8.Jc,B8$oR<2DG\(Hqe])Ba0"d&hAjC4]Ri#q'p:1,f@kL*>LT)o&hbR!V*lbJE280TE`5e%2.3kUG1]t%aA>&Y3EW4P5Z_5kf)TK08@eesfa:-+i@me\3#S'[Y'NS,$WG$Qc4GaLfmP7O=<#:Yg6r]S&iieTmOQ6_]Q.aiZ^#Yk%FH-ZhY0iLDkB[Tr5uO+#Lg_eDORcda/=I;D1t5rqGf>i%l8Gt*n]@1@>a?72Q0gX?UkS4\@FYs*l_sY+$Qc:Q9+Dq>[aO.f3_D%r%:L[I"J@oe.ODbCo*2uG9O:t)TjRZ#GA_eXN-5G.%WWi]hI0JA&D?7jCa!q0VMes)W6G:`s[$YB9k\$8<rrL^R?HL+:(IN)"4;HOa%6S<ug"[pt\`MV_-Z#,Jp$t<O5K*U'-5S5rS#jR$d/_tOq9W7Xc&W8WirRdh#o-gijZ+[95[Xm&mR2gNF,0>%sWI7YK5%5OCfTD+r%0p$3p\aiI3>kC:#<Gg]p838f0@Y&so5d7;h9;rp"]Mh(-.\B"0C(L.Ff^i'Z'rL;*:Hnmf=,NST+:8r_1PLdG@VP\ea#6n8^0M;5%GD7TKlN/;U$V).f?eI0\OJ;hl&ZJ<&3kcdQq05@1T"G)jOZnk\-?I;))T6jm>4<!q`oXcMC1^"nL'_i4lf$U@!Ht_Nb#3lZ7R<FX%C)*B(9f<"EA<P[>*2tm/\B^&MR%^"J3^>j$VX`dW3$"AAr8%\>OWq-_,mB&lXV9iPTnBV2>F@jT)$PN$G\TFb9McC;g[$cE0J5@P%M'$dek>Im5P08YmfZE.n'VWEbiQEH.o1YG!TJ:Q-S>O-$U%![.=GBN<-gr<C]\HNhq66l8'K\AlJluOlh%$%r!\J5*8F@;Jg-L8t%p,9EI(:rD3\6'8,R^S*a3$+t'N0`UZ.4:2eFAgda6nZ3ino(K/7Y\IFW!SKS`GWKM@h9H`8qJV\WN5q;_,/mD)H!m[!\^0-l<udb%9C8Zjl;HZ^5XM%qm0lKfFO%L>bp[L9Yq^?[0^nCLjXPdc571ZL>QMl:&W[crbCXP'<A<*2Y/E#d=%+g=gAmoY9L1)Rn/5aeT-'>3%**!%'OEj\g3"H#2(:J=M8#hZCLM%9=)1#t<0FpQe(;+SU'oD[pp'tZaW[fMAfB-6j<+VP*B[9EJAuONDKR[9#*#t4%-n.UlZ_l"M%qV>6ceWqg/iMfFbJB1eK(dq]<&HNIc>m0Tdq*NC5+/1fO[1&F["(ng"]TFn%UkTN_(sbSrS1j9^4-PPAG3<Qr#=<9!6:ViWCJ3&*%J83u"Mru'o(NQ#nq&U6>Msfq`JG-3p^":PK_YB=Q\tS="0+"tr-l103OAJVe)/==52@n28Kn_!AeX=0'Z6-MW>:t`K6W'i&qcg3V%@5U;":JW+b+Jf7'$DBd_Ao7m96(V^Z5X21f3CBt&5G$Gk<GZg,U+P1/ZaVQ%]kf$Km]2=dXNSZ8#!cWm0U`J9$=-6</%*;eC4H`_%C-:u/&IoqKhXBa/Mu'M79Zc\%1^triafLW.`&6^X#-q7s!A2R^qT(::6;'S8X]f`#Mk";M]A!O[9uPul$$'u=!=&oTo*I^N\KSao%#(!^r%<V;<ejdG<C9\Yp"b[:>3D]fY/_<qV_EJG[-rDHBPCXs5(t'$0O^%*cJn]$?LeJ[a$c!lVa'sr0?7%q/WNn]m74p`g(P&k'%(_h*':7)9<5QemBh_LGAa[T)^gk%h8"<3Fn$N#_";#T4rM4,7OHB2Ki\%:3]qO*LZLpXJ!B]UKWbG?A=/PjqtA@YZBBQtu?lH2\6%Sil\-ah);M\eOiR=_bg%+`\8c=X,OTeG^%]823Xj!\ftPB</2Dkpd>O+.V)bm1NMaAl>BC112?I2dOs6mJ$bh"c7:$.S6QFO"a,[%%p3#a():A[,#lZ;qV4d+P;"q37K6b#W\&SL&k<R\cd:@J\uqi\U\YQF:)$nPa>nPL#h<[7+tg%:[]G"uBnU6K(a3L9?:*/?.=0lL%b1dUK@=0B/0(O.t;f)-85o`';jR[c:r?F:e0Ek;/>fY'K%)Q`+kH:nEGHEE1V\8OP.e@ab]i8Wg6("mR$G1ZP9]TN-]apoo%OCfM%0nS%1$2XEN%j,s%bPu[ehDUlf.r'hSHp`Fr%.jtWkj&YC(ZH"IdS0qfGoM:d@#?UFH0g''3?>^e[\l*?g6t,c/g?E'L?4.jeG!45%&oq6rr3#D%=K:Qp<lB.!KgK+7$Se;/S8Oo0k0E6m`Sh+CiPOW=o1&)hGn,05"SBY2_ML$[ILVHY.CrE]i_%]38e#"cN'p?Ff2Ko#%ekLqmJKuZUK&@M-?*i."7uCAh<@eZ1QQ^+u&SJ-i![a<%.U0ifLB'?;hR,bc\D=:n#_P*T`'E5J[off_BFKLhN8;Fj!7$Hf6#"!X%m3.-,9BR8*"J*Jk8/7fWNFEb.S[sg9)b3dS+gTYTQ3Y.+Eb8RECtn#u*F^2"RmXH?L[7'2-:96b-"aHFo&b1KEK)NZ@j:K[.C1^J%9A78'c6;o-\G2;@CM_f+i5\Hl.@32#.[N@R4[`1MY^s$GA<YedRLSu(OZDLq;Nthq)2*/L0N9`G9jqJUY]5&QZWn3cRM<?]H4<%G%_dTSr0bkh:6&sk@2X(+0JZQ2/KRgnZ%=Bek78fSTcOAe]h@Bk4Zr$Z)OFt,&JB5@\!$+QF=AKgUR3SeD+KZjhM!(8=5V*%H%+8^7%#ajan:CH\QL=8"?!,5h&$3V`<.=#OC$lpVAo#.LIf)TKh7f]4LHdYXkdgAVjeP.PaI>mH+b'o2`jUokg$oBPM-eT#\fO4bNo6g32%hD@`(9+LS+:e/01;*/TjHBtX`6W=0"\#A2Z[JD:NJ[`ff5-r'j"G[EFP9^Q'GoVIH`eQjYG!K+Kkl?nJW$*$nKVt%?K_,E[*?\:%%("++l@nm"57K8G^32l,R+h;F+aa7nq5(]hcfPLYF`7Imm/P[tW&<#nV!_AhSCr0dVo49CV"b></fAH`WRPJ\-CIL@<@#Tq:16=1L%/$&Q!:(<J-.":7e(l$[J]`As1B=7dhYTspXC;?.2&2M3M=TFRK^f*&.,bce\S*^K?Hk'<qNo=_8Qj2FQ(Zt@@/<7WB0O7T>#.kor%';0@S-\;YELn&ik!Qj#=GR7Vs_]V]C)dMgTb1>b&ePulp\^\pO1oX#X`*oF.TB_N;j%"bab5cPt!C/!`r:;/k<(0*#rf(&D!^t2I%#JY#2%(`XaWB)^RmnrlHB"<fH29AJN'I6p`K1h3WJ\XiPO#k#<G2[+ppoc5.2J3YNm#2Qir",:VPHFn#QBFtgAYY$$?lU\.U#u2j%,jYrg'hLo[_<)0V[E+&c73u!$P`[O:cN`jiEL)g71:-"XTT$kKV0Re0e<%2>_nKesPHJJY_[kl"9bV]m;"fJ_i4>RF(SYmTK#?='%2$"oA5]o7(aXLO;bk'?t1_^r>;:Y,(pQKIbO@6K*]%19A8/K,$'BS\upHdM)V-7_e5l"d::">YL]!Q@tLa_ii@s$6pc")s5?_off%*B?O(A7c0\.MU)GC5;aoh@9"[7gn2ZO)Rfp/KZs*5^4':.j]5hT'-tiR^:,`*%?j)L[sjXjG"OmLraSET86:aL>N4-l]0,>l_1@O%I[4Sed_ECY@SdW2r!sIqXp.NP"$maQF9+*)ES*7>f^6(g!L_:[Qm(e/N:c2k`k[.[k\,/?W'^dq:raPWTKn2QYk<l_?iol/GF+RK%+4GlQUsR4^hA.Oh4IFG03RUS;h*UP4%8.-M\_)K[O=NhoQ-1EXG9'=k5d>,cB4\S&58eK4(JnY=A;Zl1D2"`WQGX__qges+7cc0g%e03fqMi?UEOR@*-SI]oH@T#lKU'=LOLsKh/+*8AZ_eo]mJ>=A6$oM>7b.<;.24lj/a4[Ddk,<>k#0OAO\.&?\pXTrKE5md&RJ^pI%Xtptj*$0Z;dS/5u5W=*!9r9)Kb*n:6$"8lX+&RW#:2K:7JIu2;^o\H$\q7m.q(A46pS-j^eI1_SERkBepQ9o6%F(A1^aL!NMB%F!%6OM"5o"tls$3MS;8AD>^&f`Ed*]6rhNp1U@h3=M)=#\q"cu;1tJFf.oVuYd>lH/2/kghMqZ]:D"_tK-O:4TcnoSq4oGKlha^N=RO%.L6W.;]al%0@>b3HCbF.Su$c`C636V#:?5\6j,?o#pt\A0SF].'Stq0NWd^Q<&<Ea945?2ZjWhnh+%ZpI*2qjWRkCHDg:aQ5SM2#%)2-6D#$InDPZZ",Xk6$4=,J(7O;%3oin?DC\C)098!Bd$Z,QM>cu;uHhsq4jB?=%CaWNEQO=NrO(>UBEg%$oF5k-8g'BG;o`/:ar%@W]40mPm6R!M.a"!$Z"b&G""L#-h^6.U1r5DunY+!p[4X(]]uJ7]=(5CCZHfRAqcU!Ai*rU_sEKbk-2eU&a(PEo8A3jWTHCiI&bj%!otk$o`\DnY0(?a^Hu"2VG=00I#+C,M'876fSB'7l,i`L#4WQ<kp]+^!*!8Cc@>p_##<!R,R]6@g&a$7<u-[p#E+@gWZjfV>$Qdm%OCPT/'+!0W6(Z*Xj9FLu`7GnNJVLHjJ.t:HNb@+pQ2-)uLLYAtJAGePN,pCTW&=j*b`i<ld;c<SP<3/Q`3&P=A^_hgHkQ%IF;p5Y%YbV?]E88`BcLVpL>YP:i2M+VV$Xajn#L"#14tf[M,"9QqLQ*WfbeqPA#)ZY(SoWuo6M?1#I"n$UXi@q'4=2Ra`HiXoD8D"m)/tru%hc4:FP#_=JGuYk"3dnPKKg?pV8GKJ'l%)N&_IDU9n?kL]@dfa//kZW`GM$Z(b1XT#9AWC"H6p/hWV1t;q1lI4>U;]boc5[@nLOct%$,d5"6KcBS)%V<:(E"el@[KG?UH3HPY0tQ;T,H43cW$Y[?`1e]"Q,&hnR)hZdRj@C*JL"+.B.'PD\n:XW,+c]Q3RM$b5l,818Y.D%I$V[Gf&Z=!O1.g4"0kgn>d\6!a>=<$5j\,62G!'N<eq_,knNs`67bd2*ll'tnIU*fHq#,bJ1LE4i<t%X=2OHUQ,,uJ*$e&e<YuGp%iRAjU5.H-!O%pP#04#%G(=Qn8^fAlh1njMHA*O@?(B_OP[fh?nI=snV!bN"U3RlOL6EM/4SUa+\dZul6Lb$\/*J#eD-5e0Ld++;C%8O>r6\H6;dS-u_V.:,9%P3gd$UuAO.\f.SpPVX@?JdIOT)i'q6JbqnbnX/8<L7KnY^iGilI"9;iq7JU<(h7]IP'NZjaNN`e)`XXF%E`:KOMI_of_4.>X2$cpd[+4*(#MAc:"pcM9E#q_Hpd#Q0%5'<D9ih[j&&tio-^eb;&+&)fohq1X(bK:g8Qc*C\GuVLmYsLV!*j;W%%7"aX2r$4Eb%=-E<<P#Q`*r#'(a(Xj#$phrCJog5QPE`=VXgAuW^6Fn3PIn9EtTl/"j#dm:`Km'@SdKI&'Y]ZM+Tf%&%Y=M_q.6e%ZOK1B"TYcri\@)qiC)=WE`*C+&]g*sLZoW$(Au$\O=ZA9Q*%.'6irMC5^<3UmUD2d[h"4!?t=.o,Z(FnL^%K/LSoOUcqkoEE:m$l%BPR"P&(<rLBctMg%HNt$k=4O./nD,>B"5Fo1!g:IS.#`\fmI$0&7=T7$Bj/0Z:RM2NPOW<k["qS'FKp(&6#D]\kA<mb1(MJiG]re%1t"/@'#\I4c]YW\@L;/e!DlnifI8Yp"M1;6`^QFLL7C5ZZ]9\=K=j1klJ3X[i^d1.DK\o,pAl:?Sa#>=*M)/EautR-^3iidZ^p.j%E?YPe9133-JXnI'Rp0=jCoZfAT]n9>i/t$+b'XI8jE)7&b^8J3j2Qi_n:C(;7QiSOd(#Il8'Nn>Minb"B'FnR8%;`nP=&1u?+9n8%\OXA<K6OLn>aC5J4dc@-g^lAH>00LX!Ci'PimUl3ONqK_J,ro&`aKQ6dr8lNJ8^)#CZ^#KNii4;N]H"W*["?O[eOM_Nj9cFaS1SO%RT@0"k/SH6BmDMl#`FUg='bb0mu&j*Pj:-=Ld+qYNT<Jo;db"A,]:"EfWXH'hMAfiQ#b1!nG$fC&K-@!4LQUiT0#_S"5)eKAdg+G%6DBpP,sZ4"rB6`$n%hYs(-E'o76KutW^%+Z/Lb:ugZa)\&mYrW*kAFAA%dD8bBX=V%D`9h!$mTdU)I5_@`s0s./K%j=eO;$<C]DS%2?\-`)G%$$'$3S]*7Q!1#j]]t.$'R%GUVBE\O=c*2/q*:cSidqZV84rKWD\3l<(P3&#F\$NoqPXC7r.q@gUibjq8kWlE+I@2dfII%2*`Ig.p&FeV1V#b\(<K5A`c+?%)X?<<V'd`H8HJlVE-_1o25rC*l:>pl=NJq8rCs\0Y??L0AKYlKFoukb6XG5=D[dA8);'oTPgmS%7[T_H#-r`3P>uE.q>N#5j89Il6'iOXXjC,Cmf'NQC'1o5m(3;Z6MrTT!G/;?5dh1CC%GXNK02'L.$W<e6@P7H=-,s\NcT%t-jc!o%RHdg.Ab][JCiouNm`A11VE0DYGG>0@nBX3lEq"?`dh3a+pZ2`B:J;u!+3k>2aP`KjaThFl+j&i(Ksd0fJ_Q9se=8I>Clo8RXI`ju%hraJ<hj7dq4qGIBBIYNXOk,CapsKse'6<d-?40hZcGg%B_mS5Q/N?^2%d6mVWX9!P,Oi42(M;oNglZM'`r-FR,TNnpjI)T=i_%c&%Rr\T*Ht=<`/=9[HB:0+&bCqKfLqsOA(e>-VXfJQQ++^?K>3\Q]K5\Vj\!(dA@2PZ$fHsFZkZZE^P$AEfI?J+rC5WKQ?j>!?48&Yr%9h3pJVQJQ4I(-I%hFe:h$XJm5h3(EB!9A/u*<37mFG]Kn(aa!Vn1[P[bXq.<!K@@3Oe[+'`blt;7ZnUc\6hH[ifmYhYu&0u8p9R?%rN]t-n?ochZO^i]rlO)X588Vk:BDjhm+TTV6Y)-MHVNK0VB0X[!bb\P4m\744d:P4MXV,L@/)KWgK%;9noom)]3QR%\Y,p?L]/Lc%m,6-)ADYuL6\H_oNl#hNXUoc"$]BeH/4i>q\B&BsMotGc-10h+"^%<E^mP7o.DY1FJ8aT>8B4V">eX5W4J[\BaZokZd,X[[nU-\1%-B9%"ckP"N*$gbHH-R?haqlA4`QKf[M0h(E20AAW"jS%W#pLGuerpJ]LmK\rY6=*YV_7i.9q7g9l08Hf/u7I4hZ,D"USFmL>MKq.%3\hn)L:SQ2X__7_[USf&/Dn^nkoshsWt]BLH'')'M9AS?dhq6$?+NYg@Zme75a>BhMQs!)HZ:%L5t`%UX)FMco2TObX2YueC+=?r%oCRh"ku<PDS+j5u:0h<Ve_r'UXpS-_-:3jJZ6Ul,Lpc9#(>hu7!eX.?1csLJk*sH%U72OAq%b1TAHr:+#a0bu$@CB6OBg_iS*RL^%ruqZ1l<g><f]p$<((emrP5ZD_o"C,&*g/_$Qt@tVCZ$*SOJ<phPj`]-e2EA25s@^f3.`Ag"fPTY]f+eK$s,lpe2Kp%a(9NNjQ-dY%ierq%Jb+^SW&iChHVsUe;9?g>E[Zh6%H:=>][7pLpk%c^E]>S9q=V$n\B0Fl/t;p^-5gM3>J2^UZo[UYAe;^^!Vk2a&_QukLe5BF%nYh;%-jM@/E32qs8@eeJEk#G6cUs$9KR*`jCZ][UQ>?f;EXl<TRbH-L&e'd5SHpn=_rPcrY;hOq7mg@ECXa6Aj\'VlLH!S!+!.HC%popQYGn\9G`0,FeE?+R1BBr])H;"TCSb;)SMiQ$*'S6T\a;lC.#j1\QM'aPK$o1omC10r!Cos\BJ[TA"n<PVc%'b.%"U0X,f)f$_%Fisi6>TP,k0=O@Ma>JkUak83t+)n#'(W!)&!f>(YT*el.j,_Gi\I;(;G7;;MplbGC2XPKY:6CO?DJ<jl6ZX8&o>D%e0Dtk'H^>dF%Ot98p(W:fZ%=soJUIO@=nfV!shTK#`?t"(E%"(>tO?Q#g\cTs&:HdUGU1S;?Oe!@%23l/K7A2h^R$t"3b2Y\23O^IANeg6(N`qU.%"NR@NO;2S(]]\<uQ*EGk7Vd$9h>l+9'Ec_pOm0t=6?[4:efm^cc6m%D-fAsem8-T@`i95MS=CEVrDb&4+[IO-\ME6oa5L&KhL5Z/%itP]GA2-hJc=pHg3HYOg@'l#mf9S2hUYA#U(*I)T7b&;%P[,u.>EL'EaOp@qqd3h_*@E+d?)h%86+8.%/<^(Q[hDT(DTt@^kH8LA%2;N:-\808rfi+,g;t^O')0b^F3,u%a4cC"W#!QRi5UMM(R671P!*8mC#b>K?Qbs!c(5PQOf>K2BIVmi6QN<H;L3"XsSZ"F8rjI>I%?6#UkhhW#W=L`;+/4tfKW!aFEH*!-=(XPQ`U:]6`m]-EX6l&utNM[en]38Nii&7`]ns=j`aoAS,3P!&jc1^P^2qs,4<im-8ke:f"%FKK7K0MM@H@biNV\-i]/7Ki9L>9$'F<ue-<]WrDQfj*pUGR]0%<\I^+Wff*l_pRr-]huZ4Cob_"j;*hDQe+XJ=GX`#Z+4N$9=Z5s%jSZ:E;:6ENmO<X[NC)>-U-f[eppRUf^o/31N^c(.eT?!N#tCaY,N`aic4$I"$?LdEf!%XVWjm8(JQo"[/fPS$U$aI_gBpc$!5;p)%L@G?CrR7sc`8:[>_fu2EIn$>#,/J^K0_PuVFoae=^o0Bufe2f4(V$s_o\:2&mK/=@%+r2/oj-MUY#'_:BYkF*#[@L2#mfQ*oc&ft%#V\594Qi7E3;,G0,It;ln=qYM!(gK^.3B\!:H6R-/B'K&o+C85#mn;"Na;]Z07g&<JCP$0lS\V5#pjp!V7hQ;?9iS(n[fSkh[;F5%-#!&d>^QQ=IRYeo!h-<CcWBW"O,kFK$`N_C*r?;PI0o>UJ:Lun`NLEG(VoVmJGKG2r;uD9$&cQMcTd'K0>[E"T`#73s!7j,OXY68%-[;@+R'A>\#p9f=B^hO?0$)Oj)dBg3H-*qo!p<f^l8@sA5gL]Z!Kf-"62G[5Za)qCSJP3)JP%o5)g`ic<fFB9:,l-mV>.Q"*[BCm%%QP#+ki)aFl!#=K:FH"n^Rs`iI\Qi_TBPhAA.r).DJV>\MblZr%Em=S]27XpJ5l.I.'Ec*"A/O^6.cVSDsP1B:8^QsQ9c\dd73fA%L(lUQ7/:cY&`s%i2#3d>JX/:1Q#(?,&NV\;A/-V\mI!"'na\W]HQ3.\]O?]0R8u(6#>!ahKc0%[Q06[`Al>$qjZ;jp5PA"3QYFbD%Jp(epgqNmDh;@/gHhg\Zlk:*-%2<kWh=]'9r8^$Cm9CC_?_FQ/rZ-.[GD3VW5o'&s,Z.jZk2F?72Xq5$Gdj.SYsNOY0S)%JF6/e=%3j,%Xo>i!#GV^66R0%Tb]Eb:&n'e`l["6L^U/iBBjR/-43e>[rA`"'X#`F$@d>u?@^"%0.?$&Rpqf$B6Xu^uZW2qN6_Mh4d*qHIr%:8QR0mpb0ZNuoj>Q?B#Ek^Bs39]q((a8uKRqJK/hE07cY"cd_hUD%_u`D@IVCXb1:JIc9@U19^m3E6SKUH"!K?@6Lh[mucG;Noq@%i*j;O?WbJmYH"Y6.5-.SZ/*1TLUhBW]'<M3<b^s3/1mQ,`6aJ?0cgJjAc0(O;7B7<mn@MiEGp1%@$bh^r*2%4[RX5e9n3ldP@gu,%Mk,])5g8pe)km3R'E"Y!aA@n"<!4[JaXAC*%nqg\ATFTBkh-\h'q,K_Q^+ok^'-ZYTZ-0..rHP74=B$UcjDT(?l?;I?,8HV_mTo-%TQXNmQD1[3c7Y/*0O:=#%Fo6TNoi<41\t(DG2m>fN'rQF#3!l:\)pQ8C$Y-F8u?D&hVh@sRC5))i^M.CHSE-/>fT%`Z1\5ToCD:9%).-PUH!&S@]=e(`,RL8W]=Aa,0OS8Ad:/CR/UUJF]TS>D0!*.u>jpe/iHd/M[ch:3[KnQ)\uqAbcD2Ic:0s!h9S!^pk2Q</G3l=6%d=eF[=Vp`6RDB]>)hiH+@W3ONO4n7)[YAcCLi%K[c=RTSj&b'F]m#+@2*kF>G(EP5@3W\<"=Kl]R"t`qmUWopXsU!o8bDR"M']T9%+PT51`Iq1%*/@J.5)iJg/-lX"a5NTRDSb*I@q"Kg4)%iq#LtS@lEO%3hMct6&S8Lu'Z)iHjQSd+'7!cO?2tRI6eW;&0S"rlrM7E8%p@qP&e8oF_nhKKKJ4m^JeAK<.9@VbVi*lfe?B.`_io_fYd-0sYrfqUp%9-:U)ALXt#=0hNBC[nK:aMdc"!T8[-qZa*cr)SRlb[8c%J/[GVnj&250c3p2M#I6;RYJj<N&kQ\"mb/rjL%R$8=mE&PY`PIUF;Q!P\*1+BL&,Q:.7ZPq%GM!YAc,LWXH3PV0GpQ:AUC^-,RSR%=/5?X3R.n!aYTjY7ahm]L^ghk.A=+ghuUgD^a$Bg>`KL2$-i0&6Fgd_0sq:Cq6c"+kB(;l2"Uu'Z9fQde-)3CBBp0e;VkP:Z\54A%grusf.#S,<\hYRii/*>#NGcn%3qmM9q_MG0qYnpe$0\Hq@W&Nn-!7$kEt1/j(HaqECH/33gH8p[NSh0'Yeo[2NJ=<lG,6EI-:r-E%(?f%qcs`e#Zu@.jebos70Xb0Z4(BI$A0T590J&W^EKK`qCRtfK_7F68>.@U@o@C<RqGcgNfOp!!1p_,I8N%/2>OGfEFJ^a3`;<L.%ZA49X,;/B=h+2Fn-<#-1<$l1rA/^Ifq32IQ&e7GYpabRQl5?JpaVt,tUt:([UV/5XX=!n#*%T@XYNg0VW:K^=NuT_PCm%0H@<.9P%N2gX`-JE,DKDt@\I`61%rAE5?Ib`Z_7/ZnUQUu&Qo7prkeE7?P\rjEa(/_*C3m2MT7H!^b#It?#Pe<Y(NHFaTUgeF>bN"7+fbC92%2)rN/:Z:%M@lHVI?j%VS!M8L&0s(4`ZJFq.oD*s%OZ(@phkSEQmZ!YDb&.-:i+_MS'Qs.o@On8Rbf-njO=m8h_jGilrI"8ohmp3&%1>HT13MMG\)b-H!GVE8JVHc1V7i7&2gXHk1Bd5%lY?[MnneKBS[1i\!W(ou/On!`/9cR4iMLYVEWODT'a`sf@GbOYPT`fYC(b&ul%O)992j%4u=+0g/6^:@h9``RXrEXFP24XN'2GC09'=h6!V\d+?Z.hY$<iEZ`OrG08rG63.f14;r=IP2coAiM$O)7"`fnpk'iBlDoG%q$BZ%3RBfG"i:XE_A=WB/e.pgdBRe38le@TErS-3E'u:>HY9SjhZ'2G'PV]YW5XJ0*'"'ZZ_5=$7q?r\cSQ9D!&#4d>M#Tc[<DM#%3aB`s*ID#5pV(!37!=LN95)3<=G^V!7>mU*W"jHPD^i0-ZtH!IS@S7KH,s=)bdXL:WRBbCbM:;YlHt1Wf<l[UTP3t-"VrVLWZ(++%7G4+]o]QrD=pMfglnsg"gZC/500:L[)_4Y)cT&%hT8M.g@8l_JmH`hs7JGYO>hXA[Vt/tV&<ICCq0dhN\p2[S@02F]g4C5-**C'=%H;8!2o%8gYpCTTo9I>lU^Lga86U@T&)G!a5\E@ueW3*Rs\!=t73]s&k*#!8tf.;\\QgS`jN$hB2o.rjn!=k[VJh^uZ3i^f%*-mO7%=(6@IgBhh7G>>kDcXAc42*#>>'o7NC@TW:9Lb?mB$i?OVjKLlUi(9/'hSMfq%%6QJaY+JW+aCa_J!4k+:/[qm$>aT7J[$&+^RM*/%aI6LL@S:?K(;dKD]RBm<R(Wi;1o"emaZ`D&@1H3^Jm"t;+=$@8cM6'^H@EQ>G\^O=*/?DK1u]YoGYSap9`<93q9dji^3:p#d.tDX%`[t*pNpgaA+bGY])ZbX>fVS*MkpO%>F/6>6!UTXXgVKK\^.rkoNnM'O"[TfhK_^$$$.]!7R::s_G:81U;B?.pOofeg)_A,*'"d_,%Eqe>QQIFj8?o8!+FV[FU-2),1l-$P&9RS(r@>nHOl.SLQ8Do#VRK%Tp;ubr@P-Ig0T/V_9lmD>'2Gg2+dKk^:(j5`V0/rQ&h8<U`%:8"gu&;'4%T<9O87<<j>0mi^c))GX/mj9C$:<(D?W?97^`pr%"iqqK4"=q`b,u-l7$0K>YH.C,[.mI(?n`p4<q^gt#&;&s39QQ_Y%WZW*mJ2B@c2g6/]YLa6X#j:9pPLD6D6C;E!bDTlqja[+]obI*c>n&!BGo*$8U2MR07f[IiEp-UrnBaIQ?+2CB,=lZb)jY;;j['DG%08O^'hbKto+k[d(>P46091G:a2ooR>G(o4JFs#/.l*592`FqT)1=:',/*"4s(/;_#YRiJFNeOuJ:Z&l(.Qe%U_joNqiXKB[f.pfU%_[)Z0r5@[&5pl1@A],+q\@F(#/4DisB3_ss!0?iYXm8Nu(hD?Pbif+YWlaOa!kY@/N`=7dVc1CV\-M[2RXC!9:H"<5;4&(5r9X,t%-DO)_&fKfFa@$#^W@3A6A?E:V*>do37icSb/7@<6\pICOmhoim%]l;.bhJ4jb?]gJeGWK6]T]P3p&FY#]%cK2J!YISd^^H.n6L1B%3_GT6:8:BKOr@^7V>$4U0>G&+feOEMi+grWcR&>U_A(Gj91rW;\iHK'i+YID`2s`Z]8aA1Ngn%!Mb@GEBdeH']TpALE[ui3YIE1j%IOTB"WaTn:>Dr](2HKk?b4#&f6;_c>-E"tP\pF>CF4#/)[kYMV;"sS,i)feR;lt>Hg-$W,lgjNp=^hH[VRNc@.ZfVF^S@p*9FdRG%YH[0a[e!E?#lLaSjM@dHTM=`"kT5b`P'38p;YRB+Vh$T6a*7;[fb-jW.3u\Ahk0:tqF@=(\2n]H;(obU,%j22Q4cu/b;@5=.iHe%%VB4E_CU]qgF4@oQE,d*IpJmBf)<^VpT%R*JV:osIWAGfk;Hf``Q)\fcV:)FFdF@!/Xi"id.M_r,h.%jiBe6;>HAtpWpCCqM9482&%r6p7=bNFA&2c_-a[lot?>bJ!=Z@0)">;ROP5TTZ"Y,btu?;3c?*\Z,./2Sum/lRdaD=YD7FL1W7Q*pTa%Z\:Sf.s%JJLT2a'!X<8%IIqbo[<c_[hq?s3<Ekh5(CqEYb!6oV4mfNKP5Ftb\7"R@e'V!gN@gNd/8H#dRMKDm`:rZ#[m&CH(Lc1(8Kh0DipH,3d8\Mdf<a?>%do8I5,Bqb+M!-p!p9#TL0/55PHXL>l=*WPe84oa:Um,,4Be1cgaP"=9_*U'?IJ9)aG04Z\o?+`7C\snfPLpgc%@dH]>JSa!3b=iC%Ned52eQ=E(9?ah@pGZ4-G+8(pH+3A4F88UCrT9o0MfoU6<#P4PDV5N0Gr%VW^uM6YGPT[Fq;@'JT')d@KGIC.S1(";]B`YDa@%+1%]$c\U_rS=2.Asb\D'uQ\_UQi<gnQH^,]7G_c@`(5Rt8qB.m*@#7)p>bG(].)KAjHh['EB+-VoUi+ReXhQM2u61n5,@I@GXB*5+iB%8p-ju-_N^9G7P/[X*$;/@4Gj$4(er>\ZU(?g'roZDDlm[+>I[5=_);S"1Lp6k-jBc)tA\Bo4oE6n&^Yt[)@=gk*C6F[)B#"1b.R:%%Rj%'&Ztk67$4HIk*JZ_rrj7F8N*m5gsi_+$jnW,k5K[T9/2"gDYfEQ`U/^i5\9Tr7Z<o=<-ZDe>e5pidC^%LZ8G_-I;EOoV4d=M%`omX4&C:7^\'tH;DVGHds)+d;dQn7^+*1C.`HZsYIn.\,CoMJG[toc=1+G'p7^a]@#SlD"XZ30L`\Hcqhe\G1B$Y*sM.G?0k#S7Q%5sdqb#ZL/#<pq@n"Ze[m7a;@;II2NK4p_dX1OaiJ\F-"um0e@^:;!5M-3We'c"5NiV'XYT/KJ1BHbrn5?B!L_gI^6pAhG^8n8t[<%/"o=5e?VHt'UgbbTW0*=<P>1/I<D-2%rCGikOeJ5SC:`q?ZAB].i],GDCheKCi2QNljH*5&sVuh0KASN.XYr?Oi_HNAO81CVRj%s%N6O]-]!Qd<=9]T3%3_e,;O2'tD@9>S/G)]lLDDiW9>/GLB!j+(FKHbI]7j)I?:#tjeS._![K+-,1+l-5_bq\D$0t)B^;mCmY9ruW%'/2gQ.b&qGUKXN<&tB-7O<M/-7'];9.k.c67j?bL9WpurQZWE.RUsa>'B%5CM-5a>aV\$N<Wi7M4ItZ4g<9n8//)8l9VDE-Bj,Nj%/\Cft3C?kY>&q;^.D<NO06qAL`\L8ZMcCZjS@O%YOJ7=?=]Dg,)"MWV7E#"s+$7hBSVsLb;'E84OtmKm-*W`>Pe^0)FONt6%49F'%GCmS)e!U`a-fl^8SS<d^N7-V(jLGK=1AfLeP;4T"p8)t&e3Yk6r[T<s>&p9//COV,8*gX3`$H3EY*E<o4'u#CX:V0&dk[Z/S6,'8%8S\Bk'1t#/gD$"Jo5eT0]JINK<qK6Vorf_.<mZJjpB=,e$UL6-*/.:a5eT4^51ds!:,O2Dq-YG.\r;]INdtD!9.3,8CCeEQ5_hpf%#+<'5!]#U/i1IM8$Jtenq2$k@VT,a'936&6n)6]]baKN5Z(P%h[[O""bW4;c&4+$FEc%U4:E,YgD11;@6I#=g5U%5B\i68;ZL'&q%H(r4(11k``hN7A&N2IAk)AQ0/c6qKr&TQE"A=QlMG=G8W2VUPq&eeRd-5.8-o_pa,LN8dIg5mbU5+&&q>5HY]OnL%=LN(h3L*JBq%(['"Lks3_aZ.#X'\A7L>Z,FS2hLc5`5i@hGjnuM,>qRg8Eu/r&H)Xb9`-"FWT1^ahhbe.9rk3S?mDd<6-Le7A,*+kAdkThsO\8n/%LP_0+GcY?-]U"H(a]aGq/mfJJ;L5_D@t9GLSP5mXJ<_2E+H6'`C3)d^^E:PHe,"pUNfZ-;:o,T+\WBtjSkYq4*IWpE3nIk^D^_13%^"&/[;sUVDLNQ:.CQiVR+DA_)qZF98C"3&k8_X1Xqab%j:ml6Nbr0n%M,lClF8IT.Bi8!PD6F.J]l>UZP=M3t=G3;`oS/5g^1n!G%&^MjC_loBjnCPM`+UHPf$tkUEPgCb--P;oEVN3O$Elp]8+R6>S&N*gPi]D+`kB.>oN:D.#V^6<N&.CcKY,ls[0#iY(T"`GI>ij@L%qmt5//A!nkq;u-W[ck4DP6LS-9IDn=@n#VpCmI/`&WVBErg"+gnnJ5cU9SM8!>6uZqaJjtpp8d=f2+>pA_Ee%UP^LV%rmIHQ-+b)%_GS(74.!`hU[shb0`.>[5K8$"bJ,_H^O^6>EH=V]hI>Ue!?+n2Y7:`[0O:c8n2e:QY4!b2Y=@s;NAF@g%A7Z/:\Y\phS:lnVg-4F%aY?JV?F_lq7IEAF;91(G"3G6P#a0r.hrDYC8%7!o(eFs@KGSB%%21mmHteVf8NA"*>c#TP\X\Q\DMY"t2q+88DaBhY/c*kg9_mVJ%ka(V;[,UN^2[!&B,Gf8Q0B(?$(U[UhXpe@n.2)N1#2-52;15Zt`kS1t*NmL4@14lWZU%$:'@/"Yii`4p_8BkA;*brPVEO?Y'D]i^%d>0IiZLSCtkIM)j8D;q7Bp<p[lpR+2&siOd`ZHPXYMeGj5P+c_Ze-4M_/_F[,<ni8dt3#=%-;ilirDLBbc?mHKk$h;<8\MHq)E;E%E^R_=U79o\^[Z2ZJrb:l:1`"`4MP<e8^a7ph\g!_%TP9hJWk@jHgS^QP?0AZq$nW^:?`N-_CKb15*ZkQ5](p,_9rN#b_E"MDn!%k%rEf1G!m24HTJ6&aT?-0Ns0*NYd/5Wm<STNkJ+I7Kl5U8&`Kq(t@s4:G9u:.'&Su30><8IX)d"tq,Z;]0LOb5Q+D@N%"Yj3W'G9Fb%mgUVahub\X=Y5u9qg'4kiKbPn]jlr^f5eC1OGqH#_NL$j2kP0O)%AV$Ub%a(`+:od^,!KP1?'S9Eng?Wq-cJb<KB>Wl&B>ODs?UF%1Er[1h\g!_7-pp9@QHS`2Pkh.\TEBbZ[mFiN!_&.HblO=5#aF5E6:Ug[Q[d#btVlF:@m(W0;SP"_,THJ9Sk[R>l]csT7bUD.0kaK%6"SAd+J,7*=[b..AMj1(gB+oP4r^f6qm%^OZ;Dm"a4k@m[WUVHd\$I9neg\s]Or4:.0u*jV:(7S8Kq<IEo\hEEWFj($K[5FYPQBZ%Z6@]X;a+iBGJ_>YDi8[,VR`<`lE(Y@.V/nM9k+(2j<^NJh+tD@[:2DSf!`TL]b'a\n`%@9GV-q$@.Ia(f,&c*\[_WjI"Jo(_L%GR%!RK'\!Wdi]KX%VXeMhtoiSO"bjMTdOl\&@U/\sZLG@41nCbXq[;JaUV)MZ7kn0a^1WOq]V.Y`'2qhYB<6e9JE8MhUS1&6*ikd,r&%=7Xi)S8*N\54016nf4]l,Sg[q31ek8^3o_,p4G"&I!Lb:(Z`Q9h@\&#,c5ZqcqMr@MCL*b]QsiMI^U/)(Eu9Bh-*/`n/0Zl(i:Ks%l9LDWLl)9hNNP0ERICcIUK"p3j)#?6;JA+n,;ErTR3't>-,>Ks^\^FMd%s%MePPB>P>&Ka]0GIB"pl&_R,1Vm?Np9)p4D^(YMnXp%MCa5;YjEBKMnH:>9028Q\Eb:?J<"(shs"a)A,#);S&RqbO6r/9bo,,8"=YWB^\EM0robqq<Ld9p7ku+*'`Wl97s2D0ZD;uIf\Eg)%A^-ksr+nR3g#9_b`)9>XMD\Urb,h_Ad]$JEXI_9th%'-3&=01:[S$N,;>'P2n<r2/&-)*BXaIL8CC9RY(1hZ>hC!B)$L`eg"mh)k%69+5i"NIB4WHqm3)%4)G8->7qZtq[<<Sup_/_]XCoKrLki24Y3-@_e?Qd@(Bc\tI/oQ"MK:#[3G"n\kl-Y@UC5edN/GYcX8W6,)1%J,e\]pud/&a+&F6Q[eiRs8B_2o.M3c\&7h[4t09ISC[9rIf.OlkJ-rd5Q1?VkMq'e0E:,U?=3a'p4*"$J,+$Zm!ns.^E0$FhiIdX%/)b^^hkIgZ9_a&5T2#*/q4N"><_Gjn#dbFB-sDA'gU*R(G5)4cHhE_b"YV\pd"3"Ua\UY:EN<:A);V:08AL:0pa0oE5)*:]$gt-I%p+s$!P#tot_W'%PB?.0(gg=^ofnF,Bgjho9CFJGm>@d<n;/Uus)_0Lg049J]oO3V['IEk/!c;+>e8eB-a),D(nUN*:!Z%nK.]PNd%n0'\XDX3]pq=<L-K6bSgHmWrAn3/MXThd5ff<;GR+'>L,ICNgk?>s/A\?N0gSCn;Hj<Y'*P,\>ZN8DPO^#0,[ZA;kk\]0u+j9tDH%'?BplLJ'8l-"He'=oHR[^>N^4o!pDuhcK167hYX@=/k>CK_/p2q@gL>c`H;]-kT`k&/Q>pTff(4o#5oZ65kWgW*0K/T*$EhhPI=f%4JH>te@$ed"b!?*aLsG(8--As_8mS8i&]"T<HC#(nncT?b,nMp.oV[pQIb*^#8o+`VGmis-"4RC(*FFsQ%&QpLY@h-hQ>#!k-/t4%Gc5FGW?0ad^rd@f4#"$QP1hm]^@Zm=\+e$fc$eeD`r][k/\aB!?`1!;&sMPQ`f8(Vg,1V*!gDms+<S^Im"Q\8CdmPLWW,fUHZ_s]%/,ZA`QJVU&h-i7tHBoa=B%K-UPq@?sa>E(lIP8ad#rKC!;:sB+9u(grORMT)qgSB\pU6*s\q_mV$ZS#-\U<@WA,,qEV,*,JUcIEm%H0Y/T-)I[i0g14K,2IQP4I>sqUnK3O9C7R-Po)D-^U.r</X.]:W#)mHN0d1'Z"Dpq>>.A9\=P)6G93LqZfg_2cCSNWchhWJ_1d(k%B6^Q>)P:[Bb;[cHpZULQh]#HVe"s\2*PPs_0($iZ*3FTcCSL39W6;RE.djHI^S9bQ*I%ls"(\+^>+B/Fepg$,.1.F!DM:HW9Hipt%J;Gc/(HP*"=.L%J$>1Ut<#P8N<%EDAX*/;krF95`RZhZZF4A<NSY&0H/Ub'<7=U^brCJgJH9XRuq3UcZN&!h1;mK6:f7!bZ[TSXU%3-O)>7ApC=.b0)Fq>?._;F`iTMcGONBkdjkrN$1@<Vl.l9rC=\VsY&#2=`1Ogs(`MZs!dmFqDAp/^\,pOdnn+.^-Ipm#$Ed1TB%=%&@A?<n`BZ!i/aC?0E*jsS+[CuQ"e_dnm2c9iU`_Tr:iRg/]7V\D%'>7/,)3reA/#Cm7HkiH)XnU/.)u%#](*igakAbP+,1oh1GIY%^5Ckag$n^!Vs1^3MI_5B]8Xdl=\J>ZD0Ml3O5:c#HTT"0p&NDLC'D5!r,@-Q3^W.C%$WM:M/4&jW'gYIO!j;gYnc,`mRQ4m,$9$$%[+i'0jrG&TrVbC.5tHDG2qnpG*?.BeG@,K*\fZRRGi%0MA[_nhIaI$NquuZ?[qK=&j4(J[Y.g)?r[j)ncLquGJ^(\uY?VA/`C:#>%<NiI`5&4ERRT64:qpM-$GR+;$IGu5C3ZO?D/oB@E,$Cd]2Ob$<q.$XCU*E=Y4=eTV(8=ktG+<@9nan9(fM?$&FXqi:eC=DjRupfX%W@kW7LNOT+r2,S:SKqra-"K2^"<>_7EMX;E40^49r5\(Uqs'_g'7&ho*\fU*G(8O^41bZ'VR-m]P%lDHoR1":1M7aCr=Zh<mMdLd%+FY!b#*oTj"f"U&2kut;S=eO>`@.hqV:5C=L_&fCGMolf#;g]8>,$4S,.u_o\>])$5[R%QNj+::Zc^oh3q0e+K`7ssX0SLeB1I`0%Y*KuEe/ItlppG0B$#G+^R<D!HqR2JJd[B7WOc70t4&%:I!h,<uNu\XqOK".VMCI!T6q3DeD(PU`)N!kO$ZN%\8nlQ4jr([h)&eoW%;=JFQ+Wcrr]9W)jH/HNC&F^D@Csc0@-.h+#f(Ie.P,0jI^6X-I'NVRM9)':(YDt!TCeaH%P?Fgr4DT<0F$4293/`H('9B@&+/MN1%',aKt<%@]Hj@<2ocCM*m9H&VqK?.#t5eB4G9S;85XXfp*(F9OV_Z]L7f1!0[:JtXEJM%U6_q[]3pgKWGGduMh1*BA"j^MrT)dU`'%=2%($go;j%8Q/mK&]ps*kIR-WY[3>i-"tfrBtCE?XE9ug;GVbrn]s7mP3#n3a[JRmoA[1!!C,@qE&i#$erKAih9L/scqe59K+Ir,%j`;Um/VWj@dFr%:<mr-$@r^))MLrU,bh?d%TlY@f3QtnE_NXQdZ!'[GI$1i?XXVClX3VQb%iB.,*CLMKa-iOX(f;J:NF`]0_fRkO%2F/+D.0BQ%'4I3cQ_2^'T-s`Q6&%b65++0.&Z4JMegXh%fkDI@qX_6\<i'b)auq/).R#t`>6Sc+,)2h-l`l@ms.K^VK-i\blP*2.%g'qr`1?`l"Be4dlo(4e.o5OtuL&`tH8t.)-4oM-2&m+B^kh]iAQ*!n-d?T@OBf`nUZ`Jrs+,ab;DdF;#CaK.;9pT8qO0D0`=/OX(%AMRDa#k;Gn<ul8^3Ycb4;$PAJe.;:TVG?;NRFnj,[k%hUcUp'e(I%FH`gYOn%jQ`oR@nPH.o7jsLuMp*B[7(5.AL*;qU1o0**W%7%$$dLGmG8rWXor&%XV_Ye/Iu5k87VLT;Z0KQ,+0WBG;i:c8+Qsa!4>2d>XS)cY/qVPQJcJpi_E<*M4hlF@fD<["mo;-UOBZ#2g?0S%+lITGNA]5D=/N@Ta<$IcG[X+C('mmk?YqBe0uaDeU96A^\X?O$$99)O"gM]2[mAc)r@>>tLeH2e$]8hal5%c@Q<8&tIOiP$3sh2H%%?[#!GEV\47OV2KkstU:DO_c&o1-R"I4;KpJWUc<L9VJRLh2gmU;E93lcV\9`23u\.%c1&aL(C&4KQgpTA4_n]2#&**.(_\@,m^.%S;#hJ,VZt,o,-l-*_d1H3XbF=LO5KsKH/+LVIX-j^$l^l4$![Qc"B.ifI;.1`lM-H/$>2V1<!_kj\N%8F(Opo'mGYq(Hfb+a6@"p%J++E+`h*V[jcCEc-DrHZY</4)QKlN?LdBI0%V.'->kkae/KK9&SPbh!%Ylcsq]\s-,!R7!gou<Y^u>Ct(J]-2D93.W/-\sg+VqaQ%=P9Jn?uV^r[]/tseFI6gI@un#/QDK^R>sWh5'MYk#ud?QWkm65icm:VL[p46D)-g/I6U75A,0X($cb^VHm8A?]mC^RiuNu6Uf,pm%*(Xt!Xo3[s)ENh7Rh;^`]MLoUq>7mR0@Wn/isf&n6:T&j#\o*M?8T-c7MGLp'mWe%(AHttD.10T-kr=QJ+l58<I-"V&D"5fq>Q/=%=q\*R<k$rJ?>-M>jm'"&CsZhNnE&KD<"#\]^-F]O8I#LnWL:ofdB<[>X\?f^^QNUt]YS;le*/#S":PX4jWa_FnXbe3dF"DQH5Zub%gGfg]YAkQPbdX(5eoCW`l:Ki"2[VecFar3\ZgLpH.er7h,2((4Z`Kjs[sK3R[ln>[Y9bHAHY8l*_.BX1T(aI#)T@T%o?R!ND+4MT%qcmD1kOZm^XTZmeqSKIZBi9tPG@.b`89[:DQcltrgAU3c".\9BoUq76K"ii>`]"m(.M:ENCXj8Y2iMW&EZ,<(BdGs0"S.Z]5o<97%H7;HETR,bb_pO*NNu@'7$R0<ON=(IUK0&:jWbY[2Id:X*?u#341Vo*m6nNf>koaRKarOR[Xiu2V_EL\j^pNW81jA[GY,!$[B7HE3%TF5/+I6Eq>d@W.RPer6dT1gjH]c3f'dJVtkc'c#'[$FsM\,3P_1>_,fA.ifdVW*G#n!5sYqa<(KX7)kLPa=g'&Q.!E>%mE3Kgnir%i'[B3*4/<E=*mDR0`stH$<AgDR=[>r*o1ktUi^2&=5#8QlOajj\AP[*E!%e$Y&p+4r=M`@em9'd"[/813BhfAl><U7^djkAk2C3J%*ldeYd;\p;WLjq=s3(ctgs1G>;fN^IA(r.qo[<UmkXq_BX0cp$OS/+%Khs#K$Laj7CG>E!9;76e6H3To,,@VLcEA>g.j'L<"Nk6k%SHU@CVbE;?=^IP^GbeoO^1n*i3qMm=X7'/bR"!G==COR1:F9'sj0>HpP.,/#LS#P^H*-B/+aP!J+2,=!aPe&><sIWonf_3fG=Iu1%VnCb@SCA*rVM'mH>h(%*;<]8$G5Pj,SRacc,9X1Y-t%(eNdi;nP_/[$l^'>r%8&/F3hr7J9JF+q&t5*F`9JSr>MR?bg<T!SNLaN;%!jQcKm#dEYeJ6g8\258LN'TAMOlK"VEL%KZ2to]31mF=[lgZ+pp(nM[&%/kr/@(b#+#[8bFn6:bO_^:4Vt^g5l6g\5&-d]Y[!k@A%5VhKhDGUWKa^l$nGgB9hT?1Y((.]%_ET#g%cOmu:FAr*d-f[6tOM^I1CWck<\bgH]0,)4jr.**EV$WrG*g)P43B]Tc4Pom/Y*Ulr%4=GX32n9CHqn`3hVc[+A$BW+k33gLHhM_Tp5'IJMM%apO7,DGJ3c[ob.p8pH=Z[jZm1CFTr[Z$=#KLaU1:uj)$_U=3</8uJqjpYl%CdphG4b?JXT8KT5Jtkc$:a0g*$NqUl]-Hd78),eKI!u##[+N*kLh/g$61sjj;%jhVk&='n>Oi>:Ep!CNPTE<c8"X3^gRu%#fqFeb%=YMpWb=:><npNPnj<T&cYBXc"p)I\Sbc4Vj8H"K!ZM:Ht95n16HtFGoJ`AFc/Tq[#NE7a'85,+jA6[QP3g6%D'JYR_ob!#:OiiRZ%[ka^82CHu)r$0+RMIa1-IS))1.%TCMqL03K0`"%F4L-&XD"!,G@O-Hqg*/U6murNF,\Mr\DFU&*V'WS:Su^pf8KB#f/C'EBZ`Pcu%==19D_u[.H.QX+Ip+E(ULh[m)M4KKhf-mlR]/6dOR1+.>3!L*LUl^CH/qI)ii!W>(9Z`AeL-b=^7KRVr-?ia#(T1uj;**8HSL'j9%]#uUj,'4nrD&Y7@3PfR&T#UA/3QM'[No3q%9c_B',+W_D"]H1ghPg;>LBTTnERZI9-Qi'V?[^oMgb`mZ@7$5sg`DQRVU<++ah3"&%8`oKUbj'7W^gEt_b&MffIe31"RsFBnqo#51Lj8'4""_rWJ=F^=9.I]ge=@12\Yth.Hsa9\o/W]m8S:#]!jOeI3*-#*rZE-56:FM]%";^lo:i5)!01f2;e2'ULrV1Y)7#h+a+?0=JpESuEZkU<?/h"<6N71e1>@^XF`lK%Q>rdQ&/f]MM4"XTjb]jALJm@(`oB\Bu<LM@3%gYE!/9'K:Idu#9[2g`pkG:^udeRi'o(?bg4lU"pb^400IGL"OtT8XtiZaUA`kRhFMPP"A%p6Kp?^H2m,_`RP\#:r:t8kj^X^(`Po%_po";XYoCcW_$++/Xe-F)m]^WB[40nCcf>3./"1p<HG!X?YDpZ)S]*.)UrD3&,8j%UZ-Ao#M$BLW_2L[Ie[bT^H*N#V$2;;W2icq%5B]M+*06(KXq&?L(ILY>l*9VD[cRHAGdP?0.A>mYWNn48)<)Gkq=:"nni+7C5<f4'J(HMR:9N2NgaWB>4kM#-p"ki8`PE8SXZ3<>%UgI)k[?N(RNDLe06[Xh606^Q@AJ7T+*ABl6ES:J$"A41hhDoKPBLZY/G4'Em;ME0@.';_?Un7SBZlq_`Dj*M)On3UFT7e+`o'>^e%_kJZ:>E.Nilo%>rQTYiHlgLEhcbo\S[i4CPDLh9o\TC4a((f5!6-8`s^3n9)";^.l)#IjK$RCPcLr1'090d8E#Nuf;iti8A4[<Ct%gEpf8.16rh;M?Y6hljrsKcbGX:^r:^o;cgm7^rcO6b_K8<G-r+oI=X.C&0c2dNi174pa43<-hs"/;F<mXa[p-cJQ<*IE,IgfoWk:%:7u8cCds8T)'V^[4NkodI[5>ip_s:\Z1.UUf@X^e">a$h;Gg'$5kUW*^`X,jRG.e<S",/]9$l@lpYY^oL=9#qi`A/5Po/E"[Afpe%^di;Qq-B17qWHZHIp\[fXkS6dJ8ACOA*%$DMVWq*'T%3II+4<o!TbAOe.B#/$Dj233`,tsHpTH`6\HLuSXRK]5l<Yr!pDd#?tL</%J6!cnLb8rMRF9'QanNRFqRmVJ&^**@=KBJ=:T(Q_Fac'MTNR0"Gat#7Y=UNlr`=Fj3d\@Sa6#(po#s1t>dl"C^e>is.&2@Hie+p0%URZ[JGK.rG48Ml'ED-pIr&4mCD):]<F>fq*?pPU0,p4fcem,%mUPqhr@eV6]Wi`JNM1m/&C(7Q)6hU0gWrhWg[mS8!"M=ijnD:P(%IE%Pq\@GP0n"`^BqR4r;@5D^+$5]WqPY\A,/ll%(lheOIG.om7cQAa3)T$S+9+HQT-2"+i5jt(f2PTnX?EC_H5q\RkQpV2u%RcL4%mkC))7,Aa12RMc^oj/YXF,uG/RmG@.li1`E'ab6=:3M]8S&Y9W9-IlA*,48;$2q4khrh^.OAp+mbFCKS.;d?D?VL'@2&#tkRCWM%%6`JF`$NqJ?N<"(`UUm5GB6!#<;G]s<!D+mc[UBm5@>fm5T.dqHo2ddOFFYG@GPdA_!Lf@RdVfisUi"$^f@SKj+3-aBT;O4omBC!o%NSmYS2k(dkI-%%sPen4,'A0$sWVEPN?_;f,#<q>>IttX%nY;KS^L!W)Pk)0aZf@A)F[,[J@?OeFqn7N*g(Zb9J(kK]Z?klG"7f'I%6gY--"6k(HLa`8tm?@/$Nj#$]JAe/58A:5O#%=j8Yk[?"a^"KlU8X_3Ach8rPpc7nIbCVAR!9G.6UdXUdQ=T4XgI/R'%02?h.ps8%"0ksl<NE[;pP=&jb*<W]ClRDFU5($)i>,W@]SJ#I1<>U'cmAF20Ge8\CtDA6Er&+EPFE0)P>6/j9$2^oAtMSpc*#XSXo<4Cd=</U%OY9mU#U\^Ka[l7Ps+F-aF_1YO,2HO.EfeC:d%)5D]/t"p5U5N_3"KXee]lRmq7Y,4.?J8LT^-Lo#C3_W9V;p1VoWgBGS.8o+5APq%MTu!<.Y-)@<4K-&,Vc7gd!KcA#,Pn<oN/2*O&<BL$,Ufl5qXM":OftkqY)leX`PUe:R-U!,'n?>="'fE0(0oE6B-E2b+XIMR(=`h%UARCs_(I/d@9lQXQbTFION6n2gj?K/7/Up4-jMctm>k`e+AM,fe&VLbbHXg*$YZ0.,a<#9.,.G;2H+YF&lY=$WH263#/LJS]4n&Z%HC^3DL%9UqkR-(,C.u6tGb:.04#b;O1kO?d<$`U$a/UQ9g0aKSBT:4.1MU*_KgiP5^i+p0,5S'+0@^<Jlgf]d.(YHfM9$>Orll4Y%m7:I,C#NOEc,enXV6?tLNkNDXn!g564SLrhR+[JCQ"d_)o&bN0iIW#EA89G:.XHg6WRS?/)1-B"<8FGAM9@"3ZVu(CJ\(&kd[b+&%ZPgj\-T<W>)I[=fp92h64@T]j7\uAN?rC)PDs7Q\,r?nI8%_!rX>m29d>SZr>@"Ao`seglW@.BGPT<m\H8*hAVdnn'Iu,I'';n'A%",aAEJ6Oteqn7!Z0?jbCIoB15+*TG(GI%CR,!$oh!J9g+mM>:^>qjRKNA70lk$B$jo'4TEUXJ1s^ZEQ8\Orodh(:e_&XD]o3c6@[%#fQj>&LdpcHp5tpBq(e/aEF@_iN]B=j]RU07@mer+Pf,8@WJm6&^,1&+OqMs&9CE*a$CnIXjrdMS+6PY#kK`;8rG5Up3CjZ8U%Wq%$:1h,1FFSNj=kTgKQP,_2*`mD^h;b`h'"K\<39S-l-Ce7Xgaj6'j>m@[?W,(,T6@5gKGie:nZ=V>aH3H-#=:fA\p:*:Ef)K(pTHa%W<MWSLf<>00+,P#'$!KLNkjrc97nMY,025D0q>j7)UM\\&6UJRV9+Bep=P_aQ!T1\i0-8%e"tZr1$e<d"Qn.cr4Kjpq*CMMpSu7H%OIbQbAuBa0j@Q-Dq1]=b,]&[2UEu`^[?,4Z7%?WQ][a7.2e8e$@(7ftn%S_]a,C$tPXb(gEJ,<m[a2_Ap;9Yehor`([,:#igg(G>%j%LD0Xbj8!-Q9@>@bO#PS`B!u&k9r6R./3tFR7,i-o#[orNjO)h4,.DZqi:A`"Zuhmjd:Y(IMdukqCa\]s=gfUS?9F@Ru5@lB[id%83IHIj4C3gJ5"@Mc'M$@_(4(ua77,kBC4gA>o&XO4urCoY9.S^@3cbuabHg.`mE:LC*.GdX!QK8I)67:0l<<[dcn1ASLKa?oQVO6%0')#HQe[$0h:_D=O1Dua`b2J7:MuFe1phQ%pTc\;Zt@u[$],6_(AXV#IQ+b*A@A2o*FsD7\S8Xoc5I,tr2FE'A^(SB1D?<W5>%Qi%/gn8@qFGO9*3n#<g3b2kG*sUuqdb:@3\sP.Y%)_;n!SfnRcSEn5Ko=hWVB/6l<"C3.Cr,%`P-Wc,^18SOW:0,FU\VP?#AoD%$a#B%prQl,g`6CLAhT\5U,"*Jj'YsEb_IK-d"gH'i,+'dD*HG*YH8o1G9;s,=?kMJZd(/+n?TG#"1fcnbgl/YY7?E72^r)0m[5"d$o;:A%E>YpR(u]fH/B<:g>JUEm@_hh#?o`MN%bE<tNED3NDA0PUPFj,_d^pn';+K@/g,YcGa1"9nj6.n":]&:J<4^J971k.nc*fAI5"1?=%H4LVW@e$g`nsV,a1*^*Hh%k;W6ma1.ZCaRskR*U+`i_YbFI*3r$V.FkeCL+kYIJHq?"ZkK<52^RDY=iQ\^2'(TJkL+'sne_?H&/W%esqGjcDsc[]pFsnS\"#3FIu5a.eRFG;/ZL+:1,6Fo/<qP85SqMSMm03RR6VB4%C$N3Z5Bk7OA/e[^qC'!]g[785l0HSnQ)7N&-QX%-VI8PHDO+Ce_Fp?@hf`>"9VAYA>33Ys&Re[bLsI5?gID[I)uXsZFr=3Z'uCLP<1W6f=C$t/B6J_#eZ4=ib\.%<W1B"A#LKT,6&;3%25BSq@.0T>B#ZZpeqTrL9la-$BJZIjUn2J/=_;Xl0nW(QFLQQ[3[EmQgI!YtX5[_Xb1s%,V>d8.,h7@?rW7ZZE6kCtTU+0gDZ03L%0:1(1B:[LCLDGV?Mt#:K;Me0D8j()$"c+g#O/c(n12==NXJoO\R\XXua2HN`hm0G?,?1^&Vjhi;0I`[?/k#i7b'p#j4a'"b@SKcU%Qb\Am1QhgK]U/NGUUjE>^`en@?D$-5&"4J&U(oT:!.^Ie#;l5RWcKlUjg(=a0f8N,S9rJK-mV@`8XCX\p\Eh7IZRM./'iOODdo7&%lS^c&mkj^#b2URZ'l,eW[noYh/J(Nk!o]Hm3rNq);nYCJV(7Bh:Fm&II&1#F]l7NmBPTrciA7OY-kE!e>.22Y-aj:IIN!F$NU:H,%dIQjU9nbR=EKH?QbLs&KT'qId5_d/?.jOX7-QP.!^u>2nDIKhWN4sd'rH-UH2b3.+:CtAGaqU]2nSjO$dRY[^Gl"tTV6hKDCn!`S%b#DHJERD&?,:BG,`G>6aXc%+h.F6DrgYZ6-(+EEc-[=ajQVtV@A>Z56cXGJL^POZ2Ll3N,Qrf)DE:\c7oR6*.h3/S3K2+d=>ZMGU%UZ,r5q`sdd#<E$:!5,9`aCF>i6/5_hX$?WWKZsI'ST8)+46J$Ms3<8#Dq:C#PCAJ;Y6#b^cPNao+(6\f0jaUNPXkQb\+bP_D-h9?%1i?/`bE`">["IMXm;MV4(7M(QB+6H9?LBN+6S5M4mM:)i6u=79#C=+\Xl1kLpq@+Hp<S6G*j#5`1o2ThM5Z%BI/r#f^iK>bjg"cM%(0+rkk?(Q>ceF4(MI$bljEL`_KSUXRm'CeE18T`=odFM(]fOi-FAaZ3NA2mP&N_RSX\A*D??^3(=U4Tc<psQ\TGuXP%h`]$=-++O%`R";Tb7@e+.Cn6rdaJD;>"5F@'W^XsFGF6l&O<7?ZTe*-.(?YG7T_\]9Oj7(A0X+^((jGhf%&[NfW.asi*=+9afiM7Q'W&9IhMH^%=Jk&Ge7NSFm9"-lL.G9ki@\<.,d"pe+o,!*A`9%HVI.TeZiBrU7TFSsasO;46CRC^Ci-G1eGCG`5XQu]%7Ha9b2s%>mrlgMM^2Xn%Qr_V0<nE%nB1;[(/Bq>o?X+'L@F5tW1p-$CI7GBo0,26X'fAsHg7,^3/h'k"demtm'iPH:m^rJrCd2Yeb3.HJ`e#`77S0VR\M]#=%os6"`![/uBWu3)s[VmaYdafs'+jaOnE=-Nl4C+IRpa$:,b[]273*k$iP.#9iogta'q-Z]Y__[':JY$cR#7\TNoc[8Iakio/ibt^N%TPMAu4/9"\QZW2@ge?f[mn,mlj_'AHdpYNuSs&O$Rj3fF3$62uoNUe(E4`JQ$ZKjD3=YkU`P@EFoY-4jkKDbY_YM'l/kuu"F&Xeu%eRNtdd6j!jd#W^/QbP1=_%/'34]Q:Trg;5>[=$2QL!'4napa4M%7fe':[/^8&?.E:$BPnlNi]%]LHrVCM<nG7>?]j)k9GPV"&HVR%-)g*G>couEN2Q1DbdGq@MW566NWuBN`>@S1UYaK8cpp/Foj+sr@MtJ3W80$d+Rqu/BkSTBJGC\@,E@I0]*Z'58A&C7_lY!#Vbua\%Rb+a+U)M:VTo>aUhrg@'o%,J4s.H=RGJTj-Qef%hAe)%VWsFg`eQ^4)[q)C;pU"i_lKn#NX-@6(<BK.;5LW\X[MI:V>>fBU7HZ&[%)J80!Wuq=,Ia*N)M`bP3@MH9c6'SHj0LQ,G5ShEI-KdGnrM69ZC'`NH>n)#3pGA&WRVqo5)\\3FLM`^@UsVq?a89tFe3,9%11aX=%aOT"2B/&Of,;&bKO=*+dV*1f`=`$4C&oEu#Sec_l;kr0$:dETR@7/d_OIP;8pp:%U6VeTr!0O/(->@R3.L\m9#/nN0#(Wk[+!;^Y%;bqBPd0(Yq2Dc6kA>\WSZs3+HiM;PIe/Ai\MT7.AdaHW&EeTfKHoL$qDs"+CPMahb4"Y<n9^9a!;0cNbhWaI:7,M_M6$*mNjB55Z%>C$90d`Bg<(8K@a':jML&:pbhrPESrQT5t!WbV5`hDq#rmY#]K>WB.XaRi-R^@+Zt1BU3R]@r5LK>U@FVU9r\$6nV];:VWkQSWAd%i4%uD!&FieEOLoh\<L`#1hh!6n"_Tpn#9KRk%FQCd42QXa1)u3pT75?rsG#0f^?=kQ[mU*-5R"hCYjdFO[WCo=`t*+=IVX`rNHk&%^Mob*UZm_"79r5\OHdKU6qSmn(-3\`El@IQe:8gc;@k1^C*30bD68p39/]US\+3YpA^_8a<\Y<[9K-/(\c\]5\o3<"bY_"t<qq]/%O<0<YE=tM&RkJh[;&4>58]uaI:IFmLKDcJ/q6?WCHb0$"(1CE^.Yth*I`^+lFKnEdL]5Ou.1`gjlRX<G7#1;AE8(p2![+X3<toU)%)')b"DOO7hj&8ZhEIi<J'M5*=@c"+';!peo9:Q\eTiqill5),D+mH(Q!bpmjCqJ#DV\QusfP$LCRo.uU9a<L`_6"u#>tQ#0%\%Rh%p!^s5C=<Pt[R:R"(.qNR#$-6/078X&c)79%P)^aB4W5DPMki4/<jARPgT?=1LUPZf33A3oQMf2UY%1DRTARSjp2p7=F68t$J7DJ!%T!WMA@d69rID]0P6G"*iBt)$TP7*:J5&J^KqEg6*P4>0_njO/\1Ia4O5FM#T].FubHPt5+L(B-eLWKn"fYG^ep`&ViH71^\&gL6o%njo]ed2r5&'@=SX'Du7sU-<)Z8Vg5XI[PTEUDKRY-70W@aooHSeX+]c'gf6qB(H[_/J!L+0UQ3KFT."96gEds_RC5LckLs#+JC;^%nD"m*2^O^"+IJ*@1c_q++kj%ERMY\Fi^0mE16Lno#g#M`V(&1',H))3,pT1S2Se.7LSgAbKEMHi1JZF^QB2Z`%I*tXH+d<<f37Sp%gfF):hiIE\h5@.3Aj4UZ5Vd]$*06rHWBETB#!2Hj\g(BlL=Qd53F@a#GFk@.*4WQ`^g9OI)`EHsbE`HQLt)Z9dJ8MGReLJ7Xi`QC%\/AS7]4DL;gZ[9\)44)V9VKO>`;W+0rd62*@;=K5='&%$)7=Lq3Li:]%,*ct`OBu6M9rBkmTAHFK<'dPe?'AF`(VRLF\9t0KFgN!%[rctEh["#gh2k#DN-CTbU&73)gdN9,R98gHBUV%AG<u1<fSB<1C.diN!MMtcGn`26^d<#0armdcEsR'kr8DN!<NfJ#,1GgQ'[Ff:%O$i,7.)VDZ'08,L._$6Q2C5QP0)u]Cjd0#AHkXh59.7r`W"odV#@n6sC-C59NMWk5.Tf9FeX[(@R3b7Igih4b/X641T!#?QSZshI%jZ["0k(U8:moi&#\%_"&4@@frc,P^BRuGQrRIETuBbW:i`@b)XDTbccqY2$8#:AAh)%(,$CL<TOS$qGh_^Z(.l=p\PIe\kAU5$t-%.*kDS%ato[?([n`]@=X;m:B6r;&#5A"oF5oW@7W>**<W;<&Wm^[N6OM^jY/bkUaO:9sq5)N%oofQ(m?+n/08k1+Y5/0qQ/FPoa:]%GW+F[K(t'F9`61TneHJ6[dA0&Fsk=TS)C%53N$4A2KR#.fYo]mZ4jOsj"*p%6j$b;b)`NN9_t&Ae3b6bOh/dM.#*_K&__(A:=?&;%%uaQ2jRn*1d%I*gUupO@%S4$IcKad,s44)q\hAk4dKW1==edn8^6lVDB(Bq[P&;/UM(D@Y5mPJb4GH7Y2%,Il;rO+SP%1Z](7tK#%UC;RKMkU%`LJl!Fjm[Bkl<0`!7*/6Q+7)!>PfoAWjcD;;nH-[-[O+t%'i-@/I!f@fWRt?uFTIaW4O#D`KE[=37BfGgWH1+*a$T%o%,Y"P4,9*YEWZIiJJaB[i\*6j<#5E<onBs7F<VQu+eoM@7[B''U3V1K*L>l%Z2J.'Zq4sl&KS554#+eSVro2l\l*2.]c.tY+^J_&J%<n]9IZ;a:ZU;SOd]X-NC]Vo^2&U9L1i%CQB%?CSE:D+;9Z'XIPKSQ]o&oNjV[_:QdM`ljZMAqoK[iSYsWu@a\6N;BfZ(t^&Be/.*%,l;Zf9n-#n4?A#$b0OotmT8_,N3d>NDrpsm7Kn@aS]ifR)(`D`jY%_4gXID,o*=o>'mE5kNFJK,5(X6t4<Eg9[?eW1QgqQhEXjjI%^X#(GFArCs<0=d#gWJMR8P#6!QOgA:mTe7$"U)+Rdk;)2rZ6Rp/2;WTUQo=q\b2b)52DTaklLD9:EQ$MGIY-IRs'`[;q&+tLT9H1%^Z\%F0@VfUG`?RM*t,\+b5(>b6-QEI!d*krLXtilZ8W6+]YcL6$S,fh+#cG$+WV:)=:mVr#`JIt<hS/s*_M;*.%9k=A"$#e6f*5;%,=\&kVJVmrRN>/7l[u13n"BHWZ[kbKfWE%*H?@Ft!CaD4CkEXb9j<E)L]UrraQp[Zcl_l1&2l["qu0`NP(c@;MWoY`B9k/@"M$`+%)&RX?lC4`i"H8)*4r%(n8C9F^<7]^dJtY(AM<;Af'"Qr1C-Dch"Vlgqa^j\q-S0MZA^Zm>=jZO'#+E_JE(Z4cd<\YBL[1Z^]53Wp%PD/EZ==!ct-Wf;<U0YbHKfJQtS5q[3'^P2Qr'K@DbId65HefB3g"Mlc_X>TtF<VK;#Oa75Cq^='0AKM=+5U5_1qg@tTWd"Vpb(?6%=`R]<Rdj*\)4&k93^]'@K@_`6A14\/E9j%ud4AW0JQ4VNbO7"a"MV?qq0r'<OPoSFI$grEG_`,kTXBk*]"MTJ/n*jT)o*(`,VF><%3Y0S;;]\\j8n10k'pDtE"CL?l-Hsj$5k?1Oi>n?Ro74])P(qVbo</SIW".;WQA)ITa(9:um4G@XdIH/aM_q1>[mX-F1)Q!Te.cgt%?;VpXEkg>-jCG49=BM-"E(hZ[bY]X:^Pt.tUeYb?G>5,S30eGb\p*9c3\&nK2XT#I,q,$'6ibo;1<R%.H2?0:2n'[ES'[-f_CEoJ%>PM8:J]Pn8"oo<M/5.9P"BJ@)70#;Y&S+J!<q.aA:*lAj-(mSr^+H3<jF3%aCal7a[(p4^KS#8UHcSkI>XkI*6Etp,/iJKGQ>?V]%C:;mbHd27*?3%.*:-Rbnmc;\?T&e+^5e)uFP:872!pf]i:.oR'0^A$4,U?&t,>4gV)AJd&fqn47&b3L6L[/t]0IEb7@*86m:^b2#%*0)R3\N6"Dfea*02t:-Q6G^DhP&Ab0#,7Ub?.(r&=qBZ_Dg$nVeGe^&;N02Z0c_<2Qs,>*UYdFHRJIhah0O42SG!a"!R<-k7:/8!%VactJaO1bedCLtOSd&SMRsuQrD_G@1k`Lh*),(M>"A#P3-;o=-RKjMlaaEspM%poE`abHdX#!@(gX:D1.GA#,O_R%.2+ZQ'0P]'!%4Grg?>1>hF/H<"HrcZ`+IL%GK'>PQT>W7puAKC<?/mlYchAJs:O.SL.1m5^Tp[tI[UWEd&!A%8\MohGE[PrGs9JjKXV9Zb^e<,<]%QPrWQ^,u&PW6!r>M::T[c&]mO*'$KFL-m8Bg)R:(QP80b'E#;hYcp[)Y&$RbdJ9N$A:[m)=kH,7ACl5UJF16V"Me:[1DW/+f;EO3%+V9OK8hGF+CJ.Q`n]\'&Tp&Z1"Brp`fk;fT/(G;`GY!NY+D2^7J6@/NC#mNte"hNb;c/-\F,`Q,Z&H1a1-nd("d&fC+Pm=DLXcu<%er@(6"3?O;o_;[0]?t#@Js;^pq"1Dp_Z`>u[Hi?a;;d:&?60jn.^H9:?4;UW39N.hTihd)Db/l$m9p#i+j7*"?r[Vuaq=k1nMuD@%Qr<AW\JaH[;b=6%7VF$g=KN8m4?G9KIDEe;=/.F7+*>AJOV,&/U+jjXMb%;Ilsg]S%%1c`quScg"$e#>WRIK7$Pb#:Js_YkP,YQB%,=d->cN0#j$&JCc'!.apCgjFtR>rYsnZ,X*A;eo-)joOIDBpR+61@fsCY&@)JsKq5i`N,g!1<+Wb('6;9P$?'eEh3?(njf8RW6(j%ZG&9jeAo-7HrNBVX2_@:\2h3'/C`lo_?gZ``o`c>cKmJg;bCK?3"k[Rb5(ondnZhjpi=KJX*aSX1j9^C'b.qSn>*]nM&.j$1Xj2n%*2[FqGCG'%E_kO$ICj>Wi[lF:TS<sm4di_rCjKP:3p=XPHjL.jJhb6e,T>#36%RR$nM+e/OhZM7A3-V84s1'jcb8k?bG]8Qk@!T#%;+MiW4GU23K!qd[>`ACpT<#*kiB`Zi&1B?:I:]k^Kd!T-@u7\qBo/C)g&l=]S$G'j0ut!$1-u+T`19a3D[?eX1C_iecAEFEQ,nt.%B?@%)7XS>Xh*9Ve:"'8!LM*K1js9[ug]f%b&f&XF=M9pUII+39oQ]UA8j-#lQ)S]`aV:>!]H63f5RTHP"Qpt%9g/[Q\]&4T)>i@*%&QRruP:E)i7bei[]sr+9qA*]UW:JqKV&gePXTF4+I/`,>CI&A/Xa#m["$qmFqK(0qReJ.<s7j1S8@s]Q^:9Fkj:q5YmII_uE@p<M%YlPBlZ`WS1TPEAQgAN1l[P"]4qnoD4ATM5AT.pK@pt1R+hRY(sO=AG$8o`ZiD*Nu4d8FKOBYsg+=X$krL3puBNJ'2@dlERIO=r?j%(kGBeL5#V$!o77a/PPABqaY??MimKH'=ApMWaXC]P]73AEM3&eRn]::caN5t"]S\-a;!B[9hJj;Pal'M%]]JE2d7:ET+!sS)'cU^%T5$a(gVhTp9puE*FtS7<A.[AY*JF-*n-)0<LXmKHMK4,L1UkaWh9s>9:0R<#=@*)ABDQn`k7T8h(:#dQO[_c[[KR:bWE.a8/Pq&Q%-rOFmJr8fImc9j/BHU9?8u/-#0_o%p^@K_5*FRTJp*gee:u_gh(;0^6B$ff9-m)?FIrqJL9XTj6JQt'=+tq64"l4`"W-&GP3cBL?%J<aQ[NsV;_)qY3aWL:W3UXH&dVP%q6ES`17`d'2Z:VuF#$$]f<[h2d=]gM1S+UeYETk4B5@q*iTdE"E]pI7=l+,9tOXph8R%qGp9%+,mc$/(G&)Kb3`\WA=OO<4lV?JeIRq9E<0$rm>0ceR1g)krIK3>.'/@=0'mi[-39KM$eF+$Omrlo^==Ul7L$]7,'`\a0)n-bi`AR%2,&Cm#Qo&BPM/>PJ2N6)Q$Rn<SI*_]:N;_ME?ZIjCfSV.D+8<_\1/qN9lk=kC0+u&):0_`A$gPi)j-Dd0j`coD?+;614F.<h06Vq%3Ql_ea)F`l>KJ4C)S]%j9g'W3$eIkh,]@D1Eb$G`/X9+C@t[g(gPU,'[^9WpD/)5YH>bN*_6>V-o*?V(;`FpFHRu.2KFj'\`>rAn%&t1Gj4[WB+3t,5f&W/4N]!o/!^!,+Ea?.T+/r:sY"[\+0Z#\Ma?5Y3)2aYh&%Du(I4V@m?TjVVh9m4Wg_a4pm`AP1qCu:#s@\:II%j-QtP('.bcA4$gV5']O[`KVIBCt)g5_,p`(n(sX+?Y@;JEMV:6R*1DO(Zc$CSo]gUN:r`R*07'&<N,8(7*f,`F#BT1Zo.733OUoC%gBuHoA;gghg5%7`?UhZhald5VB/EBX*n<&+No=u0d`3apcsF8RSJIG<REk\mIr6nuHhk-oo7lM.BN(>mRIa0Yhc0=+o")3RAK5Oj%hA<&/R^RWM)K'5]OYJ/oK=a'B43dIA!WrCB+796hN4V_G`OGNF9`+[p1P%oglEI,O8%%D/:03Ki`i#=Xjc$j5did?-km)'a'O7[^%M^hZgctEHI%Yqd1*a.;\4A=QXT#KULnZ=,C/S8/n>Fd"Am-A0C]T3]>,[p5SEeZY<Qh*D=+/-2bbu=H1QAaNB#Ti8L(U!U@A(kaA%\\B9A0d.ne'/6(M`0;jj&s0AIcRDOO+#O@aPZ0bDfCVK6gej,O9:25_Q3g<<-Mb67nVE%:Hd#EYh0785'%k+*3Hd0HB'2%"j/coC%(of>#]@(EP!U^<=q`')4Pnl5hbD$Q4%U3[2A&WS'V4Y>r--*Iq_o:,+]pcZk%T(>(h0aA>(6gOO[)76U9eBi/[IZfDkXb]gKTpI\%q5&o,AP,7KN(g\&j==6lDGJ-T.tL(M#npOO@tkk@1;r"irIci;R5jMSd"nXQFGaora_R*#SOcKmQE-*n$t!`q%nn1Xr"M/cos*;B%eH+uqM([C*H=@98<bG!RDT"mB(;@sEm@f;#&E5*bNs(56'?"Ti[O9?lVk^)k4k&Rj*r#h>Ek(e]Ynk$$7N>JL-F/lGYW=/@GOGqn%+Yr&i7X%#<VYI==1-6p/10HM2;ne6B<%^T^&4.,1e]P_p<W\kd.\L#U[,[GEA(*no/!?<$\gUs:nsSBo"B""KQ&bO?<?!V=6G=AK%VGb#N^)hRI[X,/6gtCB*B%RbDJ=Dp(]Vj^r=7YnW9\bWKX/Y`qR+"7t.[V5p$dMRdDOS0M^^O`ckco@9_*Z2lpGaFUj%!W,c84>U%Nh!?AHYeSX&S8'??h[$G#uqlc#rN[cd@Cana^7&&8i,;NWH=XEl,;nUSX?$=^e5Ag'l&gI+]hG@%"9R`hj)Y$\2;3re$#R4:2d0]%78o[jXbbD17d7oL3ih_O7reXDq?SUY(SiIAZ4E\B[A_OSr:<3B2V:K;c[?7-Npmhu2;_lce[feiEFi[2%oY&WJ*GG"RrXMWlMJ0E%[(a^]6`M7PP>*J6cX)5YUK"[uZWsenJ3@A?/M]&`Zan/e#I22N\es25S8<KQ9rmTi/6IH5,MU[nPWFBX\uqIa>X__dR-F\%UGNo[%@0drP7':^;V9rFcfX7L]m'k6qBaj4im!`0s":?VBhMHnGms>n0l\SgodM6q/[cYg;AkZ`H?3OUj\lEll(Xs2F1UNU=HG:Xj3-J6V%EbqeN:,bO:7"X,d\8>*!fD):"5M>#C04@s_jI^uJ,kMilFWZ>=#S&;bWs"KB*_97B,a&5L+(0\(R#+GZPQma/A6B3l*dh`H`)7jt%lCgO>n8=AQ2,mU%M])!)Lt[^'Xr&i1j\W(D.C>-ZOquPLPRB_mF:8A]#+3A#&:HKfN"J;k0qIqo\Whg01hpksh@LCGZ#<=S@*8WF%84kg0(J7iW/ES#&[_P)fb%4u``hFBd/1n(jL`j?L)+e%K3YH;/@1e[@QNaZ#9bh$e`e#K#/lSiU/.-[4UG0WJ]Xr0CRo1R#M^<nc%h@`047eK//n-UKMV\#>jc-!V:pr[(@b(b]\s6Z&sgant+*7Zd]%A[Hr#gOfG-s<ts^IC):le(L-Z*D.>1-hg"T6^.8"E5HdXf$3#%itC##+;\0[<X&I4A.E>Ym:Gq$`u^j>`U7UF<&4Pc8VYb!;;6?%Bs_h::/[C,>'-Ql8Rq"Di#qW<!IbC;/fFAf5\\m^<rfVEpooB+%<`KNs2@isEq'j]0q<B#^(XNTH!nC?c8u@qM?6HaCHkJs&OA@^hM3QbZd,8&)r#C^FYfqXLboXW3PU&.`Re$Yq'q[1+$']%5+\^gZ%]@[Gc+rQcZ2_X%SK9#24,\';Ya_NL?B\?gY/ER8^+r<tqU?Yt*#3iF<JiPHQW/.bG4V3<(6jJ`h^g4D6Q`n:saf&<.'[W=lo=@*)%nM<[qjWK(kca&K4^RkX6VqDq7Ee&aIieW!PkI(d7Z^W2TpDMT9;m]@e4d.bVRlua4E&b*/F^YR_*(m$Y%O]eR,UV60b=",/Q[8Pm%e,!&m8;nIj!-UEUS3=o/,5AQ%d(@,2a%HXbU>rQ<6u^Rl-.;I(*aZW]mEW6I@RY_/CNe!oU9+s<d%dZm+t#Wk_8C1In5'1mRU<hf%7@O>/UrWV<Pjmo`4?3MBKWG_3=(C%3-8'AtXYu2V>'S1apZ-]ENeIf!JkUE#^9[VPqdP/0^;n9o7UFLJ#DZF+?35P?Jnp$$l#IE)%45>l@2$7J&]5-q7"!&Pa+'oUMC?q1_$&9@>,<F=kiBbc7>#EhScg?LV.k@_;;A;*U(QC16q;Fc`\)IW)#Qq'H6_1IJRjCRR+pZnI%Q]Rt>4:1,\+u8[O^@3lRC_I\Xa_3W.+F;VaAL11iF8PM;,SfA]R7^>RZ:+N8"t5r34.<c1A7sj$k-;:CmqNga0@K+"-8U.A"3419%Rlc!;Dn!M^6Nu7JrMEi6)pU;]H"Y$m+B'88-$eh8oAhJkQX+PI/ri$*J#q&m,WnXlM/;!QoqCQ#KAY]f@H+#/EEVG6.#2%A9tjM1%\L><W=)+<73Z!LBlgiD6)<mmNFA\:6/7)Tr\XlE%QR/u]db7+jm]oZ5;:)p'qd#Km+0126V8fQnj@/%u\[qT5!e'l`;(DPBiNf8*%;0]c*cs@K.0?UusMSfC.iE-DZ5C`H#&c/M,rN;mn=QNTFg[[an"nLt7qIR59U+Cdk]Y?#g?[r0K&Hc+EJg^?01Ig=R:kfA!__Wq)%#s<2.Z+'pG49.8\;&hh_5(E>G"QTV4nd\IdLbYmV4m3fUncWC3_RWpe@=AYBEsJkY_r-bMp=o[kH9AtPd%c<(:djb;5+eI+gCoOE%D\kC->(-h\8HlppJ%1"cq:Z5?dfi#%)G'OS\%2QN?%BC:5[KdRYUdZE"gI>#IWc#rH\SjiJ_i#qER,c=$`Ml_+aFUF]k;`M,ms,C%/9hIM]RV&05SPl%N*cTJ?3):Cd$"t_94&Q-JTkMG$cM0RZL\D(H@ZaC_NS<a:7oq5QRLE8[-KLnp(BC_N3L"2iEkPeT5hO\khcW0%n1$;c!95%*pK88bq1L)M+Naed\S^BPpt8,Hh!ZE6::In=:3VIW$XgYK+fFEb1cs.!FbPCmGjq'soB./RIXs,d7%lhteLqL$(Wc=Y%K`!-VrXs/LJBGVlmU+oL03A4@>_,OC_)(cBJtMO+A%5o.>]M#@\J&$aM[LlO-"Gu'fl=k.\E8YG2N#Tk46;(5Ekun/U;U:jB.is:%%m1gB0S4DDnBBlA`uY%i7a'"Kim7kFk^nP28QQ8+!4(\7T4?V1Dp%:+YOJTE"&4LqW*.^2J?>(Pc0IM5bdjMsg=QS>lmj><2hQ_3%QCCHeGC2J`i\'JD(F6dDWo+Ven:GlZbY>_q0Kuf_+.83lI*!a6jYQArMOjQ2iI#6_??&9'#c!H>dVIFu"#on@^O""B^#Hmmo4>*r%[D0_o?0p>s%du4&pPB?,`>QBt(>mcb.bhYGgi8PpD]'p6`)^f7cE49HWLjLKO/2+mlLm;k[gpp^,k+7u^7pKL&^$_;k?$1*#6OcY%ao*_hq"K13B1i+Knc"rJs$Ygq0*Y7'[9X.CgaoCB4:)D.>RD$IlP)H3**ap9e5\jYmpG)?n<gbPc-X$,RoB7@!jJV'K,*HkdHZ"a%l&^2!r8\4'Wa$Z9o_HB;Nqmds+kR"7_Y&lHH:E&me#G0rBXdrF0Of8-jV*ol-t;>D8h;TnX?n:WR&EJlF1+.L64WB6`;g35Bd[4H%d%Ct&k?R`F!+KN_4UOZ*<1\j%AT<'fYs9jR=t%U(o(K?R9^#a&;HB?FR#/sa/$&6J`H>j#fd=ZR.TRe.SP6:>la"o>H)sjgf@9"j%^r1CKNsVK=qHRD#3InuLou5(HFQL)?>BRXQ?l3IW9P`]!M?ti=4ejC$MW>h>]8rnQ.PJ_O9J0"XROP&pYY8o8>.gV!O`keO5g-mC%E\Fs^=Xa$F,-*KHUq'"FD:;U0gZ)C1[ZTYpq7<^r-K]`iGH:u(nu=Z.*JMQkjerjeg68Sc;%b3EaCU[XVK<7s,)&3/ea9_YL237\%Pip3bX\bUj`GhlfZ`1XA_;i<oPi[=8hH=Ni.X,FjZ`"H3k@+HL`)[q0!rMur^8&=Lkb.X]c'Yg/^2OB>Z`3#'V\3!d$>_=P5#nuI%!JBn84IjA[`H*Z97&/kH^>0E8)f[p#M].ZbEqKDg(3kI7JU=Y%^0C)d:oJ&El#[Z^8R;Ha8mor'('.sO"),:I8npV;nT_?F20lkW%Do`WPT7:Xfa8j#0!"OP&En$-=ogHV9a!!tkQP_5D.,ZqrCj.^o>8X;15W@8^\c_*e'>K`,r(^Q*'eS?)ErdO^R3cEs=pRj,7Z99@%OVLff7@9u2?j90!kRf1T2fRbS@3RuBhXTr7[N+J;3Y:)R+Hgfg1)6QeKnW\in[q=cE<!KC-og[h5`sN-GFa,Q4nI[?rt\nP0S0hN%A:1<i.%DR..o3+$J;=P0X1"ZiJ=C*V5(f*DS^CJ,fg/>TT$ibCi<!("LSO';A5X5n]e1"r,*RH[2;N5uFJA1\F)."V;*m+HYD$Z.%kU3Yhieq6miVR#"XRt9TXVI-^:b\E$*.Lkl+sOtMj\D5`dX@dXU.gJDVr2UM_h^tl+fH!CM@ca@.oJ60<cR2f$VksA+q\).QZ#57%ZpaDpi/aQ]U9M+u`(=IE$@PX'ZPuqC,[tXd-`4PQLR>_-:pGsBa6.?;Q0>W/qAJ84V1&;o#pb6_`hg!E;j@g<kf8*Wkpdr$alE\<%J,iJj8,"NMIttLlZ50so'(:7p$b_s?\Xs5%4O\VOLmJtg3^uY-pa(P1h<MU_O0GJB6r"Y5$jO+cLk8Z*@Si%tm2lGWg/\CcTk]On%)/uQd"L>IX>MPA,9NFU8VHSX\Zc%e?032*bJ2?cL/+L5'-l/5]g/jH]g!qm:/g]#;k.<`_*3PDZG94F%`m%ZYD.VjAO)00a/VIA=%A1K05MgD8*cD$S%KNhia=5#K8%6@>K?M-1OS0'pBdnfG\Yk`MgH\qs/F2SY^hrfHH3>PB-]#o3"eZcO(b5s^K9b6qlV@t@6m9rJa%3]^D15;U_k7DT4mFa4GEN\if%\WP\-6uj(kNK;`Y7""_d+Pk87)_t[VEKXTsO8I0Q&WM5Tb[E:"'9&OB2/JjVX'P?"Zor_oDG*_0%#lJK>]C/V@n@A`u*sd<d1(/nf)NCE#2mJk-J!lDDH*r"!oY3*2J+oeY0GOio2r6f)b&6H:n*(#3(a_W.9L:/tC.`su.m/n3QJ0?<%,*C&n1t?Xo>u2tZr_g8[>XP4TDt#O9aksTG>?jdadsF!/e6uRG[t^_6]t.g[2$+_Gb*5.afq!X(0b_VYB*(8-:Lo..-rXj]din+(%\',d#`#%TS<SGliYIAg_$EV'%/:AKPT7']^U-&Dh.+8*$W\'ZYhfJVq@dn9u'6,Jp7o*jL*W*9p][a'hCU3rUS8qR[UTSke`.^""%WN@*$W$`$&fW:f[78YB)D,kTMbsh6KX92X!S33IHQ7td&pcV>f##-YIMT'O$++\LQa3HIV!hg"Xo45V4`F2tir,-JM/*VBe%bk]l%*VFamji#dJ+5Irg^*aAEQTO!,l'$CW-gq5T:5lU3o'YnQ5HP0-.0Tg;*@,6K[j_nO;csM_K.l<Um-fkD;07Vn]Cf_Dp0q"5%L\h!%mV63hB_m1Woi7B.cWUdR7A'ZcPe^Y`iCnh*HRo''Bs`m,[HSsdNn&`.1XHBdm>QMK-sYZWF))$l6fZESKg:3GD=Du>;CEB)@<a2k%Jd?J"!VEuCr9'/3ajOQW^;Ds>r;=AZ5q3[C[&Q$:aa9GmbRqXlKpk'A[Uj83Y,4q1Jr"98&'A"a6-n[g9gRdI)K:^2db(`=^%E/&%D"ETMqt$4'*WRfB;n*>>S1-B,45DkaZ-rkX1bt3B!rfh10!ua@JSkZ#'l]_/rM4+ca$q;jZG:V=gsSlsV.Lqp!'kse[jo0mh;JFu%p[XuZ%YK-u??)n7K/*Ul:M"9eCV[O&K'G]a-:h^2INatJ)FK@<\\<qh'<0e%#u;Hdke#Zr8/#=Urp&iar#D,>4o+5^l:UN)!4p>$%$uhZY+-hhmRUD%],l!V<HpZO:[e'l/<AplAZ@Vu'FVXrn.RdR7^>!?eE%4+6<C3B8\84M"[h/LI:fO)fNg>J99/&e<1lo"<.DP$:%`<2\r5.uMSlfIk&J>#cml@0+_p"tfH,qDC'7euEul0SLDCG(hArj$A)_6Q-e4WVI5\2jOegZcd0]an03f^%$.?r4R6h]C+)hVG.5%)kV_=9bOXBJ!5m0"5m`FhP>k8))bNrn6<CMHqLUm=\=&eJDDuK\0K4jMOjSfg).m4jBOnSN4oO!J7$2o_mFpC:")[32bh"]O1*RU%0iTuidEo([;?P)iD-ElaHdiM)#BB(1OAK_k?i0"joHmbL*p<+uR78<gc>c,Jp1UUrM*^fM#gM[nLgPBQEgWJ*ocJ-2k!3kJ5)^n<%q`slj-6K\lna*r?+bdlUf@FNRe/BL50"O@cInNDtk!#^OPP/A1R'7Q":`s+/[)EVUM^KNMlM9KJO=[DLk_2nDeQ&#o/5rj.MOsh%%?/%h:_"sKJ>fEmf'h&@D#f$,qH:"o6[PjTe_kTLT7%Se$`\&4d2+Led+nPqiXQVJ,NWRe_\>[@oPg%_qcQ6GFkPIC:J%u@G<-X5#%5J4$UgWH'YL-F=sN3MqrB;(KuH-sch'`;RJ&skOWq<0D@m3r0"9'tk=;=C$0/>KGa7B.>l:g;TC]W/KSl]DsdO:t<Rbr94eG'pnb%^'G&_Qd(gs$!Wg;VK%YM08cg;T8n45^:gjj+mFSQITheE1X=n$QgL`/39f=TpQ<^g<gO]26]URpm[B-J-3gWk44oKfO@,AcVni';%#=u#r\E[r,&aDK<PSahPGUlBSl!*<0"+hP>Ic#Xf3I*ojHM_k`eI23N,;P.18==:s7bHEC&u<T3g:*frmqt$+5[s%?NkQO@8)@:'%>Ot[]MnV]\[RQ6+hj%X?BE[d[2_=uEGM+pBUY.o&+Hs6^ft*TOANPg_jdCN57Gg6]PO!.^SJN/\ZGj8"q_:+rmC^PG>hnZ>5Bc(V%k-`:lnh8!h13<,EMAAF[S!3,r"dU_iR4]Sk>e^"TpN0SDO3=T>9do$WpjQkD+W,*TpA&>J+BOP'=)B#)[[]e!Ci;u.Y$l"^ju,sK%W.s,MRYN03QeU-ZrC4eRR$iH:jeL5[::Q,F;K&3clitS/W'W-ieL6nBhc0Z"#9ZG_AW(#<1Fd-A70tkl?;+oFLM0DmE$s*`20d6t%a_0JoK/0nSQ#a1F;s])f!!V>(6#AQQ\D4*#(22,?`9jjnqA+P#f[;7^+Vog;\)Q[U1a^Z6$t;:lqf5j%8tfd>,.'_s["l3u0!?R9%9%g!Q9R0jb"?#SOC$aC?fK(@:'hPchlm32DoZX#uRaN)r&rh3O]rr6J`4@MsHAgIhED>#kC=_rfABF09TMk=XpA]@n'\(hXkGqnj%50'+P@i\i%);:_p$&%6LZP`"o\+M1MO0j9&hN3K^8BW%6S?<;]]cP-[CabM3\8^*%m"Z3Dl7<U^Xu>;WNpDqLlSc"MqRMU&Q`Kns%jS*0blA!Vn2HQIn(LhD`=G@r(Z32Fl1If^BV&oI?^k_UE(.!J=h=7A'h7ppAgjr(&/OS*$jH7FPMDG0#mB.[''9BaE7K?*1:a$DO%N`Xp2M#n$dr'&E6U:?#qe9[M@5ESkd9B+)Z^175:,q!6VXmiP5n=72a#0adU-7CNj!,^Y]0OS`M>6Yil+fOMsiP7TNYWpt_+DnCh%_Nr?rRr-n^[YEp88ZOEHIR=5d@2Mbf\="D8Ai.p!,__MOe1g=LKusr:mFYGe/sYmJ!,04S&m3e_MF1U:gGW"5N*k,".G@?"$R#@L%Dh5$ahid+7Q58@GeAud+-R^gW<(HRTqs)WuG;/u%DbE\l'h>F-WScHPkM;F$l:kX3(JsS3'JhTPm_pJMV".ncoo]#g;i^-J=^=?O%H`8Msf$;he3^8l#ZIYQtdnN_l@?dM$QZH`mH4<9gqG\p6m61]G?MYa^@To_N[toA0)lDgg-K>M^8Z:Uh<2WGVH(bmDeE'TX-YSk[%B.I[_9IULEXf8HV,L>ae3Tl)^GJ+u>-j:u<5:Ec^Y``C?e;^jti@hqW`eTLj<3IJn49Cq./!0Wdj$T`3-U@%\?Qd+?ak;)aRSoA:%XlE"aq0e*<B(tjbHZ9R)$&^sCn;d$;>QOo*Z`Q`WHC0XCE'=XR,ZF<M]mDJ``48hGj>MF#pWIX9AsbGF[,48Q#_:47`6QLLo11.$%NhqJ=V*SOF9PG*T3<uI5p>oOni_,0;[K0,Yhig4&7^:[<C/hq\Ubfi3kdH"7I'rle2W?9P0P07WgGE.<$<97&leq+U8\7o6:utU>%I=D_,JkC!\n"iQ#@HhLNf1tH.!1Qhq2:-nlgd>m^<t@Wc(4N;:%:'G)Q347#R)8gc^4.ec]X]7bLrD_i\nB8.!=I(LPh)3ALcJ8Q%Y\)u.<BtLT!011^:;(+\6eJtIeiC<q$;dei9F\WOM,0:[,t-#=Wu^6R:E3+>I*MNuKfceU3YWLoP[$PP6X^;4(.t]N-u8pDMUk]%%G.3!$2%>QMaHhkf*]mu),`IAT1p#h1N#G"hP$(W`6iAj"],C!uUR8lY5W*->d>'LlH.21R3`+(tajPjVLQk_HZ*=uPU5Vfq?gX5h%<W:JY.]<"<ikF7Ookub!nt/$[EcI?D7\7C7EK8&rF'Fpn>Wph2BFnRn*FKp`Wf_2L/BR+U=Dae]]fKC;>**O(.RNJ'$VVpQ0GM?>%dn(r\%>/=S]#muCrR`*0<><;]dhtHWH]-'dUkUkXl]+T3%IlCu,(2I'!#;`)p_70#3#)^Pg.R!C2ggXZ)pP_o'/=#b?UT2cL1R@d%Mpm>q&D(KOi8Ppib;O#[=DrBo`3I^O`G!>$a_mB9Qenm6OY3,nIDCq[!L5oNC_f7]gSq:WZuViVM:hV&OTOQV]!3)Zqa+/GPPuGZ%MY)&fnMuq>[hcSbOP(E<<rt"/c"ZW<CV\^-[`H4D6#FSH@Gal$5MgR2+lr:hD*h";6D1k/>D/.qEot]-gc.p"Oq$,:Oe26nB]A)T%)VZ[L`HsVQ3q>iID1O4.<].21Pfn?M`i1r@r9dKK1[U+X*?)[JQM:LP_YgqE;$MD@hnQW>8UH-\VEShCX,*`4ps$.*@$f<Z1OdlY%0qCQLg.8)WE@-A2D%<X17+*'D<@'+<)G1]9OG<"@mI&`AdcL<McFG<JX>_J%%O/I/Sj<"oi/qZ1r>6cJJm&[S1g'bM"HMnq[FT(Y%Xs\XJafKARrC$?Rp-ooi=pVpL^28V55Vhh8XSdc/?[^!ieaN1kSPX9&LgN>0o(h$,h"L@%8d[+KGSpAB=Fq+m+Uaae3&#-s@8+rB%[b6HPW<5C*Qd;2ILGD[tSn8r-FutjQ)sn^+-eL>ro%6T++dc;0NL[8VJhp3^[2SW_TaB[)<Jd.P7ggG)bUd7GC."cg"_M,s4:L^/%GA*M5;/*8!@7ZpiLr4'cTb3A=0T!@b6s2o-%mj?R-p.%-0>5sUbhbp<d3W-CW:d63'%b3YOI]]E&nPbuLP26([.Y2oHOkr)Z-IEL%nWJ"8DQrriZi]:C-,Eu?@nGt<ct=JQ"-o_kpN)eQ2A_Uh[Bh%6>Uq!%riW*39RYkaa6MD<Q;EZ!Qo;A)mRf[H4RmV-I8lhF<kW24%A#lL?0]2q`k7`Q^Kro0!mIh2]5@&ZJd+!F<Akfs'i6E[JU+,Om(dLU2MeNP7]7k4:b8Ag+R/r+fX-5]"-t?n2`$f,7Drq7R@3=gf%g6PCHLLpiVfL/,-2Wh1+n`EO3ds%KhBJjUKe,JKe`N]`9O!350B5G]T(+p9&kEeY$ebU)kSe#3d"9LX1kP,r\INqU;,H0'rS`d+-%-_$4q!2c(#5-b5j</Y[hdOnF1Hk/VMJHmb4/[6GHICh424DE]o]hAl[>.F+dph37B?'N)AZatk!I(8Tn.rKFc$p*pj1WmDa)n^F_%J%XFTnCSeV;S9QLE+NW(SBj).>:P29/k^dB)HRU\o(aQr?lLig/L7^CJk"q;9Ke+'(<'NcHMHGl6*"1^%)!50>D>)a*J`:36?f.o%-AP)6]dG[s(9htL="-$C??KepAR+\DL<>G6mBjiaTW!OCa+nDjAijKWn[+IjmM7*E0@adUZ35\'^8n;\rJDD>G\M_uk>Y/+n&GNp%>N_T%YN:hTYD$#1dG(BRGj^e;B_1`=L)h"ul<(-e/O"=/h_2sMBP+JPBPcBhD!a#u>oA%_46fA;*b\mI*22KVhD=-n>0`".GIEL2%d8m,4%&t-.[a&`8;oh5lM_,J\1</;iM(DJM$#.KR$P:YZr`CCq0772!^l(F]ALFG"YV>&8V]6l"DGe8ln%c@`gE)<33nBD//A-3V%J&%J)=$S0d,%Lf:K<Zts7BYK?8_,9&adPQI3,PPKbZ,S.!h'MX?W*7pHp<WiYQIK(O[qa_(5lChS#a`uN(H2"f"D80CkR>824%k]%WQ/_pP'\Y"Br4[F-ql$)GVko%aJOX05r-EC/[$NjgK4^3*qGe'kW7d5R4!D=q,\r9^!aXnab`WX!;N;BM<9:jSW<>2kip9Rii>GV%>[[HFN\$[n[Q3`'HOMM(GNOM\b02$=\$(*[)lnPfYa^FT%1!/&Xg*GSr8KYE&\#3;Wq2BkMP'3?esJ\oEd;q0'[>$:2f1EY8>Q3V%VVWD6IH6Rq@R3Pa%Vr%"UhFI9\*\7/.-V/Md.Kg$GVrF<m/&M(D2O!=%@YCFqtq2j>l3H0/`Lj-!N8]"H&q9oI8K2^.5(!%jtU')%f8sKHgahi"Eu1%DClT`*I;Gdmg^EZKnO6X=K<c,9Cr&+g'rA@X2\3p$:`=E\;DBcW&LOdS)C][urfKbFXuQLs2quET.cKg$q90V^%Sd>&BYUtPa&SA0.S<bSfdT.b=p6n.4TO8/POWDMAIp10_eP"jr7X/$^pKiApXMhKdB8b`Wp0ek:l2WsckL5(%n]QPGEY+)ICAeE9%([^5>b"KnJb6Uk=pG!fQkfd@-'&@UY#=]deE%i1cXgs`B>:XQ65A1Nc>72ZtO0^#.0<CI.KfY]3c36iP&::>6jMREA_rkIQhG\m9%HIK-+FfjN\Cf2FrX*5Pe@]Deo(9^c1Q>Mm3)O`LP>H#3f=:LB)nF6cV0]fZ\D?!san$[#BP$Nom_>]4;&KhD*dgX6MV#@+3D?C)$%d"ZD&Fe0N5Xg0M9AB?5kAa&U-ELFZ$@dKjf5@jknO?&J/,i^pq?H0c_-aY:G/86"#``j/Y+Qj)R,mlaCjJZEOLmE!-B\aMt>Z?+F%ESd)$_G(XQHHU7Ffl5'C60ekZ*DP$$c;3#n3E=*]H/_6RP`k_rQe8WW=EGk3>-MNc.2sDE:S\iS/WeI2[h)$aG<oG;,G/B,!_dPt%H8<M9-U=hLA`gt3>90Df]=>.7Rc(V72SO`eKr&+HerF2gKLGh@#^PNV.\scg'4A&Z7]:(!imsPCB##<j4Z+4u79h\Er)IlN(k#NV%1>,RD/!,BGMdYL_busDDKXd1tbQ(9M&J\2rD=X>M*S#(+2TV?n3J#O'/[>EP>QB&q.n^T6TpUk#+dV^UmR2Br<E-4_,IO(=2A<kE%XGL-G(;%*o9kOL!)C\;E1J-qbaOScDR45_`gIe2C51P\2V>q=eXiWG-[c#m"LTS2)MNe^%QsR9`Dk"4Z.UM9d&_nW:QPJ^0e9%_6%Ue<)0k[#i5ld_Q5WpGr.'@qsB_=s'AO]:>qbC@F#9B7748O^(<baGuWObWC!%Q9?jXXIcQ]G1`l<_B=idbQ`k/2Ll..^sX/OeGH;%ou`]n5]$);)h03F)qS)C6dF<>HT/88LJC88USQD$'TGcgr+\fsD@;4).pSnV#qr;8-NNF:NTZhH^/\a8M5q]n(P"&g"^W`JV/[Ti%b:[mJ[4"&s?#eS/RaEf',;kkc(1p)<$qP<Zb,s_6L7aca_Mo*q,L/frOOb!^mg@3J>2/<T\<p\ZnZ$0l7R?^A%mKT`Yra[85Uc"H%gh2S::Sh?J`W"6:_qU'+F?APDiE*"''cE:+InWOIJ1S,8ck:AgbrM(Emr9j<V#XB58\,g\Q*LHp$i+Dr6pPk'$3KfA=le\tA'l<n%e3trb@qCl!h&TppY3n+ZZOG1P=K]eJ*5<W>jC?HB8uV,t<f]_&i2j5o(M*8V=^3@#m?]1,RNgD9^9LJ[:!l`Z5oL76g2o7?la$M(%$Cq]=&qi`,NQTMG7/a4.3SP,6i>HKl'2K:D.K11<\VDXcH&aq34Z_q=T!h<@d,Lu7E9hr_*p`T:S#@F/;@*&85/*W3Jd>WWXDPG5%i6[8H,/LLe,2K+iZ\jPDiDJr(@eQROY7?bs>j$Kb:K=I>Aj+[k?'%;74D8@\Nsbf<'RhVA\I>SS%^r&gl`TFQgK^%'kW?(RWL:G^%rbU_;Ei,$"NkWu%PPgN8!ho;P<f`D9iZRtZ-gHQX:oV@B84gUJa'a]5^;Y;:X'leoqs/pnJK0fHA-^q9JOil*?s,OBMJb\\0."!J%pBT'e=TB&s`R%gXhHPmN#J#K.Z%1(K-U#tJV$*3m_bhokUhY<1Z58<T\#+*`&T!BikngEZ<;@*GH<jL:!9hLtKY!(q(3@Ica5p,`%!?fO<j^LPR+KC&!6j#`!MK'A=JpKO%4''KNh&&J=iGClM750#M-[.M!bX'r0V^rq$M.F]`X?0u_OX;-%k!ZMCI&aZ`<Q1Z;>u^ej%Ya?nrm-d?,J;P3%]'<%g&:b<5V-Vu'B9KMs4Eh*gL&qpL#R(CFI&1m1D[t(`r5g"BA%Q7t$aSZ1G0l4kX5Dd@<:(1q0hb,/Wo.<n%%7?nX1=!@8+?K#r63)a:Nket$XoQ9a6AMoT3$@Hm/Z\9rm>?\%o#H%2R]S!;EYqW8o:[EI#eXnX9N6/jW8Cs,#\4=rkZkK$N\.q8%<mlD!2daVmIN/NL-h_:X5RQLWUEHZ26htj(4sYRsDCV?M9>;;Tk%I:m(L[g`j"T'K!n3]^mKph`B\Q]86CL'mpP$L0]4=:<*\FnB%$JQt!ib1660K7KU'PL##PtCbKp95t^X<Ofc`F/4VKZmu8B`R-nP\u>ND,Y=/TLJ$cSkHRcAFmHcA'K-T!4hb6>ajPf=[W+R`s*Cb%P$G&pA\[b1X5)l1b!I5XWJQ_=RBJ,V3#D,Oi0cH9@WITLJ3ldX@fbZQ"j_YQl5B_m@4X;;mi2d!=NOeU8C:4R?>;(Z@c9-=*H(7A%"h7gIltirT0mSQ1]X\T9=\qPbfkp<n#&-0glI,<gFDg]D)Mj\5A5qr9T**'^b?MIG`i?8B%*QVhTJ!JlaP'/8H0ee=[U'/8`2t8J%YrU4c1n/<iFI4Y#h`6X!aL=N*&0s5c]KW#+@j@fX5j,DfNL.1n\u:]%RB:]<kro(SJ*>J=_H/u8(dM,k9<K(B0;i,B:g"2#!bT2Q%FYg.?@M.lo$=pO5XW!Lum6pA#5AUX,HmX.POqe**#C,&C%?P[.@5G%)[k_NVO;U)R'rkK53KsAH3YJS].>h&e%/&HF`j;jdQ":40%S'Ne2!Pt3BHSB.dkY<STdV/f5chj2,D_-\%b.I>:l4eT8q6hqXNs:sF9[^m#)G*,\^e9@4k+H(^+nIH#Pb],2k!@(>/;WI45YaX>%19&"$9gD%n((9?8]Zt/"W#-M4I]mVYm<%k"nd5h>h$uZ$WB:<o??(kk0g]!bMKL$j>*TlRXab[2Gbb@ff8AP$=a]Mg\o"'EeI(Ne%[KR9oAL$]?fh>MKPNd8/8dIu-iZWGFrE/W=p>gu>%k$%!&h8EnE!C!X_iMuf^c9%nT"pJ0/BoV75L<!/3u(+Z,@QWu$$I57(Kf_l%fPuRJ;"Kk<S^<u,"^HEIHRd5SL$t_u>!3En187;Xo]r;+$F&gR&!/RYcl-*JUf&O==+?Q>lsE#rU%4K?:"mPnM*$;n1ba,*,.l`,%<\^716o.AZW@'O!IPYZ*oPuMurtq)36;h\aV"s49-.G8Y7(9"fNQWJ6G!MPB;Uim!L0G/A()O`%poJ@SJaf&=-Qk!*?sXTj-UDb3%+,9o\KNQ^I&k*eC6)9TApU[VW&[/fmNs/!A7_32h1c4Ruc4iOH5s)bqO&`XG/s''%KSoT*REgqI)kIV)5k33;H;F*8o8!ZYHdr6D%rs;.5rEu/-dRCY*b^9`FjkpIKIo)=gHWC@=*TGHC`\s"'*8n@tkgiRHcX]J]mtZEa%Y[5-&tQK^.d7O<TX.7d>&[:R%`'.]'l`1W%4lCsb\nl,EeW(C@p[iKAN56Lp$AU,)FD#2WoO7_,+qc+IblV^Fh3ee,k]9Sl.Kb5E]O?K336!5kUg(B$#_Krc[rQsA-r3+l$P9&9%N"@ef$*BEoaIt:1E7#=M8'\nWd<d:PNKE]e3?6VhGP5H4D\XFacPf@fHgtG49k,jnruOZ<SY^GCZNf2MCJg.pD%Rg\DCK@clXkuU%)a\(dLpY*OLdHn]<MoGojEpKs[k'LEcA.uo[^_UC&D\h8@F^G-\rLE96'u,3RYUj9)E$?nE/VN-LWY_]"MmMN%)*@rgYi\!.dQd/%C&pVXcJmG`g9dNj5JO47#p>GB#dOSo&C"rjjYtTn_kSd%@"Kn9V%+7>b\ql[i3&=EHiPm_hZ`-o%H%Ts0?KhmY?SPJgjX0E?XLd8%:bNrcc%OM_U&l6SqQM(g&=LEVK?>CmjQPA&4RrO,K(OSPkoOjg32#3O2;&g%:,g+s4<JJp?s1-G>+`\E3R,\,,(KA14=.J]7K1P)%#VB(##Y,A'EjsSr3sRI[F]EH$Ru^m+>4ZNo]rqO6"VHR;B+EUA69Nn2bD6^4O4E-ei!_;/]K!UV:i]s2J?ueMU2U^o:fY1o=,LC,%n&a1dQB1W_;\QP]Gih[OX)DR<*%,=?UVID6h%qZ^pN]6&ODFM6KD5EMH]+RBUdZ7Ck4!?^g#5L4X&9DCp&m70]<eLK<l7t@CP"OO%!O8.f;<Ss\Q)d7/7!GeV%gEk385U=6<Z3Jn&aEgSc)qDdUXi_RF*^t%,SAujb,CIb5UM#YMU_(*5Ra?dccf91,ID7_BLq?LUuWlB%5t>VWH8c`^DKeEB4X\klPLpR$*_jT,KQ:L_Y*n.=.SJ#.$Fb[0@:,\E?sMBo^(bi&MQ+[TJsEd#0k'4%2"ED>eV=kKM8Z-=*&c]Q%[0(3H(`Nu`fOh.VoP;)J@2GU:L`e*>6k]BSco`%`']7PpB8P9Q@](J\+:-O65\B]!5tnNNOFGL!3<3K%*6th!+X@uia>X=#j\H6M%SJ_<m_QZoWe><H>?je80c+H;!*s8<O%,gW%XNUAY`9dc:9u`G3k\%leF+4$0dlHjjb!U2rC\_CGhV*oWpNMa=m;V[^gqDYYh0+e'%rD<4'H63n75JMr?FgQh'H&WahjE6I,e`>;7QKB8NqD^_#kWUOW-BN!mTY/<f[$Lf1nbJ\4H>4&Fi-)&2NYr5L&#DBKOPSAtQciD?%4l!hJH-G9'$Rd`:,HGWXglb*1(@s>_J'WBrq'Wqs:,>$(3"Q@TFkt,PY<\quA9"<2mZ+7lfr=Fn,&8NpjITaks(,*:#t_`M8lpil%BoNa9=99VXO$q.UGEZC#kF"Sm>UG6Lc:Fq3W!?'aX+nZlEYUo'EWT]+lW,@o$&k)Y#rZYG-bA3Wni$2,dTgWQ%AS]dogb_X+:6j*%ilPN9%cCNu<3>:R-^[!t0*k,a6pr_!7&N8.+t8mrhW6_UZ>W.)c-Y^//1($3/un+ZFMqb7R:OLL`E0GmTD?lqCR\*%J/#Ns`8X0r%`b9KGnsjH6O?]3W6dIoFB\d.\4SmGD^A+LG!`[J@gO1-d]i5Q)%WG7m>h"$7S^X]75R&REi6`&d#\"KC"+MC9[Z'YHEI0K1+!H\j%ca`KpU]e85M?@6:PB;!0:GLTt;"f6,i=X/bim)d/K3>V=^5`@l=)J\^Q)2AP[^kFMKZGo8K&u:V*0;0glI=t81T<G("fftL(F68V%41J]C'$=u$2Wt!a/"K+XC;2AGfl"IJ61+2rQV\j9K</(_P-NT_?G8M.ep-<\5nWX88F9S*mGge>'3V[!_\Y>^jP/Ds\3qii83ZC@%BA.eDbSu?`WSus#b#>(5oq?n6koXnrMg+=rP]Peu9gI)M(F#0=(GN8qjZ7#2%)#)#SdL!6Ke9bl&2UKXc=+QcE(#Tmlb+.>^q8G.%3rbJ,gr)@FOAO,iG>k>G&S-n*N"-jlONGGJ09UHX6V<$/SLFG($9g!r!$qhDrd3eU:sG.M<jU#MCg%"H!O=O4#J%&]HKO0:d-2Pc%2nStgiDgGfq63s7$kO_L#g#n]<I`H!afS_=,F9hgKX#["3mr<&8r.*lgdLmC_Q&IJ'L9lR,,>l,oKQ7/WS]AOocF4sES^_oEt6R.%q3Q4^CZ[W#`%3f5ac!q?1*MPe!s+'qHA.[@4+FJE&OaXjq^Ye/jpN[7p#j8co)c)&]O!OJ;JRq(P*PtC!\MIh!mt$7><UWE<8?pR%Z`d].[`)20kT\Z:#Q4hZ2I'MT%B(g9!64?c+1PT(s1n$%8F7A3eKLb.Um/@IKrm<2EGHm?`-7"<]Q$>!2.dhmaW@\(@0/bIq7#]K%BKb&I%aoRl!bDo4UppK5NfFgOas;`r1m+/U5bB2O9?8_/`%]KNKpoono>6[2K;\+2]mH:(M[odE\BNUIL4$I_?3hN&kY%R,eZP0-%bSt?RjBtD[^GUUc/)1<s-eO"b)S8k?AdlL]9$"W7f`lR!"UK#qTuHcS.0V!)\;:-24LdG5MUDjaGlT9NL8#8>Dul\6,Bs#7_/=kq%:GP6"grWBM^o3Hu#LN>[;EQ)G'3#Y[Fh91NU]CNH[`c"?@fS4qNA`./'tQ9Jcpb>DKG=77ba\72Y*6=(+C`miqHE-Y_k*1#J`!NM%K8;4KT2>&s*U)`R"2qiD(34BG;.YEU22IL5j3B[n4)tujE;3r:\0\ZeFXQol\TSPa,\0(-Ut!V\<OS%NZ:`:'_cTK%I_JfTkAU1,%[)0P3OL.2F]V"9WL/o++9#S[5p\jpTNkt6F.9cQ7g].5,m:M,t!4u/q:TEnq3u=7To>pHl;2'_@(Y\Z4AIf1HqqM("_"oK$/;d4.%Xp2/JZpoYR*aj$L4cU:K:6F5*9HJdD33uUVqTA33K:lJe$6t%R^geIIV^9X\j/InW?6.`Z?8_Z-K!]SsN&7i7nO/dm:h2_Rm^20f%%X1U_NMrA?l4T%lWJrC5Ic%_-`hb_7I;i1c/\*?&X*uNcmrj*.k$.(UI=W5c!E9-B9,s265>i5i(UWscH"-aJk#qep9CeQ'fcS%<%r90EF+X&djDgX)WI6:LDX=mE&%jQlcP4o:VK&BG>I<d;PhCfH3LMl"b]Nr!<1#9I9`'Y=b(TY+<\)!.%3U$Mdbm#n7;uu95#bB@D%/O+n:$K4'pHu@r"-$3hi2AH@U@h>_s[P>>o%T"Ooe\!Shp.[[p0i=ns`-6rO6J)[_&FnicgZ6*?NVdH4%,6j)1(r^L7+XF$eC?3a%E<XW=cTp[cA?j)MU!9a*6Q-APkep#24769tH,bqR#dRdtdr<6o:gFc=#&*B?K7Xk#qeB;?fsKpjJ9:,Fou!GMU.rIcc)1s#5c*QW%@R\c3mthV7jnCCjDL\']LTXEW4Hp9>pDdZ[^NZs+U-k'*hYj!#MG06F:nFG2>QTS,KBK=YF+]dSFG!k3UnKU<XfnFR;p>p*n8@V]%V/Io;U0Org`6$j>Z<$H0m#Lb?i&Obni\N@G3.TQc%?NEl%nY@lkC)Y@\:<)\B?8KD'+o7Iq?T?3U>CM@O^Bc6EeqMP022hL\=Ucp%fW9u'E#"IB!>!2+*6)QMkI'nUMQMFTOX#CQ>+<<!08LRE)TDruEY,PD$6'UV++m=hkkZ-udc.[(JqQr-AWS4iLkhC.I9"D5(eO<E%*Fj'a-Sa`sPAlMj?j?(a0nH8@s'@N`RBE7C8d#34Bn:*$.#oq%=@W'"rZ-WP;'A>5S_]Dnek6N.oA\1r"<ig=Z,]l-n0du4_8#tR%?)QTf^u?4/%,(dI;.A+N.L<UGmm37P&#^6Y:(\*:AWG@h-@a^6)T$e]#Q<6m+l"LEfV:S$(+!#:#318M!0D>G>hVlm6Zs2;l5]Jp%JDsYP<&@&%Bk1KmD+EMOpo,l<.r^*bmaQ$,mWCM0.(>9*b3S$aLqG9qrp?TD*YO5FVscW.:,&DA>?.hWEj-GAkL&_?9ELIQG[9Jd%!G"H1O$n+;%'7(T61p@'LHr<u"u2tnYl<fX8KafG#88($Vnrr@+Z!SMn35hLHc0D<a[.r?9Eg5%+[V(Iln3X6J_$FcQE3P5jDbT)%h-Z:=DF]5H&dI\;jd<;4d31s*+\0@/1)f^"(ATfkoEFO\%V\IrSF\+6VarGUk-7!5nKQMaRNXoh!\ju;DpuecVpI2r%XA7.KTCPC%`Ii]2D:c+SHpe]K8u18W-\(Y_XeOIplrXbLm$>`98o$7g/s5;8HrA8O(;IhrOM.k'Pda13ER%0mj$Wghd1^r?%slGl4(jihrXhT6%-giu2V9agNKR4=l=j+YJHb,k+>@P;Hg%Uj@SfY,$8pX3%,_757XKQ[(T#[[^q2k06S>UNS[HKIlNAJ]HY<,`o6Ehc6:F\+=q1ti,%fL"IAI!G^Ya>7oRA-DI2:kEhCl'\hra9tn(n(aH*B:DmYa1F,hSa.0tnq>-u%kUC(3Vl4ig*\'9GVHmU=oH]AWp7eh?%&J[G]NH[%1JDAS,h:a#1\L5W8tt0O<bjm`q5`LAjM!+=G;UHE;IjRgd48D/^]McBDWJhd#oDH\EW!3c#JYi8r`j$=*>\)(pW136CoDdG,8H7>%aMQt#KH$:\S?"i[.a/Cdd"-f&:!LG^4&*8e8m):(9i`1>jJnU=m"q9DLbU\h=c>N"S%@C;Zd.VLk#o<\o1GVc?7?WT-g-2eC@/78%R@g'VF^Y%pJ]FKiJ((7p,4bg*)1'h!A7BGiF;g3jY68tM-B"e2LZJ\d:W2G1pPkFE+jR=Uprgg5-joHJm+glkF2-;)F"$uu=Y!88%K"Z&aY)h'g-TDCb[3[&eTcJT49:,@EXH!te!1S[#Y,VNY.?1cB?]ZK76.#$\-tYE<J0F.WZ>IG@PtXuqb)\,<PaPXT&#ms86$r`Q%a`/>,f0d4XFNR]3Hr[@$4cI$rWX"(-`@uYg?i^#U[4ouNr@1mh%#F0]PBBh&o-LC@>ZPk[gFT@5)2c_$NU648+4aGg!b\W+#Z=X.%\>mR.(fBju4"^)QQ,\at7BVt!b*+#?aWukEa)Tq\=9,0;!'mqnpG`ll2-.c[HCQDM1<g5;emIh[>XeL-.fW\H5Y2F<Uq*3d->r4$%ehtU@G.1;3i07uSWb\r8W\$ZiE3m<JQ!Rq=-+H?/fQsKLbCn#JNEA^eV4X:6gA*Z-BsNd*Nc)V^<@+4ca!dUn7q#TNWhj&#`3LRM%?od5?2"q;2_rXoU\%'4g'g&rib)@Ckp/t\LB/Pj;IcN-a@gK+/<nW=Os/Fd$.iQQ;',(BmSBAM]ZKPHHJM,M(G11;JE!A^VG)ht1%3\bF9]q>?0F^f+AD?I9_6T1dGIV$o;M<[NpZB47@AOdTLQ7Jr;A/X\"RKDVkCXD%,_e[ESih7\@32`3O@gh:2c:GA)-5JhK-u4[6%dO8.SqR'V:qjNWU[1h&]^I;ld+e6+LWQH:CR;6\hBIn^:]2q`'?'W97+sVTXY]fGT%-X[G]5'?p%\T\nX.W##nsi_oig5n)IWf^.%jrr"X6MW;YIT:OS[B^m[$G6IcQ<QPCck\J9b,f1>RP-]I&i]5!8+7sL#b:lf!09f55u&3-lMMb1Yi[T+Ol'pD?p\t&;+RA%lbMl!%OIB%B26ukUA`;6@bmm/l?nqN/$Uj9[l3MN5"/t=_1Z*euMW_\S8kM8=cQ2k:j@k?2'=t8:`/f,@"=_/>EX7t"1[`(6XVm\K(d9Lc%)*sf5'.Jje.i034YSP<8#Y8MgaAuM5r*@U=f#nL4%^[3rM2knpI2Kr[2/;P:c;?U9QRJAjZ7/&1'ZXDRVC2or+Cc_,X)>I(8YO^@%ejQa]k=s'/6r[BXbu^u.O'RJ7]4.`jL_o5D[X]?uh_cF[3E&+0Bu$[j5R;lMfh?fjg+LIIIW5UAO@CC])a9+`.E/;oOs<+KW!"!T%#Z_E5)oNYkgWqf(nU>h1VCLT(Qd+n&&3$ETD0H<+&JSSS;Cskj:+FS^i2<&=T1u!UQl\MSJol[QE.J`+j:rq@@G2m81H+^#2\9\C%mk5f3s+F@/%VT-:A<E]O![ue)9d*A39KZ"c$^mJl:oe24ETq_QN.GjU_N,mm.(otu;@%<M&?::h!u&Ys@;:t(LdMG3Kkc7.,qbLG%U7=qEih?Jr9(i%MPYO[$'FKb\$:Y[I"E-U(P!jX!iIjq>>B"Fi%EoRr6:$W/2XuA1Og*1tq6i_f$QtY[q.$.,.%;V*7a@'#$`6+Q%DBjbfk3k&?:-%Ak)[T+H=_IS1)\mL829A,!P>i>cLckiHSTTi[dXA1;(5GahEu\C^E70?Hk:e:&ikY=X:^=QSdCTEoS6ChGT:u?Y%-!6JU[[Pt=d)Hoj/n>M+\!lEC6sGnhe;g4!^7R+\0q'&_b2P[d.ej36PIU0uY]FrA1pAMce:lBcSTVcpPZ=40qV`$FHHB,nNE^`=%(*F.n94"F^ZDR7fo6SqSRPfIO#(B)t7FR)5^-T?E41Nq>F33+%rE8]UAL83n;.=AdJ82-CWfVM4+,3nl6-_']PE7aSl._W]6\m$M%\s8F+VTd(YN^Qf'3-3?u5*D?l.n08Vc&Z2m)^N1cM52(rJiT!%c$Q%6_hs;)U`lK^`#mI5LR`*+=**Uj;LHnjDI#kDW?Sc'DmEc\%!EUUT<t_Lb0hkaPOJr;UY&Q+^RVT8#a3`apS/onhkHs+tBJT2]F/IPId[\:7Ht3&"X5o^G1uQ;E!G"!g?7Otm\rh-mqDJ$r8"Mcg%!!RM96uoO>V*0Y"Cn"`!"r9P.K#fZSGm/K]o`\'%"e)p>g5C"QNHIKHf_9V?DZ(s`F$Id^B`7SIKDP,\j]CYJC7CPh;I.?O_8KP8%q54!^5cTm.hdZ9!0?I;gNX7'Ac-`?'9B);AF>0teY_A,C7$?^,@-7)n:eVOQ_upG<`5AVZ=!<\WepaZU*BP"rmc%'S\p8O<SO\I3%O==cj,G/<XqM\Q,U>VmX@i-kT3NXPu*^0p.V]]sfhTKMo%7'Ps1JI*APT*-unA+#hBJnW)!-qf;j)h*$bZ-ciS%RW[%j4EMb*<KR%%C".f1TE2;^8\dt^P@otSj\e[d6NHN8V5J.QesKRJ::3De-B%Z-D&;/WD1bGge"&^.[n_qLX-XZ.dGKi(uFV2o5u3G,G@%AiGf1*%Rsm]QMR9_2KCi8MZsDrtSTm[W(mcr^Ja@dj;A7LD61T:5*7TFPBu*J4]c6rS>t);c,=V44o2cnM3@`3)?PdiGXKJrk_$Bj02IA'-%LNKG>L`oniH4E2\#/TYW<ll@kMO&/q>B,M=T&Lk:]W6(M8=jJ#--/O5)fJ_F&jb(lg`RY=#aO?1AM0KkPqXWi]NB2.1eD[U!;0'0%RtAiud0m.Pg5!A$7%W?L+SVU1L;[19McLG>@Jm"l6a)8@Em:oD-aYslT?51p9C!q"(uog?`Zd^f(BI+G%M2h3B3gjO08D<.0ZCuB%DPAHSmFr#i;qhu6cfr?uAre!LK?Rq2X%V8QdXjn98u=k?.InS%BeiM>l]+dbUspL$oa!_P6RjojG`bY0cmO-f'`]frCFCLF03'l.%Y==*^4)=Up5K:R:Q'Q9'2^kQl.[`W;^?,]$NP2+RblJp^?En<jSrF#HF_g(Gb6GL1P71QLJ:jt%K3:aJ=tA`_7^<-J![:.aMK;0m%(DY?qhelCQR6OKtWa6?f6`bP_^:>Q<A6ArialQWSR1A'<9^,)Ndp_&UDn*<*0TR^+c,AOjNl+G)g_'3U7k-G:#,:$S^6`-WQh+Yq%B;KKGpk9TK[E'3u8["s$qQ9Gu9WO*R;N=CLD>i].X75*EhIL)05UnTb?J^3C-0ZaNmgn:>Hkr5F8=8=u`1`+t"c<+cM#I./GFIuq%"Y%IBGsNY=SC$8RR)u:>3bBJ'kf#d-MB?hRQH3!AoqJ%c"/].Z+I1S*/W!&e_aq\Fn$(b.BX"3_`T*n0op\9)bI.Df(o0[QKe6!V%6XMO)K'[tU3No\a[toQG8$,hYW\qf*M`bb_G3g9X`cg\\^8NTf2DI)SaK.YXMIW$d=CR&bmei^-ZHB>Kp//SG%$A\7YBK9PFN+;M%Q>(oo9ND>7Blb1kO`@clr&tTLYjB5>o$/]kf7W';n1Fugnd(h^m%lZo!)cQE'JPcc?T4g]J)dXXcDa!H&Q7U2C]Q:AmW$H[=%%Mh%fqI)c.:.JuQk-!M>2i@)'qo"Xhh.L;+DIta;2PYkF%?UoMLakiOTsZ.Q6kogA;L:aI`;h37ugeZ3F^Q[QEegraC1F`0ik^`dW2n=%adM6:OfPHDS8,'<RY;ej2Eu;]X)#TaH@b!l]0e,Oo;tViK5;YDhGFdCMO)5?d(@@I<,IirLL+*9?S4\5qTl`DH*>Ja&j_:'Hk%po%!ckiq,6-VW3%btA<`BK-^Y,d?\(RfP8@'*o\XE;3+DGXLH<EocE*!uaL^86D:uqYElUMd"E,Uj6Hu;d:b2ZNKdlVW+J`#ae4[.AP%<>W$rkI_n!dg4$gbSs+@)h$qD6m%fI4:0dc&bQ=J2_3$SF,MPX`ko&e^Pk^l1Zns^"2<Z,kPH8tiU61N=mh#_Dg1^?Znd23'EF0N%=akDHs,J7^o_m@,7Br;d&!3;][TbC$XUuUmF`ErtX_pJYG=otf(kM2$QJMuuhLlrO*!B#g6pu3XHRG'7-;b?a"VE$p[Mit2L\LpM%bF00ggqt5Sg/oY63d7'Tlq_/c/V6Y[qscRFN[cm-)Vqe=Z&hP]^nBOC8O_Y&#tJs(<Tj33-+h5Zd9VgOVPVlqQWg/'J>s:d>?3KP%8hO+1qdM#_j]CG`gesAe9,pTIf8#bE./;2J[U5]-=OS99@FrJ1iUd!UZIf*&%alTlrX+tip#dskW5em$I]o.iA@RY&O`tKbj`r?b%T@[.qQ#3V[bm`G6o(1nAj7Q+P4g%^pF>(_P&L4i^I"8AoICVXHku_4EG!UJ:#@+_Z>OUnYEE[ed/-snZr8eE&_n/4!U&GmI%@?D%%B!Q)*h4YRTd;S'l!SC'I1I*E/*hco)21kHL]YB!>MmrsL@KsI/@P6lcV),TJ-H+[!#UQ<hg`_Dfm^K&7-+e_%gj+Ip3>-7NUToW9%=A<CRK2dPH2>SdE`3!AI[NL^[OFZ(ER85!hA?HFu^?X9IR\.Ah9JUe@T`6\lc(gNn)p9E)j!oKkZBFZpT9,L(R89[_.BD.;ZD@bc%?sXr=<jEF-^><O+*aC;^^'U^\PPA_3%l<1,RBXrKYgVadJ\?e\"`o]n#8>C8/SE5)1M,G=<R.1BG<"[aRW&En(kj<L6W8$"$%pWi%l0-6F1uV/tdOS$oR%@8O1Ie9n$S'4`P%h]9VNE;0eUsc7`b"i(]UEeL9c:=89Nt:ZXpJmqPhg,p!qt[^RrXD2\Aop)AQ'q^-fNa2%'Q)!`p>B&B0X3bXgLO_QrV8qWeiD[j\PpOsHi'$2mnTS>qSF&C]dF]T-_,T_`jp*d9c*m!7"Mr@:+.M+OXKPSKUZr'@<cEGI$,Yu%3>8%7MA-!.),9.Ec#LVrp^&n?K0s[r2#1OTr-5h1i`KS9ZLSstAX(g&#rHefKP0mJ`]</IS8`gM(dOumTbBoC$14\44bB6sgY9fi%CC\f+-c1f)oFjF<$#f*^?1ge*3oOeDYdmM3?RP3E'+W\EfBg:E)\m?;F7$+sQlEg-2jNKm!I/"gh8K7I(9gLnF_BLA'8G?mPOF_*%pIP`T,7gAb%*t;sIuU]mLlJ%fa.I;r5IcrMKZg"71/HPl-QLIIc38W97SfDJmgR\fD_L%%WHnV?RBN[Sp'^NalZJaiqiu*s_98s3%3oTOViV?M;m>MR'_AYUL(OqO.5DdO\I-)+!o*IMTPXR`nB*Go5C6Hf1,rTsmL?><#%qbSAHi0+>I`b,EiN/YlgJ9fuT1&Kr55ckt%re-hlb2PWoqk%R(bd7I!)?X&l?rnP^lP8X/M6+N]r*U_30G.6N8hNf5)4h0F;jiEO*5nmo`'dj>.RGj)X-cF]9Va>5$5mn&NMkRO%7$_=,hD*LSQmmU1j?f`L,-UP^'9SGR`(VMP-SoJ$R=`RLB]U\`16l^Eah(fp0O'@K9JpB.g+uNYR]2Ip7.B?<MN_]<3AZp@AT?S6%Gj[m^HK[cdB-I^?&J'2Q(n(^Bc/jg0U.2?/7oOu7WK<:l^.,XZQY65r<n!tn6fr),#;m6URYja,^!7`eA_g]YH`1A\;#M</YO4GQ%'/_=@'Fn#EWiMTrDG>hq-3@KeRBIDe0YJM&M?K5cga]HX2YO*uRDLU_j,B(_/B;M;(D4'9[njrn-B`0udVZR<OE`:Y6E@Kt'GYXc%7(@E+au^Ga?KuT-j:\G]LtPKJmj?J-;[L-md,$.%HkYJQLV2MD#&l%.3"m$sM%;d-$>2\[1VL\].cOAeE@S3f&7U$e21?b7p^hqF%8464L,U\b='4K%_JE92_Ei+ROe'+=QCJG!l-UO@;6-lOsk>WMp+X9#[)uW0h<&JsJ0!3]AFh/Pl:K91CM2(:`C\9-t3n8)<l+>fK%@K5sX=-/uobYI54-aL,nC"nLBm7\f".A]+mgjLUB:?6cb1;=J_i*R3.*lNa[,/d9Vii/aD6i)'+128&KW[E:p,gL,'-&Slr&a*_r%C-@'YFlanUrKN;5W_6,eW1Qu<F%,Dmo(>BmH`Ek>PhUY#E_j*TV]+G+-1ImCpdA84U-Cil.=^QL:K5Y);+I7WW'@-0IoVX0&oN2!%GFtnNcdh$IP4DQ5q2%H:7)sbVGH[MSJ?89OhRe^WjD6PPMQ-*85"N#;<6%Gt(*m/:./9dAPA`)1A=3o*$GDD_K>ds;4&dBPTgB!U%]*XVgQ79R(Q'!/:BKN^2Efd;">YhckUdNSsU8KJH"3JO;4nZP[h4h?7Q+j>8bDU/*PQJSl6P=E9G-qqai='k5kXM'S]p8)7k,M['%M;co_^;s]rapsSKY46\8,K7sDC^'P2io5XYl;j7B@6=%(R5fmtgiP(,@\0eTn)b$CK"Xd:W=8VX<m(//(%,q<f,;+?.@\&KFl!Uq%F=L/A]Y'A?1p&D+=m=e*">Da#)l2bgc.)9hhH]S,eeGA3LsKn<bE3X("lrSe/UYs863^iT?(iOoRGeN3kL!P20Jp\-W;28S5q$gE%+Dbf^6Xth8KIhSf@K5h`@eau<_Jp3b40Ck;Tb5U$kQ;in8K<t)\oE3@98sDh'@:qnNnr9sDb,+SUB64uEYT#Q8DD=RL123")*4sd%1Q#.u>$U\E8dG"$7OfD32#-4044=h7=Wu.o?H@=G*UR06e8(+)LH[:eHBp<\$D-C6;3M']8X\,9*:$b82(@p]Q%2S$`?+,Oe"X0?%ES@LID,TUV.>W=ObtX)]-:N1.;S?4%hk]c1;'%\K,FhaQc:S_AV2LNMa%7H8B*FLF_TGIGjg7_Q;9V$Lpm`+S4pjh.AYu)aUJAs4%B>q!Z,1oJlm'EF0>'TpJTK=U_rN+fKV(-^f3]o&MSs1Ep$^R]Ec'&4m8X]4GR!MYN4Y=mL(N;SH]dMq"e$AL6H24cNrKC.P7nNTa%mX8+W5:NA"(Yd8ont3nuP7mmE'u5JXi'AnJ,p8Qf'g0PGArHs.@Y>&9_N\Y@6HAR<D4$JJ9M$?R<"X1DM$NXjKUuXFA+?5(R#kd)%6ConVfm$D79IW%MbT7GoO#p'lceiq5&TNS"Ldrfa,]alf$/N^V']i)]i`kk..sdHe*QsDKj[nhp+b5ub`(\9`St%SM@[]<.c%P<C%=6OV#ZoQ:YR8WOuLjC+q4qlYB.6Z%B7d*,r1aOGoEYhFUNi#38'>gOoXjWG_ks<cT+`j*85#'+l-59?VWi7?jeV(Br'7-].%G$^o%CJ(Ta+l@T$FPVedI-7'kbNrOKC9S"qfT^&c6:gf\/\@49amXXtV5\!K,ZM*os"c:9$"r"Gg$R&bkNLTr-qe31gNj>$^aJln4/\+q%dq3ef,FCi[D7=u:P:'.M:AFIQUjFn4^'B;JK]he;5/8%Si0.Gc8jYMr.XWui:72V?%#GW=`@9^(K9pSphY:K(oW8oq,jRVpm>g+%%RHHkKWIWWSo^YJ2q(o3`rUL^"j3j#0+Dp*tr.N.46MNR7"eF(s5"J/84JYoedL!&?K`#r3Ont_KSIhrQ6Ho;eDk3!&cF@7pPd(m2%fdQshPGe,rAU@q"omI?Wg_]hBhnFM*ZTB>jSW`\AaF,EM^_<a+1#DATf'^J&6E?IG)7-U5coY+q4Ze3dCeks]]^CucH,f&1-%;Es%7)./@:[+b>[+#c[l7'jJK+.Y!R/I>pp60t&ajE8LnpXJc:Pch7"QBr\nHfs+-^<^+C@bO+o-mE1P>-JF\3;3NT+JLs8DY^nn5%(!%.BWN4IXXU^59mM,Okr=5nL"J9';GF3+ode8InK1u,,6=#d5<bUUqg8pi7gp$@Fm&t-l^AF&=uK#'0V&Km_V>`@A;cN.e`@+H0!sU%@%sa1D6@F!/e_Z-`T*sk]I?OUMmK4_e5hFocD;t%!Yu</MjY:!6o*dp\d\\1([2DmEi/_R8VXU!L;$TYIHO=h6p`",m?3=Ca_+3o%^F#=gWN&YB=.Uln:G%p$jNC47jrkgf(Raf$p;_f4@nkuk7YH:srh!rb9XJl4$9M04Sr$q&7+Z(Os"i%/H>!UZ'o*jQ6kfNn:NVVg%E_$kgUoCfN7"]3Je2.h\HHJE7V4e)bWCoMA=-]\J1Ah]cnu]YVD?\,Wr\%GX;aIObnCC"#CEhdrQ2>mX"FI/'c*YG:&nDZLZC.<;%6hY=?NqS<cg-fcEWQ6t4DS,PsOp\lL)K6@l\;@*<<-dn#U$g[i7*A?2FVE$3='<2HG2>VsDkb0o=7#O\;f0:]$D>1i>2VeIE$@G)%;(.t#(f']5P6DGNnko/lUDU59-a$*DMnGi%?h>18)Hld44mfh?Xa`a*L3uj`eF.ZZN40j$H9b8WbD?em9J(<0WVP'"S;;5]76Dr,%T/Ie#5n\:>*.#_g0!="O`(HG-s-_0s6k=F;RQ=GMI>Y6mQ!.gPXqTXCV`=%$L9-j-;Sqg)ZbNM29*adl=+T,3gaeD#E'HJWE^*lJ%]l\BElFSj;hMI]i9_8"]%K,Tl%H3f+n8I4PfMdlVU09[X)rDs&h`k%4*e]i)8iU-'RajqB-0L'?o2HMebd>1RA/HULkV$D&96Y\7%:]6N_IVN0'87Lm[VX+XX>?WE/ZKu0n,%$!%c86pJ?&%*>FSeL`><hfqm!bmZ:FJ#re/D6eN[[iGN6pTVq_=oPRBVK@W(*YK,elf\%ZIN$P[Inem:"!*\PVjj3?AMU1Kr3s'k;"3/\Waqd5MmbPYDb3Y>J2cAQoj=4V2P'/c=lhK!aa)0'7QHYiR*Ku_)kL)Vt(kf1&0L_%d)R\%mk<T79KE9<:c.a&iop)ET5c$rl$FdUlJ,!U#,]H09kg1iDgI%(E-?A"&5M%BnjZ;1Ts'p5>eSQo9h;TS+kM%%E)!:BArL%p%iia^kfTS^>68ga",b%\u9dn:64D7[)[#7sZQ&?m_)OY5F8D:@F!$dgL9T0e)2q!M28donUaAqikRDj)TRHqe4rG6VOW)J9I%17F&%)7eRV")gMj2s&MXnF$5n45Z:An%n]V;?BUL"/#4;:Cb5XY/5MnRFUe%ijXYYlTgqa;'b"s'u.Gq?nEcOIheu,4oRO%NYh0EN#qQ,%=P!']Z(qSnSA&uU?o>N;@'2'CbM7aA1($4"6(cAn4\Q<_%_[sBmRu?HH0lIe3A5&;1G2J\q)RC]*8_sHS</M$-q<B!Uq]B%3Y7cU%#Z.QO`lW5GX6e65cE$i4X`_MG3oPOYEl:__A1*>B1M5>IKC+<QG05M#j34&Jlcp>l-VV2e52R15?[o%(D)\^PBTgf/V)N9ugQ#%G%>f9Qr*cE)EXd[Na1?pjU[aj!OeHiJ4-#4U.\#MI98[g/`b%[*a34*uYLkZ!31Xin]ln.!$MLTV3@U[qu&jJ]_/6F.8f]"jH8pUlI%Jb3g7+JpIq8F@Jq!1ASeKicj@GTCi_q9Zgo11#C=(dT5rD@eT&a05%lna5]Ij8f1'+U>LE+K**t6LDkH^b.V=;`i&GJbN6-aXb':%7-uc/4aW#pZt"q%GE4ZI&1>s8Pkq;9RKu"T\p.bjFFeVR@RDOu_jo;t<o[4X+2K9q2M>Q+<jAFH=XDoP5kpQ2ABCuj*3T!$Va<r0%$(%7ld,&5D3KDNm;9\]-XEoE*EZ^Q@WJn:@j;!O$EZ00_flC"2#fJ&mG-D<l5NLtt%dnXc)N^\P6A@RMRe5nks$#`NF:M-=&])BJ%9%qmM(uFG4</_d`7TS-rRa-:)e4j)!EJWhohl]E:%f.13BH0`]+#GX,h"nbV!`KEk?AW^YDBHq47tZ;AK#t8R+L1^W#N6&R\TNZ[%8lW.+i+s)9NP<Usd_i+S*r3:S(\$N"2D[W-TA#/$Dbu/Y_8k2q;;Oek1X+*+iU,2,ThB@jLWF"SIg)6MGD#7c]3aTBEY!+hdb;cG%\]+p#i97OH@<GU+S.t4lF$L$R"$breit/JW,nJ?]nT]qPIoD/mFIsjA*itGI,a&s'60]),2Ch?Y`'%F>&'BPf'Ki2kWb%oX22SR4%G<<RIV"`Z%6Yj=$g=96eQ35gP"k[jGF:RXQ8N!jYJTVEtp4JI$FTfs(XV<<(^U2R9gEY?`&HGfZA7+<sV(13\?o3\opS+/^ZO+M&%>K#$tKah623l"Y$*9N5o$Ym3<C6+'dQ6?j;oUP3#R`7n(Lk\6_ejT:@Juh=hO?*s?"N(#B='8>WJpb,8?UPo$Y<a*a73-Vn^54nt%=[>o?4UUp`prLXCHCc]#6\Pd]\PUgBSGpeVeD";Jf!<daNY:ml9ZH.Kf?J/pbfdRX6(X_q5E>5f_D!9#/0\Lq#RP<2Ki_?)o>%U+%`1r!s:8XY9/1ll(rS5gn?uZP2Q5#E[Gp3nei+b'iiSBf/\U9qa+6S%IMuWLCroT:Ant5sPj'VfUTDn>l5Q9E(s7(dAngb$g[^uFf%QiH]ms2uManIPZhjY),TS%ndopt,!7gHYY[mr7Z$IJFu1/,uO=^ULt+"5!#!rV]stns=k!jmW2pEtU*4rp,%]-1IWp.[(,1$K#\P%Ko6$1(:JH=Uf*^]GsjP+D4YRu`K;Z9CC1HlYtT\n*0*.?$WOIP@i:'[.69R/6-HM$5p4kIZY&>dhJK]i`oW#\%*tU4Q#`uQ@L7H)%ZTi2.X6r,$C#.JoHe7]5b>FbJ3UJ;TOZ(Aqg+4D1_2*b_'t#U/cm&nj(FJM<TpK_Q%L%6hjp/tR@4Wlr-:DoGNmH^-O4dta9(28[%,</p$h3AqdcpJ&r#W&(8A&g0:)"QTGQ3F8Fb0i;6V7FW8K5&*o4!!-6XX(JMnVc/S10*IU![t53M.@c6lo"rQ`p1#TDap9UI"-.c%TI&r["Prd`@NL1j6qQD5o-o2`)$cLKAsg1]-'X"MO0o/eMKVi<cC-bR=9ro3P66j:p\&D*dl*=e0_Ek`6nl?NE8$J[c\BLVAtjp0%f`a]!rsgO\$l7g)9M7-Z++>\6"pIh\De7A&*8-,/Q$Tet1N-50CKcPT5gDgj:N(IDbOhtrDi[X]*Cq$%r@sh1[nE4opYo4\9T!aK%(KCh"J#OFRlf4@?3!\GU>k-#l_;b0M1DZ)HSm>J?$EuBp7G]?(W=k=T84XVu][`,H<>lN3E\rc#J-:Ul]>dd7m6ZF`DWNtd/%:Ps%4&*gC7gin^?q5@%ll`bK<#$C+$Vat<C@T_-SoP;t%fJQ1#fHV22(9HZS?A&)p\lBi$l2e&=b0NJ]0KTpTFj/M<.+AtG\N=.MbqNM%B\MIHZ^Hde%6R-t=dGG$_;LN<I5nSf#`]LLo5XG%)'d1*Z/p4`1E`]b-@M\Q1?JnOXPilJ$q<K3>G=0Jg_r&g_#P48V'<+QKSg_l%MAX!3iXr2[j=+m5Vn3T)+pjJH,V`]!HJ9).".b.0_8[P.Pa@0t*F2Jf0$@J_?hB7K+5^k#P@Ht8A4LfJdJf3.Z_aCWc'-Yij3(5t%#IChs'A>=iB_MmD.QD(C5D]cWB;bt8iAZ_emo&3?O#ZDs!0%6Mh9?tWJ+s#Rq*CX``+s18rE\Sood@m.0Gg(KAp7f/#+N:L/D+2]%-m.LF#Mb=cXfsk^JrH#Q%Aj,H%_[Q@oG2+,&lLMNJmjKe(lghW]TB]BaW,:<V\M!O/?VfL9G'iX4fKd2Mr?KX+mW7<\]V8?lr8M"%$mXHo)D=VT,n+9V2,nEl+&$)6Z&B$:<QU.heR0gU"(oDb>+ATUO6^a(q%j[/,uNRYX9Y",<<^li%M^J^/RDcE:'/p8:MN&u`[Vcb%i$`=)c4nf_d'G0nKCash@`b\ebTEDR6WTq9P<HI^T5>04)%9)d<P"2,QIYC'@a;O+gR82LS:e]t9F+gr4,`!,\@'I=B4=c>L>i5B%O5*33>.0d@R.W3P\3JpI&N`o^M&(Bk^2s+CkCt*(-hL/*bnU_I(/@.gR[0PI:$X#/k5E(B$D=\[.FTIGWq98NBWn-a$l@_>ku0Xt%@0*k"6':b+djpRmOVbDSI5Q[Ans)nn<'0ooRXEDF5KNQ03EW_E!WfWb(0)903>YL$QA3)bh3)LH)V8kDR]:!R?2s%Ue$Sp=0PHmj%S,]WK/2DpnG#;14Y\!9-6<1;VAKS,Wq6mom5OG#qh6IgL`,\OQ;^,D2mE[CUObu$+f#9p+d!AWbs!-%Lgl`EYa?JFf?Y92eT?c5s%9kOiS0RT.MON>CSFKU'Q-@<SC>b)g=<!nAr)lcA]B5Sa!lsE-&*DZNcf#,B2/bJXNh#DmO-aSORs$Cjg%C6`&KN[/or4X8MjB&?6%q=U:W+%6!+m+WW+g(-K1U'*e.mFOn_h[^BFmohtDh;Z>K!h8KW`.5:?3u?7YM1XQue`iKQEU<pc]TQXYUpj3BJBeP.M@9"E.4YHT%o#4TMrN*BLXf4>l3\HI</76nK+I#=lVq5i$&YB+M$a2h*$o+X-l=(2L^iPb-nb\gb3nfDU>3[$hg&NOsTUXBeH.<\l+Ii.>$*NQp%->%Hc,/p[C%.cXCRu`.:h0N(k0WMpBGmT09k"#JmQ6gIWd*E<CFEdolYRkHI0#1m&*)?Xe,\cP3Yjmcf'%Zh#.pHd&qI*74prfo>%!A2?5iU1G.X31@S'=>R.mURD+f%NAuo!,GaS6Z82jj55#V68W#kWJH_?i\=f"_,m,Y>Gl9@+:[J3\-l\Zo0*\TpYWkB7N-f<_1Gc%Q$3&=W2NLmoO]La/`fDNc2/70TE<X%bN,UW;73o]6/I!T+@b;pKqQ/njetg/QpRCdfltqcC)R:TW#W^Wrk5lI[^:!DLTV@V:`1=J%#usWYg5kO.j4r(7ZM)u_IFiooB^[DPU?,NZ6fj+*D%V+kE,9a^@^4=cBr?Cp@BYGl^gWopJ*L<m?+eV=`&A<;=)0QP''0\I&E"WG%(H!m>K+1r\C/NNHHX0?*Sp("#o^0da:ArFtLkDo6O'^,ZG'>'98Kb&`@5k_RiD?e4ABq3)N[GnfferZ</W)7#r(IB[L'DR\ZZ&4=%"e`C'G/Q)D-5+@q@QDK[Q`Gi-Td@pf/^/s7B@t2ajsphLkqG\K!8Dp0ctr<?!^*j(;?b9E<r:i)^A(He$ZIOsCPhBB_::h^:7S7s%(SZQ`X=NP6^69FF!c_``<!1!05$=%t^kIu,Ef8bPTX=R-bBqihfKBHOUo*OFLuPhp.&.cfmb[ubKu-I),BhOV*3R-%Z0<f?6HKg$%64KfT6b?k7TGAGCE^Kpa;_`&t>E/U'"mf7iK'bjX=KEt)2@,k;=s@409Kf["dEQ2XV]I0ZML)q`-OC:9Eg_%X#uCrEZO;Y:aNc]8%9hiGO"@J?CY+^c^=m8@dPGnepm*$T>7COP>Gs[G,`6O_VkX3OVOpgu(krP(.EYQ)n)n?W>SCnu0%.I`f;GpL!+#_tX8]O$fq_ku%%1`Db/,qpgW(V_WUHUI+t>=6S6Wu;Uf-]"R\*6"Y*\6*\Ml?ETu;HOPbR)%dWp(g\m85D46p\;/%LErA8N3n"6h'sujN]:ad5:4Sb%Ggoe_Q)n1l8.jt^/s);!!jhSEZV1F0LAoaaTbkfqb.D3K(gu?oFKR$R_S@e4WSMqAf`=]+&<<F65R!t)i?SP+Q,QI89'%9=50826%U<ob&7kruH'(LXMfKK@IC5*qH>MX#V?"D-7(NBgR%-3=LG'Rk#mNKm+OuTI>"e^$iS>jOUcOrFk2UcZe)5/B$P:8_'1`'BG*=rj!%ee'b.bL5WU.2a"?.@')`ki,$(85s\;C:*bJFV87`\??lF2jZ]NdEar[_iM;@*@c+DlNmCmhoAt\J5P0%-"jZT])Thq.3_.l(e)Gs%+XN;]:^aAW4(p_`=-_@UYa3RY\m#tDoGL8N7mY4)WX4C9\/_A!(K6&(+,=Tu@=+qLr_ejDG=hs,N#LE/-l3[q+?c!_*7PhU_upPb%1<oWND:dl$bd9u.$*]i/64#YlKU.j.OVT_cX??"sFc$V?3c2P[8clOSk1#b]>$,r!!G6*9&LJG)H)]):a@?ZSq-1nehd]YqU(6j9%*P5X5g1#dRArue`>Q$sHf,rH",b'eZM[iYj&SbMiOb3bWhE[I%5.n\S8D9<K!;mFA$%/:+lXV7`^_up<3H7Y-bKFU=X->f<N.A8j%csS(kdo'aKLWr:09n:2V/ggI"Wi;shFAWJ:*2ZrlUm8q$);H354TY\F]1HCDHP<FP3nJ4t.Z#hr(D-9;&f^RRAkt^iNXSDi0[U+I%8&tic<Ks21`(`s>NKIk1%"S#t!4&P-Fo'<*Z]E19Si.!5mqcBX8@ja/PC0_'YpaBc*OEf%1Gq3Y1-smtV-pNp2OiUGeHHNY,V<Ed%nH10c\\n=WJ>C-S*"G3mTLH/1f;)="5u%H%pGEa7WQ8<YHqZobX]b^>]tDCaCKkK"EV<%#08Rg$/;l#s#h?(=kM\f_M7Cd*pY[I#%+^!?JhMdIfh(!Uj"oDDo*=#bfR;H!M$ehmR5rIJ5>.)>;Lmjf+OL@_:\?h$DR*R!?:9>-5@iTnu@"FD,:OC<65c^-S.$dt0QDi$6%mM#fR<[4?m:"HQ@S]C/je!/L7l>OKNa[_dFDj=7"2bMMf2q#7\SE?rn,NU\l%tl$E[.;F6g=^$$SaU$Rdi;)**/a5A(a?L'MN"bB%A=X1>UA!N7'Nt8tSXAF/[11iH<4DA!IGF54>/VXpn9!*q90%%%:(6nW;@rcn8sE(o-Be-Z"N*SRdYnAKGX\&_:jn7d"YnR0=e#pF%`kO&c"m;RNR"o'i_*@bL#jiYd:&)inkgj,nc)sCOYN:9[_MMpr83lB2@12<_BBf!i1cHRJV[D6MVuDK>O"kuU2K7@93juHShbRHq%]!nib\;Mu,4JZ_G4Z(g#l^N*5"p9qs)h;2d9/3RY3V$iEf.D[#C'\1CNN<UP(n#Vi;bDnm:TJ^pRsZ9=)c1,dfk3m]N-[A'@AM=%%3rtdOdKS*Q[^])KG<i%T/4s+C7_O['EmG@G8f-X[4`ZkHS-8(J^$@X7iqujTgk*JT\L)j!7;bGtgPUr2;u`e9Q!6\=\NZg-X_na$%N]oPsL\)AK/eK@71b>To"K_hnY_nZEVen_XKMTQ(816;Nj.o*tqc;7F!G\0g3LMK\KS$0;<"*q.i96rR(>i_=GRdnX07Qg26/4O%%`O"%Y^mQb=^Cpr#cpk2?m];_V-Us865WYg@B%9[B<BF\h[,/9LGb)^6P^KJ`[f@\Y6YKIOTd@g&YR_5t-$1S9-.nrZQd^tT^f?57%r2)H\D,r"s=A>$oKa&iE:+8eu4nX^>#[(<;HI^q;73_G1>!Rj3kU\m/pHk22E#%'4nTE:I9]k=]9fi/R_@#TA8qahIKa:gHFEc5s%d,%)cGO\ZYnbsBYD?42L&7UgSNPXCf(Q>CEG;;$9CCEfBZ/DV%*mim?\.AEXE_"3.Y*4+%gpZ)D8e`DO8iMoWQm\'03X:D`r`laK%Pq-CEilU:6RgVjtr>2i^l0Yn[[!1%g"]bmU$i@&T-Ku[MICY1#Io-Q_k(qQpf0ar2'TtI5/9^P"@:9stfm/+t#K34Le*4GHe"ZjO%Ac4jZ&m5_1An)`jdo(`[+f;^Ip'm(inCY=/,n]T7Z$!\qWCs%q`2tr0?:K:1L_T?HnhRFkA8tPLBlei^ClW<bM1,*'f<\u1MC7ci%2-T()55l-Q$)HfVi@S[gX*tj5''>^ZU:l;1Gg;GV?UHatB.6l0A+i3O/il6)4toGTJVr@k3L8SIcWS(EjUa%"J"W;^*pGh@/[GsD%,Wb:_'Fn';d:fN$8K0X[AQI)NqF:]G8-b3VC5__h?(-?FK>a"4Inj&j6oe%n6C7p!F-?:uYr_&ek%5lu34brf)aN_SLf4a[98pDe%.E>G!cm!hslIMWk6qq1qM!WAPC!HMH*;OoA55cYV^nskm"pup&mtrYM(]_[A4bQnYL+`j=[a!sPR\;TL;3S@+!Ns/^)TWKN?*0>@%V`@.lS\3*,g%^?e\a][A"@+J>6;":fNP$[8^t3N^&3Np+l9!10l!T=hQ.dk!;*cufc%mtn'=>65[?6\"dZC7X9rJ_c^4:gbQHgBD%PA4jo[OVhk9=Krq)fduO3OR^J0sR1=YY/1?1-@"DdaZ8B+GG]B3ID-MAi,+m@qd";/Gj0"\)O&*<O69#'c1fB]'S$?-k7V4M4d-o%B=!30IE_VN,J,$s+_cmhoXcB1=;XAD[:k[XbG_#^/:]$QDQ,"K#[a^])pB\gAM*b`=olc$M*N\=@]SsjF#W3_fFfjjEkb/jOA9$%%?(25/l;A-F8j/u*cI0t"5)`%;oV,!FRqHI\%7l@1pQV"VaE0%]=.q,7R=+%s5%W^[`PES#$P;<U"!Y"'+U:Y`>(=DRg:6l#>_9D4%O$`si\k<*\@.DE3bAR(=6S_pCpoYEgY6mnt^%Z3Fq7K4H&g93]l<b(<ah9d_n70G]i`=p2IM\uq;CK*m1SI59e)B^>A(/,P/X)Dc%q\V[Pmp-!BBmif]8B_8qTp!/aL@,R4_%r05;8eIECYoGEf)mG)g(H;_$&3RX)+pK;'0hk:db;0gKkq&eK=5Ti0XI]S=AZ=:SbF%R%A>C>PLW&GGGb)r6UFB5nZ4dd<_1uVkeKGh<LeUd@(`7?DU=*2uL"(D^pFO/A!@6+uOMk]j[UE[.Xt%B9ZN\]jO(WN;+O.D;+e`%j%8Iggb*\m@T*dA!r(#6rV*kn=j`H;JVQEF>MRP[Gr:_U?1Lp-&ifFOI@9m-I!^YAn]b.!aMK,D)/*oNr8H<PFRbAd4g/T'!a8bAqI%U(#GBh(3deKF0-FPBn%<_quh;'bIEL!Xo3k!<+$be]P%^>:-CK$u8L[\pRaZTaZ,=ZkfPp[bP^5O+#fO*%[Gj,/o$J;lWYeOeTSJ%>g"n>RX?\*Y@=)%pD49"bABReOh2bZBm5ji5I1Qbb-(Md*3[3Ta/@)J"uUt+0c26ak[6(0m\*">#rWZZ<mX6V)s6'R($%0p[WGs#%h'2'PFb9rK=n:7<5N8V',1-j7U>57Q3sI"9dp[;30fksG7\p55!-)^qN)rXu^r>:K(,Nt6+Ts.6(eKDsPr^=*QM`4].>BWhN`>ME%XO_.O=&I]MRl$[.#b/u$]cnd\S&Q(BIA'srM']N9HF^*7=$-?WjELl>0BT-8=@$qs5W8-Rf58.FEq/NW.P7*IO4:g+V<oTOB7iTa%m@j\(DV]r>8e)QXYkH4^V8c'/FUu'^ePDIuqm04N`*JgG[*lbG,c%,M25S&QB9sX$UU\T!]:0qoHjE&\9C>D5o*O-O=[OF><c<>8%A0O=5GIL1]m4,NpS@h(<%-(kkpM]RED&;FT(H#cRM$k!cYC'%aE+HuKPM-oUD/q`%j&>HWH9Q2gq@E9G!D7@cSU;cG*`s`rEQ\Fj%;9n0h';5f,#bi")ce5H`>\?[nj4,Do+`t@gT_ZLd\++P3Jh,MFo4rF#2Td2OJCq7ja>tdN:`0_)2EcHb@k@P6,F/D`N0$m:=S\6O%*k%.\[jq)`FXBCG5";#$Rh+uFGcUH[\m8#JD3fWBjr2DMH]U],/)%sZ9qEhEHkRZN-u'5`_ZiYd+:,BUC,Net>IbV0MeGpD?6KA*%$RCS:03[g'kL7ULZViBuIkC9;9R3TZDs>H@OabBSD";1c<L(VMi"o(X]rSb`Z<+""-.2!FAk5g=#)DOpD[dRhBd</lNpr`!a+[%o%$&CDkdE5&256-s3!nhF.;g<oO@^5G-_BJ``!@^'^=&\Yqn(\rG;CJ+_/t9H'3oGh`*)"pJ@T+M-n/4a$JnA44eH&:R26.Wh[iWt?%,aUa4!VeOSW!FN-)'2RRdM\^TbV>&3GuETYB:;rg8u?UaUgnkliNoq2YXI'R6M;$4V>/N+6.(pn'e[L=h;D@KU:"C$@Ofc,V96!#%%<)pW.RCQoV.==_$c:Ws9u.\nJl,W#lb'u*Kq$5,4KGVs8>Ck_SY&X;Z%=5phL,fCVG`5k.=nuW3<Gd>4IG'#&njdfiQY]!QgiEe%kf$%&r9`7t5H-$U?cIhU,q\.2Tq9o_=`YK[ck0QmF/)=jJos(Q_#-&5Of;k2nlJ4*R@p-P=FE&T=]Z/[UWLslStpF,ron8O4Oiq6%Pb+CTH_lZaAjBfP_?oJ<K*f:A3I-(-P'b'KS<,:XO2Q1!UCIUlTU5gs`h!Vin%]-Ip>!ErX_TW6T8.HK9JsPUU*")`E\O%KQTUH#%<:8e1YPkq;Rhhp\HN*c52(_Em<]+,bH4GD7P&cdMAe:c08">1$10$<N9o\A\T?cb_:t-t\E'I-'8k.pE7lg=]o=D9m'anAi"(P1'%;P4'9!oC8W<ofR2>b`W%2c\IZ]E+7,)'Fp3!b]*?:(l=VC^N;TN%8[@%K#b/rq'o_TlPWis3(ZLF0@cQqamcsXZFK6d('<)8OgiQ%kM+IU7Fjh7&HfmV3uruJ#)?IT\V,AsoWmtPKo.eOb>tE4Yi%'8M$H4I'd0WZ*1uCoLb(5!)D8df^:_2:YC6((#L\b7XKOg3EiZ8g%"POg>osBgE$BpCU4f9S+LdCkNg9o3'km^4>R(6Q;NgB@.fbAbMg4HB2B$j)>?ArkRaINc3,"&k)&i,cW8H7FK6U&SJ1_Kkf0>G/.%;;F6d2DZ"&?A>JZZr-`1^O@<r!ZO%7:>_FddcZf$Kc<NGrk'D+<@dP$`cPT?gGeV:/DNOqWGkWnLB\O*FtDn5Em=h?0d2+D,B0<H%s$HlU(k,g$Z7\=\&Q'&`)eha9SDVs:3h$2p^V$DM7hL2%MOs`$Hd"/+8"Xs9fW=7X@F4jU:<sf*ma$h>,+7P_Uq^S;CcN^"fQ7,Q%BLX'_LZW;2r\F@F4Glcm=L7Mq'hA9%Cn1,dTt5iH2KR3(</>oAjq":GUf68fm[-EMn%UOkkkn</Ye"rU(RfI!.M#Ogs"aJrGcs!l%kCm9Y[>itajkBB)+AoDHoKT"pW-*\\k$/J&ZfCFJo?Ra^$*LLR8>@c&bmfmU"+L="@;VtW/FnAj1Af='IUuK1`@1b3#1.juiPB-3%..PF?@Gfs=]=Y#%Bp[$5QT#0u.U&AQ/j,YbFCDE.R6g\mjQHM(RiDj*FYfLEKqQ`a(Zf@<<#`PZOMdc.h'B<u&3I!ihoK'#?RA#2%GuL?IC,rE6r9#Yus.Qm@OHA0k3\6ciSY/*R!"m:E4TDZsL?3UaeuJq[>%B>/8d=Gqi\@"9lN.l+6;L=I&q+_Z[.@)pB%R4kQ<s3j%)%eLdJ"Y0m_KXNr3`kA=AZ\3(GN34;R?G4o!g'BLQi[S^P-22I;97f7J$f[0$,-A,44_0\'a>#''e5S1E8!4/S8KY^Aq<iG[+OH3%<E7m01<cKES8<@Pbt'ltF]rR<_n?_*IO)eV4N6J.V!\gkAWB=</R!_+2AtJH(hp(J!F7H9VVg9=&S-V/pKdU#_RL\:AJ,DL@b9,9%6ic3,%B).UV>r%S-'>*ihUgT"_=om)+_Ui8pPrPUlN!'.a4))p"(8$X&0fH38H)-Y;HdMU0]NRO8.tRu)]_oZiodQ@o,n,(>hX^u%?fK7"S""*"nGmWtSH1s1FJ530n=?3T:'dTV'@==cf0h92RbrXY_TR]T=s%[ekEj+6Keb_,*##Ag\6U,RP!2BS,1-COAupB\3:34?%`]7)`bb3>?fhdNJXung:/`K'_fd_ZVEo5_M4k(6S`N0ah,,rggnO9*GLaP6@T/4QJmSK?7M^GkcQp-9hBT[a(C@Fi8a3ukGPNB^`%Jkne#i&eRM>V:2lbE.N(n?hW<E*,aA8B1IekEA:DgubZ=#*8:S.RQ>>VeREH!9]B*qVYgO_n9bm/&AT]3BVM'Q-7.XXPq!gG?0$3%3ClJ]+AL?"SBU$f\)7*jDs>GPrp:g,n@S/(s8+JLnAjGbrBL;\&-)4^pa_pS:QmEIBKh4<(N(`%s53algK/]'kd%6[;WR?XKj$Q-%!R&[46Uk9('*r>>==jL?qqK`/".QeGE1FjDVQ>un:XdXX.-Hnk$E`35]ZFC&Ch9sS/AXR:_8#g;+,iFSa,0DGcDaK]ol!%(`rG0[%cdOi!gcArOQ$BHDm1<T$@t11bK;F2S3H6/f;uX>;>6?21$jb/gXAKsW'%<DBT"V1frrdCRg$Nf7niGKsjS7ZIL8fJEAdXf63We.F%.d?PDCrJ#%d*k7q&Pp%E#MEaB`((;dZpe+UOo6]Yqn2:^)V']j19XNeh5o^r8GBkCUU_N[RhH(>-oJY?_iRl\J6+]hB=[MTa8Q^N%LK;$'=VOMd5^6r#E$.@rVTu3s&nW^15*%h'LltD"pMbZnFq#bsi<4;%oE@g_nCXt#kSDBXEq0YTI]Dj#HLY'hO3;ei=cYerMfs4:%fjFdF)\%Llr\<%9k8E58BkZ)"ADC:KbCV[)R00TX*-T*fn@t./*[eRZ[AZ4QT0"Y8@lP20+\tp$&lQ]BV*jG*N)SSRjP+gM*+#Y:%^_4/qEc,0j95F.3Q'/r8@L@9s,b$*E)=:O-96#:U#W8/)E,,^E,)9d)?k%FfeBH]q4;?i;"KKU9n@I,Wi)Pf=,grm4>udQOKsr2`%dlJW7N>N`fQIpX$96uUm#Z#M/gX]ZZn(Xq[@9fW^s7uR?Cs#kS$P/1I3l7(k5nqI9SGeccd&OVn6<#P!_C)_l_UiWQ,T]6.!nAY+%,-GJr&Obpm4-;(n=@ZbP+YsbGe1*#QOuKq,dJ`7>Ymq>6Kj#&JAU+/`gXXhrAe(H$G6M3bc+Y4Co%/AL!PP"_")hE*!+]CICB7ja%f;#GMpca;;Bgm<Fn`rJ##C!"5S=;5=_3d)@#;IA7"i>9VBd2o9K)W:7.o!iXeZnT'=3`LLjOH#$il]MCS`K;::=F<[4*:6#338Qt%AcPu\Z#'/1=HPkuN]WVrHiJCR3d5uU_:m5mN)t=t]k<<#FfdAsb7R1b.u^Cn.%9r?2<1$kEk,mhd[6o\D;En##6i8$UttE6BC?(D%9Q96$+FXbIq0jiGq1-c@B_MV5j.h=l.HZPM*V4njF"S6g/&0EEj(/@+8m<CHV&#ZRKeCbTC=eDH'-',_$&'V5k&n9f[;bSNa&6j-%+fcpV_c"*ISGJOp>AE+u#Ck10d_ZkjrUXg$*ML3q%UcBFpbA%r`_)/%DJ`Zt9C9m7S@/l"/\YWGb'#A2nCb8R+8<1m_VnL][1$,J%Ycam4V&c#u>%oAOh8^KtkWJPK/$43ZAKOrV][)c6L0d11C%n"`.kU\1<E#c%=#"YN$,+gu:g\"a*E4c8=DIA)%);H]'MiP)F5^;:%nRe[21+p=hs6UY(g>OikQ$2`c0B9EW4r3edIl7eE).+/:NX]bRZEm(Cn-O?A'A$`k?p&((lu88oq;oRJE;1<(moU2a#D[5BroW]8%A48aaoD4mD,<5T0IHPadK:jlk_E:k:]"A"Yf6q'30h)S/,O.F#UbDeJK*<Xn3T4)'E-D')9K,_NEa@ek\TtG+.2j=KQPV1X0[<1e%Wlt'V#00e/>YI*^LXnRkI.73Rf%je&Aell39gq9REG"8LPmhXh]eSl!F=+'AXqj-O.7-^HRLP%<Rs0J,3lG2j2\1aff@W#2Kel'-%Hu/XBKB#ThHMJH\W!RTj?$8_mj*8,(*>`mYHW6%Ad'7s&p3-K_$V>G)!O'dVALr`G568BIEP9a.]BkIG';sdElBm7ks#QnJk9>sr%<YPrYKIR]ehTg+k?jdK.k;JgHD5gLR6N*1/_2TDTjUfMM@0&"fdNJUII>*bXMX,j*,MWKWRT$gl6.@^K8.VpJq-rGo*"EWI,YeD_%DKtIIl1[^dHbW=t,/^UH6ZIM=#CWTrg?J)#:,).krB$0<e(;X##hqa3GC_$cjV-hn/BeF[b=/Nu@Ihm]qc6:,!b@HVT_$2*63>(t%@3hGa!n+3kcC&]Y\!h007)fNVfd_4Yc.OBG9?O[ug53!<XY[)+?7,g`+=Vd3H[GrOOB]F^[4.aDrcSb3"7:7P.SSNRf=,X0UqF)A%7Sc*`D)[J9\+!mLILJ\)lM()Gbt=tm?U4H#$#SJA=IaOQ+G<9\"Gg%e+1sHO1d"T!NWeI/S1d!l7`GZUna2X((<!?%s7'Y0H2T6\%m'lKoa$6=2j7lBF-Z6E`NHbhl0'(3oCFhR(-gT%07;+u_+4/r`2k[5!>Ul-mi-R_\lNk<oc[=_6a>i;NCP__X&n#s!aCp"7%<"bU%=S2(T%=Jpqh`?]3Ye?8?#Y99P-*jTP0s[^.OcjTfSQ\rYV\W+&G?*,cm!\Pm*jD]P8%lM!A.=#QN]cZV8g*+t3NDLDfZH.7%7#_5%@R)3\jTDr=#a-D>XlP7XaK<DdaEDMg,%EpdQrmpg:t#!eE^nPtkLo/<Y<q4@dGh&>ICrh3I&))s^+Q:GE&OBZ$176_;O?oIH5mta%jIOi'jJMuIkrg0PfNUMM?pC0R^+cfI&C7)J$$]_jNKG%]"*0hG^2IKk**]lDQe4DlO8(#5!_oQi8":mpr?VZPP#'_(C,j4Z@%CfG%*S&&Y1aV0i25H'H]c,KS$nB3!/W1a$#\HeG`=qhk>#:?[\e\!d(9<Zj<4tZCDUtoj-7KfF,3:a+SJ"`^gu$p"@\e6trqlXN!NqN1%pna:PIJsFKSr\u"r^.nHO<bP9Oabb)_.5cJ_=56Q0>:-C2R&;t^Ulis[8SaKG+HcKoRpK]b7XE]Rif4%ZPl!BHqlq!<#POr6CI^D%J&3j@pY0i@A-uCf+u6qVg";q=Uri%#FC$/\h\Q1Dnd?->m/SJI=:`0T3US[cQ)2p0+6o2f&.>@4s+7rloFDtnMV]Dl<GjX6TIdRl%Kquo#8&)PIn.qtF)7g0u#CSC0QNj6i&+=]?]#2)(>`Q1?*%D`U="_V48:f*k;MHo_GCtm"LNq,@Ge8TtG'3^b.CUrn=M:lgaBG**%foffCVZDWmhcFaJI5nR'^'&)&)L!Ea%)<<T4)F@3n$e;UlBYkRD^L5ZY)?8\CSSppaf4)THA$WI<I8TTM&N+&guo",2Z>=*)u]GF%IA=QK3c+H?gKbbHs+Y:k^ZO7SdJ#O:YB.n7aNXP.^t@hZ&d-8S&-4-N<q\'jmEN-`m88'j/mKHlj79Y!6QaM0?r4`#g@gn03&,fq%JKRG<c6$2q=HPFDE2Eihempj;oW3/+g<.Rp6<B%FhaYf#8tl2A>1V4r0>hq24PSoK"2?0*]<4(#E.60+]!e!!XG6guN\8XH<k.$1%dj#9/XHE'JYN;^,0L_tcYaQVnciKm!g`9k"?i:\31EshGMt&PbobpoLq\adrJQ9[&Y99TuCmRimU/d9OQ/lc%!9kZ$m($CLg$d\!%>nEX.>6>l%YP7JkAu*u69P1):.,*/)AUprW]7F_[iRae_L8S@)i:)1_s)rAQ_=A>:^!C6Z[BIc\)r]+-@Rm^+!$es!@sc,u@U"sJ%ru1EUgHr(;?HRMX;XO-=-irLY@X<g<7)].f&[V>c)5H=n/;J_h.Qe;r1EFo78$20%h7*HH96INe$k!81S`DPb2>?tWN3tYj%k?F@%.l^F,QT15L9#"hDbN">-bTl6f%1C"lR/_TJBRQZDQQ`cKQ.q@"f:h)n)7!A^]-5A4jRET^kh9<[TQZ[ffD=oU4a#C_Y.*`/bOl=r%S;9r](P1Eef4E?Gf5L?5*M.QL6@ZIK#O2\gIG0`!pf1A,Nno*cAI>RP.I?aPhJf_S)eLCjG5LY`E?_4?)!>mWJRKJ7VgH%S8V:FK%WFdobgCpVj98==a:;%S&IY<#K?XO_Vf<9<ap3Q"8aBgM9L2=MPTBUbh?ct`RM1/=/<r\Fudc"'NmahhPS^UsCd>8qunNg8E>8Reg%NIVBu89iDWm:5f47UlqT&nd!M<_4q+cI\G9WK=rKda*jl^aE*A3"fd5oP?_;qfV(O^/a;m0!7[.6)-RekD7J_UDh<AV@<08`s*QP%c*V8*JI8Fu\+<R*Q-c;JKX<d*qbdj-p^4LI30,:4b8UK4>.[iB;3i.H3K4&l+gZ.r\mZ'D>(Gsel)Pd@^@Li(4lrK0V"$Kj*a68U%g'EPgI)&'pr;?h;.MNkockiDA9npUoP]gi0^&>OkMY5ORT*.^n_ir@t=LW2,%JFASm:nTOHg&?*U"Lkj\*K&;qc<NO0pZ#<cg3I5%72=5Hr5(+@(<Gd7<#@j=5i;F,U_=jt8;`.sV14t)9X/ujXDoaR@Q-b666YIU#W>_P"&[_TOB#d&oj=13bPqW[,oIsA&KoK7&]0)$%&.?l=8@LXUHX4**/UkJ5R\O$[VsY<<(u>`8eZ"M"E$>3Yh0FPj9YKu:Wjjn*LXr%#0ta$OTAq;P%6Jt&Aa9h#10bV)2uHi9nF4r.%,Pp/S?0H3Oo]cZ3C7o1DCr8+,5(^Zr0OgW^:aA$gPM9<sI1^u3,&asVp/n]*?Q5\@"?JFn!Z0K*Jc:=<T(P#[k@9#%n[`CaiR_Di%A=+A`8$mrQW<i8.Cli`>P]FI*M^8^=a2S.Zfj8RZd"4eeM-nFpOS90T0/[@!q&(i<=B1F@`1cf#%Paq_[i0&qp3M5)W+Z?J4k,8t%oeH&M;i&8OISN"j_f[TD)LlUWM@u%(/.1q)?bhW)59[/=pb;(3#^+a<YPH7,VS>86D"([GapX8JrLk%=OY_)[>W)4':Z[e3+,<:k%K#qk3N1bsFAXE)XY&HG:32m6Vc#8qOULY>Z7Ds#O5s[B@H5dP%b?_djM@o-+U4^@V(bp4Z[]@tsSR"qcIN'!?jYaO5%`SIf?b;sJ%'HJ+t`<^cd<!YR]EDTWuT;MLYW%'MD#"=doe'QoP+'aG-1nf'BfUj3!O+&/T78569f'*Xl+Q%+q.M!Ah0V)8/M_JYB4$D7p8<'p$%R1>AbRfLn1l+VNbY5Q(oVd3;ij)lNk1&Ta;\bkor8C^k[>HG;$0$=h=D10;%q-/!B_.!9`^fYSPkWJCjgeLNc]<C'WN-;snS:C:j%$E1/b"3@r52SVe5WsBfp-C9boB,MgA>2^=Q=#X_kcJKs$F64@KG$AR]?FWH=3:F<9Ib!;`D>9s6O&Pe]pj))t<k%%il4W5GJ+Wj5%-gJu2/$9@!^h>QhET^P$!H[k\/Yh6VK9pKPn[^oUY@"o7WsbM_iI.(B<J:7.3+=uI5%7XE0tSqUI!p:<7>.BTV*7`q=8=2N=AY;V%-)/_9,c>gFIq3GCQau5bBWP+C?O(5MIuDJT\[ago]OKFACfu&n`9QXAheZ:F&tjAAdC2i9IW_/M+:9S(m1I:1:<"<sa)u/&WV"2#%j9W)fG[7VgGVuVR\!A>39!MNJ6V<rdF9)GXC\/Jfh7E9`EkbAg[/;e/(`V^qJ/-lXC0_oqYAXmK@QO@QYYha;W3h@2<`uc^<kC;s%k"$hXfei>7T6"Bn4)T*L6_VF<BAVFdoYGLe;$5+=W5YsFX:M(c_JO2HFGDu#5Mkh$K$8JXOs;B.N<12@Cc2,4:-u$b163a6qUfKT%^b"@;Y7\:c1SJ\`/LWk>pTTjB*8sdLF53Gpr=*.&BD?9$\'WO'RdsOdHC(B3h5BU[c@0u0djVCWU4;F;QB^QT,mFfoZM5VdL`Ft$%e#b+@U4Y*g'VV+j6lG/LZob\Z"tIZnL?'9o2jt,^-VD4+Eg5cfDd8'l[X-nAG>[hmI1JOU+ar\-K3eF:'!poUkh61ZTj7&22j"gV%bfY<MH]3b)_QL^21plc65m%#A&fu[S?)tZ,TKgBo=sLRkQO1Rof!>]cXi5!W_S8NN^,sh7dg0h.*#]HjRo:r(CT[`m8k_7ePgKf]%5QD^N<IfH/a"t?3D4VtP'Q2\FEa6Wp\8<^C\`Yk,(i*MA=<jLc6B2-b+ih%`i-^1tgCaVP$9>O`_@9kUOCLFq(*E8djB\kI&K7:I%pBXI-DZ?[`X=<.b)Un,PM]9,H%?5l_8dfAb@L>*OTEmM`i"1u:IHV;pg];5,^5]+((;_R3G(UuF2LlB@]7-h7!S9,_V;cg5.rmS!%=1Ic).R7*5%a[[p$Q:[8[g8du?%q^Ule2uS)ZSLs7C[=;L\L+_HO%HReA(ctdD49^*>oc6^tcr]:\C<h*]^;'f?4W:fYJ`^GQS[r%"LRp0,@c]]3iQPTq2A;o_B3sa,;t:jmp9N&g78ao/DRD^jeqLn7SKX)c?'OS2Pa<-iN-^&>NFB8H:8F8AUH+$[t]_u>^+G@72qlB%_73NFjm6<CaS-Y;cifH_*#+e`mnrZL)j(HRW_e9*MG,j"7Xr)q%]u*OFc9#$11j+sF`o2+a@$CrnhDnN6b0e07jcr2^HaAj]g9.c%LIF40-Q9ED1'.3?)QD'qR:sEPECD4CNP)GrAE!eR13$`h;t>[bNS)h7CAQrC?lZ)2"#6aIO5%4UTqF&d0)i*fZ;:&.L*P4K`Z_9F%TMP4G4bff86$D7:W!3"YPuc2d&l=Vm79lPjgYQmT[`877CKD#V:X(4_*NgpO%d8J#AnLb?6XTu5Yf@^tQtXJ(1KRtYoj)p#9E8l@%Bi\d(2N\]BGg<F2iZ2W]N"5[_K"9d!0Xn4A4eh(N*!EM+;L,fj.?S./m0>sm_2B]SKI[[[*j-HjAH1:o._XS(2rn`/NgMEZq(>_W%_A7RHEiDtFmOBsVXr-s3CZM(jY>EY?lIH=gh=C>VOL[I@:USb4DXD?Ym5fUs->:)BCHuX2[7;'V=`65q@F9nFg354SD]niheeep$%.%#(u?TTGOlk;6GiHdo)$UK<.km5JW@NOBM=P5rL)gP?[3Y>t>A`N"2Id/?kb[X^!D+=_^PMWdfk(]-<lP(HS%:,'5/P`kqY-Wu>%8-:&L32LFCSpKKIaER^GI:Cg-r!mSHU:Gj9lb<B;P>R)9JQCU>@5Vf^C0@LjY;Rbm?H^I@]Yh%]7u?#Dh(BH;n]-Z/$+-b'.7VMU%=af:>4KuW_"q<ra^1b/L)Ta\>4]B)0J35=l,7ftC!TIPKiLk'5m2C8;;9YE@7NTk?/3Y%SKr##*gG[j@YB(T<okQ,hQfD"Ao!f[K%[gV`]i>Y7bY6l(ZHCs`ZS/aXT[JM5)Qa>jqp]B2j_hWDnDeP3AC*2lm03rFA4n%Zfr`WAnop:/MkY"MSa<pU/_h_7J!6-I+$Wb(/%PR!W-'"3N)Gpa:QB,pKN@dTh(FiV7n>DVa#[C9q^kDA0h94Y$eP_\^'eIRIG*dpgE9N*#(ciDo$ehQUt`A-f_LU4d^Y4UV3/`G+C%$R%uEM.KJ@q$i4FaoKG4B)&d$pX_d9j^EDGlbkW1f.l^ul<o?Id0A3`Dt)MH#j')]%m-Ztqsc^cK]B7A:`T'2E-T.S]6Eb`ptL[d%!+W'7d*R(`kZ7+9f"9pfk-]CBD`@=K3`lf1cF\Wgk@#X$mY0d`O*,X%f[)+,;7jm%M<@!eH&ampj)FIn*hV@:33F`>k4Nd:.%4@h%aXRHgXno7DoX=0Ilj(&&=LrN8k\ZG&1L>7LI\$)%$c6:h;J@\qUr!P5o14E,n.Wnj>O.<c.k(XdT<7:_0R75F&a/I//l^1m"/7l`%GKJf!;RYJ4/556cTr&ME?`m#jH2)t!\M@T2TX%+C+,aBfiLs=Jb4'G6]/"b#T6L6,LZs(AaDb9=g[J_#]Yd+?DWi`4G+_(YdAKZk%+Y@0)Jrp=[J_-=]L?Z4!(L1nOde^<e_]Om/E[h)/HTKTuO'RjnS/4)R3<q7`SC\FWFXLL+>\Es2NgF%.s8BuE>%F!<+G%kZ=QAuN%#"H$V<CaaL0Vb&KmBJW1nTeInJ:8e8n#8gAU9.1(Bs1OKqsr57YeU",1&Mfc]!`Y.nh\+mg9UkQC(uLggA(LHFCjCe5c#r;^Xa'e%YGVkece$qE"R5]5hA+Xd%UF7ca)t[+[Hk<m[?JWUUBgXRh7?@bs6S"%BoSbW&UEU(&QGq(Nj=6/QI3@K4hu,M54>WXs*A6Immq=G%j%4''K56+oQQ\KNNUR3TH2k;>L`""ueEuHqNOM:T\?I0ki<Bb)*FL-F?bb1@S$/`-4ULt2\]pPjf,)@`3"5)d=^LLCYNh+uIq]qs%5X4`&K)Sq@8&`Y947pK[h@G=p7j#n`dlOlY5rs#1cs9;bI>3XJpjO(aeA`RL+YS-XL'&F$1>ZA'XmqY<9]If/jDUhu^a!b*MO!TF%!/k&agMQ#Ba8K)C!#0'=\dc=N3nsBNCR,I@4nLdHpQo[d_2b-A6G^iaJ_0%*_q]A,VdA*>p8ubB^NTbtHgAjt&WIl]m"1rRlB$cB%S'M)SIW7O0>,(k_N([<eiZ5c"qL&4nH>epOILihW52,=F]3Wh_f6Rr;ceKSfgnj4]\K+"dFn@_&ON/7lVo(A*]$oUBL"#!8Mr$[,%Mn->Ihgb7k(Ou%keGo5Lrp][N^\bLts7,F,\%h]rs7LU9nGE7GO2(S4?[i$q[t"29hu2g6?[ha)5Ci:pp]'^X044_;O2(_XJ,-!,%rr1)*s$-PUrrG,uM9GqY0E0.ErL`!HJ+sfHEr~>%AI9_PrivateDataEnd